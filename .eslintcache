[{"C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\index.js":"1","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\App.js":"2","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\reportWebVitals.js":"3","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\context\\ThemeContext.js":"4","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\context\\ThemeDemo.js":"5","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Home.js":"6","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Visualisation\\Index.js":"7","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\Index.js":"8","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\PatientLineList.js":"9","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\LaboratoryReport.js":"10","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\Radet.js":"11","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\PrepReport.js":"12","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\Appointment.js":"13","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\PharmacyReport.js":"14","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\HTSReport.js":"15","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\ClinicData.js":"16","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\ClientVerification.js":"17","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\TbReport.js":"18","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\PmtctHtsReport.js":"19","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\BiometricReport.js":"20","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\IndexElicitation.js":"21","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\PmtctMaternalCohortReport.js":"22","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\api.js":"23","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\EACReport.js":"24","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\NcdReport.js":"25","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\AhdReport.js":"26","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\PrepLongitudinalReport.js":"27","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\MhpssReport.js":"28","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\KpPrevReport.js":"29","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\HtsRegister.js":"30","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\HIVSTReport.js":"31","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\HTSIndexReport.js":"32","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\CustomReport.js":"33","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Shared\\Scrollable.js":"34"},{"size":753,"mtime":1700812866159,"results":"35","hashOfConfig":"36"},{"size":847,"mtime":1700812866156,"results":"37","hashOfConfig":"36"},{"size":375,"mtime":1700812873175,"results":"38","hashOfConfig":"36"},{"size":9235,"mtime":1700812866279,"results":"39","hashOfConfig":"36"},{"size":3056,"mtime":1700812866282,"results":"40","hashOfConfig":"36"},{"size":1540,"mtime":1700812873136,"results":"41","hashOfConfig":"36"},{"size":6329,"mtime":1700812873164,"results":"42","hashOfConfig":"36"},{"size":22463,"mtime":1718266903193,"results":"43","hashOfConfig":"36"},{"size":6659,"mtime":1700812873153,"results":"44","hashOfConfig":"36"},{"size":6628,"mtime":1700812873151,"results":"45","hashOfConfig":"36"},{"size":8640,"mtime":1700812873160,"results":"46","hashOfConfig":"36"},{"size":9255,"mtime":1700812873157,"results":"47","hashOfConfig":"36"},{"size":16796,"mtime":1700812873138,"results":"48","hashOfConfig":"36"},{"size":6618,"mtime":1700812873155,"results":"49","hashOfConfig":"36"},{"size":9224,"mtime":1700812873146,"results":"50","hashOfConfig":"36"},{"size":8094,"mtime":1700812873144,"results":"51","hashOfConfig":"36"},{"size":5900,"mtime":1704814909223,"results":"52","hashOfConfig":"36"},{"size":7330,"mtime":1710254877203,"results":"53","hashOfConfig":"36"},{"size":9292,"mtime":1710254877199,"results":"54","hashOfConfig":"36"},{"size":7838,"mtime":1710254877192,"results":"55","hashOfConfig":"36"},{"size":9486,"mtime":1710254877197,"results":"56","hashOfConfig":"36"},{"size":9341,"mtime":1710254877201,"results":"57","hashOfConfig":"36"},{"size":433,"mtime":1710254877190,"results":"58","hashOfConfig":"36"},{"size":7332,"mtime":1710506716855,"results":"59","hashOfConfig":"36"},{"size":7330,"mtime":1711635869012,"results":"60","hashOfConfig":"36"},{"size":9225,"mtime":1712172611808,"results":"61","hashOfConfig":"36"},{"size":9321,"mtime":1712402613754,"results":"62","hashOfConfig":"36"},{"size":9308,"mtime":1717009248460,"results":"63","hashOfConfig":"36"},{"size":9268,"mtime":1717016526329,"results":"64","hashOfConfig":"36"},{"size":9290,"mtime":1717529957170,"results":"65","hashOfConfig":"36"},{"size":9265,"mtime":1718138397972,"results":"66","hashOfConfig":"36"},{"size":9287,"mtime":1718138431528,"results":"67","hashOfConfig":"36"},{"size":9213,"mtime":1718293658256,"results":"68","hashOfConfig":"36"},{"size":2686,"mtime":1718276988144,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"73"},"bul8ze",{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"73"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"73"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"73"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"73"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"73"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"73"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"73"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"73"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"73"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"73"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"73"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"73"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"73"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"73"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"73"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"73"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"73"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"73"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"73"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"73"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"73"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"73"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162"},"C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\index.js",["163"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter, MemoryRouter as Router,} from 'react-router-dom';\r\n\r\nimport reportWebVitals from \"./../src/main/webapp/reportWebVitals\";\r\nimport SimpleReactLightbox from \"simple-react-lightbox\";\r\nimport  ThemeContext  from \"./../src/main/webapp/context/ThemeContext\"; \r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\r\n            <SimpleReactLightbox>\r\n                <BrowserRouter basename='/'>\r\n                    <ThemeContext>\r\n                        <App />\r\n                    </ThemeContext>  \r\n                </BrowserRouter>\r\n            </SimpleReactLightbox>\r\n\r\n\t</React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\nreportWebVitals();\r\n",["164","165"],"C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\App.js",[],"C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\reportWebVitals.js",[],"C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\context\\ThemeContext.js",[],"C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\context\\ThemeDemo.js",[],"C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Home.js",[],"C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Visualisation\\Index.js",["166","167","168","169","170"],"import React, { useState } from \"react\";\r\nimport {Card,CardBody,} from \"reactstrap\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {  Icon, Button, Breadcrumb} from 'semantic-ui-react';\r\nimport {Form,Row,Col,FormGroup,Label,Input, FormFeedback} from 'reactstrap';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    root: {\r\n        '& > *': {\r\n          margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}))\r\n\r\nconst GenerateCharts = (props) => {\r\n    const classes = useStyles()\r\n    const [loading, setLoading] = useState(false)\r\n\r\n\r\n  return (\r\n    <div >\r\n        <Card >\r\n         <CardBody>\r\n\r\n                 <Row style={{ marginTop: '20px'}}>\r\n  \r\n                    <Col md=\"3\">\r\n                    <FormGroup>\r\n                        <Label>Data Category </Label>\r\n                            <Input\r\n                                type=\"select\"\r\n                                name=\"category\"\r\n                                id=\"category\"\r\n                              \r\n                            >\r\n                                <option value=\"\"></option>\r\n                                <option value=\"indicator\"> Indicator </option>\r\n\r\n                            </Input>\r\n\r\n                    </FormGroup>\r\n                    </Col>\r\n                    <Col md=\"3\">\r\n                    <FormGroup>\r\n                        <Label>Chart Type </Label>\r\n                            <Input\r\n                                type=\"select\"\r\n                                name=\"chart_type\"\r\n                                id=\"chart_type\"\r\n                               \r\n                            >\r\n                                <option value=\"\"></option>\r\n                                <option value=\"column\"> Pie Chart</option>\r\n                                <option value=\"column\"> Bar Chart</option>\r\n                                <option value=\"column\"> Column Chart </option>\r\n                                <option value=\"column\"> Line Chart</option>\r\n                                <option value=\"column\"> Area Chart </option>\r\n                            </Input>\r\n\r\n                    </FormGroup>\r\n                    </Col>\r\n                    <Col md=\"3\">\r\n                    <FormGroup>\r\n                        <Label>Gender </Label>\r\n                            <Input\r\n                                type=\"select\"\r\n                                name=\"gender\"\r\n                                id=\"gender\"\r\n                              \r\n                            >\r\n                                <option value=\"\">All</option>\r\n                                <option value=\"Male\">Male </option>\r\n                                <option value=\"Female\"> Female </option>\r\n                               \r\n                            </Input>\r\n\r\n                    </FormGroup>\r\n                    </Col>\r\n                    <Col md=\"3\">\r\n                     <FormGroup>\r\n                            <Label for=\"exampleSelect\">Age Disaggregation</Label>\r\n                                <Input type=\"text\" name=\"age_disaggregation\" id=\"age_disaggregation\"  >\r\n                                    \r\n                                </Input>\r\n                                    <FormFeedback></FormFeedback>\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col md=\"3\">\r\n                    <FormGroup>\r\n                        <Label>Data Element </Label>\r\n                            <Input\r\n                                type=\"select\"\r\n                                name=\"data_element\"\r\n                                id=\"data_element\"\r\n                                \r\n                            >\r\n\r\n                                <option value=\"\"></option>\r\n                                <option value=\"TX_CURR\">TX_CURR </option>\r\n                                <option value=\"TX_NEW\">TX_NEW </option>\r\n                                <option value=\"PVLS_D\">PVLS_D </option>\r\n                                <option value=\"PVLS_N\">PVLS_N </option>\r\n                                <option value=\"HTS_POS\">HTS_POS </option>\r\n                                <option value=\"HTS\">HTS </option>\r\n\r\n                            </Input>\r\n\r\n                    </FormGroup>\r\n                    </Col>\r\n\r\n                    <Col md=\"3\">\r\n                    <FormGroup>\r\n                        <Label>Start Date </Label>\r\n                        <Input\r\n                            type=\"date\"\r\n                            name=\"data_element\"\r\n                            id=\"data_element\"                                \r\n                        />\r\n                    </FormGroup>\r\n                    </Col>\r\n                    <Col md=\"3\">\r\n                    <FormGroup>\r\n                        <Label>End Date </Label>\r\n                        <Input\r\n                            type=\"date\"\r\n                            name=\"data_element\"\r\n                            id=\"data_element\"                                \r\n                        /> \r\n                    </FormGroup>\r\n                    </Col>\r\n                   \r\n                    <Col style={{ marginTop: '20px'}}>\r\n                    <Button icon labelPosition='right' color='blue' >\r\n                        Generate Chart Report\r\n                    <Icon name='right arrow' />\r\n                    </Button>\r\n                    </Col>\r\n                    </Row>\r\n               \r\n                 \r\n            </CardBody>\r\n        </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GenerateCharts;\r\n\r\n\r\n\r\n","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\Index.js",["171","172","173","174","175","176"],"C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\PatientLineList.js",["177","178","179","180"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card} from \"@material-ui/core\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { Button} from 'semantic-ui-react'\r\nimport { toast} from \"react-toastify\";\r\nimport FileSaver from \"file-saver\";\r\nimport { Message, Icon } from 'semantic-ui-react'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst PatientLineList = (props) => {\r\n    let currentDate = new Date().toISOString().split('T')[0]\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false)\r\n    const [facilitiesUpdate, setFacilities] = useState([]);\r\n    const [objValues, setObjValues]=useState({       \r\n        organisationUnitId:\"\",\r\n        organisationUnitName:\"\",\r\n    })\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        setLoading(true)\r\n        axios.post(`${baseUrl}reporting/patient-line-list?facilityId=${objValues.organisationUnitId}`,objValues.organisationUnitId,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}, responseType: 'blob'},\r\n          )\r\n              .then(response => {\r\n                setLoading(false)\r\n                const fileName = `${objValues.organisationUnitName} Patient Line List ${currentDate}`\r\n                const responseData = response.data\r\n                let blob = new Blob([responseData], {type: \"application/octet-stream\"});\r\n                FileSaver.saveAs(blob, `${fileName}.xlsx`);\r\n                toast.success(\" Report generated successful\");\r\n                  //toast.success(\" Save successful\");\r\n                  //props.setActiveContent('recent-history')\r\n\r\n              })\r\n              .catch(error => {\r\n                setLoading(false)\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n              });\r\n            \r\n\r\n    }\r\n    const handleInputChange = e => {\r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value, organisationUnitName: e.target.innerText});\r\n    }\r\n    useEffect(() => {\r\n        Facilities()\r\n      }, []);\r\n    //Get list of WhoStaging\r\n    const Facilities =()=>{\r\n    axios\r\n        .get(`${baseUrl}account`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            console.log(response.data);\r\n            setFacilities(response.data.applicationUserOrganisationUnits);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });\r\n    \r\n    }\r\nconsole.log(facilitiesUpdate)\r\n    return (\r\n        <>\r\n            \r\n            <Card >\r\n                <CardBody>\r\n    \r\n                <h2 style={{color:'#000'}}>PATIENT LINE LIST</h2>\r\n                <br/>\r\n                    <form >\r\n                        <div className=\"row\">\r\n\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Facility*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"organisationUnitId\"\r\n                                        id=\"organisationUnitId\"\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {facilitiesUpdate.map((value) => (\r\n                                            <option key={value.id} value={value.organisationUnitId}>\r\n                                                {value.organisationUnitName}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                            <Button type=\"submit\" content='Generate Report' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit} disabled={objValues.organisationUnitId===\"\" ? true : false}/>\r\n                            </div>\r\n                            </div>\r\n\r\n                            {loading && (\r\n                                <Message icon>\r\n                                    <Icon name='circle notched' loading />\r\n                                <Message.Content>\r\n                                <Message.Header>Just one second</Message.Header>\r\n                                    We are fetching that content for you.\r\n                                </Message.Content>\r\n                                </Message>\r\n                            )}\r\n                        </div>\r\n                    </form>\r\n\r\n                </CardBody>\r\n            </Card>                                 \r\n        </>\r\n    );\r\n};\r\n\r\nexport default PatientLineList","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\LaboratoryReport.js",["181","182","183","184"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card} from \"@material-ui/core\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { Button} from 'semantic-ui-react'\r\nimport { toast} from \"react-toastify\";\r\nimport FileSaver from \"file-saver\";\r\nimport { Message, Icon } from 'semantic-ui-react'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst LaboratoryReport = (props) => {\r\n    let currentDate = new Date().toISOString().split('T')[0]\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false)\r\n    const [facilities, setFacilities] = useState([]);\r\n    const [objValues, setObjValues]=useState({       \r\n        organisationUnitId:\"\",\r\n        organisationUnitName:\"\"\r\n    })\r\n    useEffect(() => {\r\n        Facilities()\r\n      }, []);\r\n    //Get list of WhoStaging\r\n    const Facilities =()=>{\r\n    axios\r\n        .get(`${baseUrl}account`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setFacilities(response.data.applicationUserOrganisationUnits);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });\r\n    \r\n    }\r\n    const handleInputChange = e => {\r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value, organisationUnitName: e.target.innerText});\r\n    }\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        setLoading(true)\r\n        axios.get(`${baseUrl}reporting/laboratory/${objValues.organisationUnitId}`,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}, responseType: 'blob'},\r\n          \r\n          )\r\n              .then(response => {\r\n                setLoading(false)\r\n                const fileName = `${objValues.organisationUnitName} Laboratory ${currentDate}`\r\n                const responseData = response.data\r\n                let blob = new Blob([responseData], {type: \"application/octet-stream\"});\r\n                FileSaver.saveAs(blob, `${fileName}.xlsx`);\r\n                  //toast.success(\" Save successful\");\r\n                  //props.setActiveContent('recent-history')\r\n\r\n              })\r\n              .catch(error => {\r\n                setLoading(false)\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n              });\r\n            \r\n\r\n    }\r\n    \r\n    \r\n\r\n    return (\r\n        <>\r\n            \r\n            <Card >\r\n                <CardBody>\r\n    \r\n                <h2 style={{color:'#000'}}>LABORATORY REPORT</h2>\r\n                <br/>\r\n                    <form >\r\n                        <div className=\"row\">\r\n                        \r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>Facility*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"organisationUnitId\"\r\n                                        id=\"organisationUnitId\"\r\n                                        value={objValues.organisationUnitId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {facilities.map((value) => (\r\n                                            <option key={value.id} value={value.organisationUnitId}>\r\n                                                {value.organisationUnitName}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                            <Button type=\"submit\" content='Generate Report' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit} disabled={objValues.organisationUnitId===\"\" ? true : false}/>\r\n                            </div>\r\n                            </div>\r\n\r\n                            {loading && (\r\n                                <Message icon>\r\n                                    <Icon name='circle notched' loading />\r\n                                <Message.Content>\r\n                                <Message.Header>Just one second</Message.Header>\r\n                                    We are fetching that content for you.\r\n                                </Message.Content>\r\n                                </Message>\r\n                            )}\r\n                        </div>\r\n                    </form>\r\n\r\n                </CardBody>\r\n            </Card>                                 \r\n        </>\r\n    );\r\n};\r\n\r\nexport default LaboratoryReport","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\Radet.js",["185","186","187"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { FormGroup, Label, CardBody, Spinner, Input, Form } from \"reactstrap\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card } from \"@material-ui/core\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport { token, url as baseUrl } from \"../../../api\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport { toast } from \"react-toastify\";\r\nimport FileSaver from \"file-saver\";\r\nimport { Message, Icon } from \"semantic-ui-react\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n    maxWidth: 752,\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n}));\r\n\r\nconst PatientLineList = (props) => {\r\n  let currentDate = new Date().toISOString().split(\"T\")[0];\r\n  const classes = useStyles();\r\n  const [loading, setLoading] = useState(false);\r\n  const [facilities, setFacilities] = useState([]);\r\n  const [status, setStatus] = useState(true);\r\n  const [objValues, setObjValues] = useState({\r\n    organisationUnitId: \"\",\r\n    organisationUnitName: \"\",\r\n    startDate: \"\",\r\n    endDate: \"\",\r\n  });\r\n  useEffect(() => {\r\n    Facilities();\r\n  }, []);\r\n  //Get list of WhoStaging\r\n  const Facilities = () => {\r\n    axios\r\n      .get(`${baseUrl}account`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setFacilities(response.data.applicationUserOrganisationUnits);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    //1980-01-01\r\n    console.log(e.target.innerText, e.target.name, e.target.name);\r\n    if (e.target.name === \"organisationUnitId\") {\r\n      localStorage.setItem(\"facility\", JSON.stringify(e.target.innerText));\r\n    } else {\r\n      setObjValues({\r\n        ...objValues,\r\n        [e.target.name]: e.target.value,\r\n        organisationUnitName: e.target.innerText,\r\n      });\r\n    }\r\n    setObjValues({\r\n      ...objValues,\r\n      [e.target.name]: e.target.value,\r\n      organisationUnitName: e.target.innerText,\r\n    });\r\n  };\r\n\r\n  const handleValueChange = () => {\r\n    setStatus(!status);\r\n\r\n    if (status === true) {\r\n      setObjValues({\r\n        ...objValues,\r\n        startDate: \"1980-01-01\",\r\n        endDate: currentDate,\r\n      });\r\n    } else {\r\n      setObjValues({ ...objValues, startDate: \"\", endDate: currentDate });\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n\r\n    console.log(objValues);\r\n\r\n    axios\r\n      .get(\r\n        `${baseUrl}reporting/radet?facilityId=${objValues.organisationUnitId}&startDate=${objValues.startDate}&endDate=${objValues.endDate}`,\r\n        { headers: { Authorization: `Bearer ${token}` }, responseType: \"blob\" }\r\n      )\r\n      .then((response) => {\r\n        setLoading(false);\r\n        const facilityName = JSON.parse(localStorage.getItem(\"facility\"));\r\n        // console.log(facilityName);\r\n        const fileName = `${facilityName} Radet ${currentDate}`;\r\n        const responseData = response.data;\r\n        let blob = new Blob([responseData], {\r\n          type: \"application/octet-stream\",\r\n        });\r\n\r\n        FileSaver.saveAs(blob, `${fileName}.xlsx`);\r\n        toast.success(\"Radet Report generated successful\");\r\n        //props.setActiveContent('recent-history')\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n        if (error.response && error.response.data) {\r\n          let errorMessage =\r\n            error.response.data.apierror &&\r\n            error.response.data.apierror.message !== \"\"\r\n              ? error.response.data.apierror.message\r\n              : \"Something went wrong, please try again\";\r\n          toast.error(errorMessage);\r\n        } else {\r\n          toast.error(\"Something went wrong. Please try again...\");\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardBody>\r\n          <h2 style={{ color: \"#000\" }}>RADET REPORT</h2>\r\n          <br />\r\n          <form>\r\n            <div className=\"row\">\r\n              <div className=\"form-group  col-md-6\">\r\n                <FormGroup>\r\n                  <Label>From *</Label>\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control\"\r\n                    name=\"startDate\"\r\n                    id=\"startDate\"\r\n                    min={\"1980-01-01\"}\r\n                    max={currentDate}\r\n                    value={objValues.startDate}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-6\">\r\n                <FormGroup>\r\n                  <Label>To *</Label>\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control\"\r\n                    name=\"endDate\"\r\n                    id=\"endDate\"\r\n                    min={\"1980-01-01\"}\r\n                    max={currentDate}\r\n                    //min={objValues.startDate}\r\n                    value={objValues.endDate}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-6\">\r\n                <FormGroup check>\r\n                  <Label check>\r\n                    <Input type=\"checkbox\" onChange={handleValueChange} />{\" \"}\r\n                    &nbsp;&nbsp;<span> As at Today.</span>\r\n                  </Label>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-6\">\r\n                <FormGroup>\r\n                  <Label>Facility*</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"organisationUnitId\"\r\n                    id=\"organisationUnitId\"\r\n                    value={objValues.organisationUnitId}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    {facilities.map((value) => (\r\n                      <option key={value.id} value={value.organisationUnitId}>\r\n                        {value.organisationUnitName}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <br />\r\n              <div className=\"row\">\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                  <Button\r\n                    type=\"submit\"\r\n                    content=\"Generate Report\"\r\n                    icon=\"right arrow\"\r\n                    labelPosition=\"right\"\r\n                    style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n                    onClick={handleSubmit}\r\n                    disabled={\r\n                      objValues.organisationUnitId === \"\" ? true : false\r\n                    }\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              {loading && (\r\n                <Message icon>\r\n                  <Icon name=\"circle notched\" loading />\r\n                  <Message.Content>\r\n                    <Message.Header>Just one second</Message.Header>\r\n                    We are fetching that content for you.\r\n                  </Message.Content>\r\n                </Message>\r\n              )}\r\n            </div>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PatientLineList;\r\n","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\PrepReport.js",["188","189","190"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card} from \"@material-ui/core\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { Button} from 'semantic-ui-react'\r\nimport { toast} from \"react-toastify\";\r\nimport FileSaver from \"file-saver\";\r\nimport { Message, Icon } from 'semantic-ui-react'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\nconst PrepReport = (props) => {\r\n    let currentDate = new Date().toISOString().split('T')[0]\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false)\r\n    const [facilities, setFacilities] = useState([]);\r\n    const [status, setStatus] = useState(true);\r\n    const [objValues, setObjValues]=useState({\r\n        organisationUnitId:\"\",\r\n        organisationUnitName:\"\",\r\n        startDate:\"\",\r\n        endDate: \"\"\r\n    })\r\n    useEffect(() => {\r\n        Facilities()\r\n      }, []);\r\n    //Get list of WhoStaging\r\n    const Facilities =()=>{\r\n    axios\r\n        .get(`${baseUrl}account`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            console.log(response.data);\r\n            setFacilities(response.data.applicationUserOrganisationUnits);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });\r\n    }\r\n\r\n    const handleInputChange = e => {\r\n        //1980-01-01\r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value, organisationUnitName: e.target.innerText});\r\n    }\r\n\r\n    const handleValueChange = () => {\r\n        setStatus(!status)\r\n\r\n        if (status === true) {\r\n          setObjValues ({...objValues,  startDate: \"1980-01-01\", endDate: currentDate});\r\n        } else {\r\n          setObjValues ({...objValues,  startDate: \"\", endDate: currentDate});\r\n        }\r\n\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true)\r\n        //console.log(token);\r\n\r\n        axios.post(`${baseUrl}prep-reporting?facilityId=${objValues.organisationUnitId}&startDate=${objValues.startDate}&endDate=${objValues.endDate}`,objValues.organisationUnitId,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}, responseType: 'blob'},\r\n        )\r\n          .then(response => {\r\n            setLoading(false)\r\n            const fileName =`${objValues.organisationUnitName} Prep ${currentDate}`\r\n            const responseData = response.data\r\n            let blob = new Blob([responseData], {type: \"application/octet-stream\"});\r\n\r\n            FileSaver.saveAs(blob, `${fileName}.xlsx`);\r\n            toast.success(\"Prep Report generated successfully\");\r\n          })\r\n          .catch(error => {\r\n            setLoading(false)\r\n            if(error.response && error.response.data){\r\n                let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                toast.error(errorMessage);\r\n              }\r\n              else{\r\n                toast.error(\"Something went wrong. Please try again...\");\r\n              }\r\n          });\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <Card >\r\n                <CardBody>\r\n\r\n                <h2 style={{color:'#000'}}>Prep REPORT</h2>\r\n                <br/>\r\n                    <form >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>From *</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"startDate\"\r\n                                        id=\"startDate\"\r\n                                        min={\"1980-01-01\"}\r\n                                        max={currentDate}\r\n                                        value={objValues.startDate}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>To *</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"endDate\"\r\n                                        id=\"endDate\"\r\n                                        min={\"1980-01-01\"}\r\n                                        max={currentDate}\r\n                                        //min={objValues.startDate}\r\n                                        value={objValues.endDate}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                 <FormGroup check>\r\n                                  <Label check>\r\n                                    <Input type=\"checkbox\" onChange={handleValueChange}/>\r\n                                     {' '} &nbsp;&nbsp;<span> As at Today.</span>\r\n                                  </Label>\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>Facility*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"organisationUnitId\"\r\n                                        id=\"organisationUnitId\"\r\n                                        value={objValues.organisationUnitId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {facilities.map((value) => (\r\n                                            <option key={value.id} value={value.organisationUnitId}>\r\n                                                {value.organisationUnitName}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n\r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                            <Button type=\"submit\" content='Generate Report' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit} disabled={objValues.organisationUnitId===\"\" ? true : false}/>\r\n                            </div>\r\n                            </div>\r\n\r\n                            {loading && (\r\n                                <Message icon>\r\n                                    <Icon name='circle notched' loading />\r\n                                <Message.Content>\r\n                                <Message.Header>Just one second</Message.Header>\r\n                                    We are fetching that content for you.\r\n                                </Message.Content>\r\n                                </Message>\r\n                            )}\r\n                        </div>\r\n                    </form>\r\n\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PrepReport","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\Appointment.js",["191","192","193","194"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card} from \"@material-ui/core\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { Button} from 'semantic-ui-react'\r\nimport MaterialTable from 'material-table';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { forwardRef } from 'react';\r\nimport { toast} from \"react-toastify\";\r\nimport { Message, Icon } from 'semantic-ui-react'\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n    };\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst Appointment = (props) => {\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false)\r\n    const [showContent, setShowContent] = useState(false)\r\n    const [appointmentReport, setAppointmentReport]= useState([])\r\n    const [facilities, setFacilities] = useState([]);\r\n    const [tableTitle, setTableTitle]= useState(\"\");\r\n    const [showNoRecord, setShowNoRecord]= useState(false)\r\n    const [objValues, setObjValues]=useState({       \r\n        facilityId:\"\", startDate:\"\", endDate:\"\", type:\"\"\r\n    })\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        setLoading(true)\r\n        axios.get(`${baseUrl}reporting/${objValues.type}?facilityId=${objValues.facilityId}&startDate=${objValues.startDate}&endDate=${objValues.endDate} `,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {                \r\n                setLoading(false)\r\n                setShowContent(true)\r\n                if(objValues.type==='miss-refill'){\r\n                    setTableTitle(`Missed Refill Appointment  -  From :${objValues.startDate}  - To: ${objValues.endDate}`)\r\n                }else if(objValues.type==='miss-clinic'){\r\n                    setTableTitle(`Missed Clinic Appointment   -  From :${objValues.startDate}  - To: ${objValues.endDate}`)\r\n                }else if(objValues.type==='clinic-appointment'){\r\n                    setTableTitle(`Clinic Appointment   -  From :${objValues.startDate}  - To: ${objValues.endDate}`)\r\n                }else if(objValues.type==='refill-appointment'){\r\n                    setTableTitle(`Refill Appointment   -  From :${objValues.startDate}  - To: ${objValues.endDate}`)\r\n                }else{\r\n                    setTableTitle('')\r\n                }\r\n                setAppointmentReport(response.data)\r\n                if(response.data.length <=0){\r\n                    setShowNoRecord(true)\r\n                }else{\r\n                    setShowNoRecord(false)\r\n                }\r\n              })\r\n              .catch(error => {\r\n                setLoading(false)\r\n                setShowContent(false)\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n              });\r\n            \r\n\r\n    }\r\n    const handleInputChange = e => {\r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n    }\r\n    useEffect(() => {\r\n        Facilities()\r\n      }, []);\r\n    //Get list of WhoStaging\r\n    const Facilities =()=>{\r\n    axios\r\n        .get(`${baseUrl}account`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setFacilities(response.data.applicationUserOrganisationUnits);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });\r\n    \r\n    }\r\n\r\n    return (\r\n        <>\r\n            \r\n            <Card >\r\n                <CardBody>\r\n    \r\n                <h2 style={{color:'#000'}}>APPOINTMENT REPORT</h2>\r\n                <br/>\r\n                    <form >\r\n                        <div className=\"row\">\r\n\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>Start Date*</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"startDate\"\r\n                                        id=\"startDate\"\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>End Date*</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"endDate\"\r\n                                        id=\"endDate\"\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n                                     \r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>Facility*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"facilityId\"\r\n                                        id=\"facilityId\"\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {facilities.map((value) => (\r\n                                            <option key={value.id} value={value.organisationUnitId}>\r\n                                                {value.organisationUnitName}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>Type*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"type\"\r\n                                        id=\"type\"\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"miss-refill\">Missed Refill Appointment</option>\r\n                                        <option value=\"miss-clinic\">Missed Clinic Appointment </option>\r\n                                        <option value=\"clinic-appointment\">Scheduled Clinic Visit(Clinic Appointment)</option>\r\n                                        <option value=\"refill-appointment\">Scheduled Refill Visit(Refill Appointment)</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                            <Button type=\"submit\" content='Generate Report' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit}\r\n                                disabled={objValues.facilityId===\"\" || objValues.startDate===\"\" || objValues.endDate===\"\"  || objValues.type===\"\" ? true : false}\r\n                            />\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n\r\n                    <br/>\r\n                    {loading && (\r\n                        <Message icon>\r\n                            <Icon name='circle notched' loading />\r\n                            <Message.Content>\r\n                            <Message.Header>Just one second</Message.Header>\r\n                            We are fetching that content for you.\r\n                            </Message.Content>\r\n                        </Message>\r\n                    )}\r\n                    {showNoRecord && (\r\n                        <Message info>\r\n                            <Message.Content>\r\n                            {/* <Message.Header>Just one second</Message.Header> */}\r\n                            <b>No Record Found</b>\r\n                            </Message.Content>\r\n                        </Message>\r\n                    )}\r\n                    {showContent &&(\r\n                        <MaterialTable\r\n                            icons={tableIcons}\r\n                            title= {tableTitle}\r\n                            columns={[\r\n                                { title: \"Name\", field: \"name\" },\r\n                                { title: \"Hospital Num\", field: \"hospitalNum\" },\r\n                                { title: \"Patient Id\", field: \"patientId\" },                                \r\n                                { title: \"DOB\", field: \"dateBirth\" },\r\n                                { title: \"Age\", field: \"age\" },\r\n                                { title: \"phone\", field: \"phone\" },\r\n                                { title: \"Art Start Date\", field: \"artStartDate\" },\r\n                                { title: \"Date Of LastVisit\", field: \"dateOfLastVisit\" },\r\n                                { title: \"Date Of NextVisit\", field: \"dateOfNextVisit\" },\r\n                                { title: \"Current Status\", field: \"currentStatus\" },\r\n                                { title: \"Case Manager\", field: \"caseManager\" },\r\n                                { title: \"Facility Name\", field: \"facilityName\" },\r\n                                { title: \"lga\", field: \"lga\" },\r\n                                { title: \"Lga Of Residence\", field: \"lgaOfResidence\" },\r\n                                { title: \"state\", field: \"state\" },\r\n                                { title: \"State Of Residence\", field: \"stateOfResidence\" },\r\n\r\n                            ]}\r\n                            isLoading={loading}\r\n                            data={appointmentReport.map((row) => ({\r\n                                name: row.name,\r\n                                hospitalNum: row.hospitalNum,\r\n                                patientId:row.patientId,\r\n                                dateBirth: row.dateBirth,\r\n                                age: row.age,\r\n                                phone: row.phone,\r\n                                artStartDate: row.artStartDate,\r\n                                dateOfLastVisit: row.dateOfLastVisit,\r\n                                dateOfNextVisit:row.dateOfNextVisit,\r\n                                currentStatus: row.currentStatus,\r\n                                caseManager: row.caseManager,\r\n                                facilityName: row.facilityName,\r\n                                lga:row.lga,\r\n                                lgaOfResidence: row.lgaOfResidence,\r\n                                state: row.state,\r\n                                stateOfResidence:row.stateOfResidence,\r\n                                \r\n                                }))}\r\n                            \r\n                                        options={{\r\n                                        headerStyle: {\r\n                                            backgroundColor: \"#014d88\",\r\n                                            color: \"#fff\",\r\n                                        },\r\n                                        searchFieldStyle: {\r\n                                            width : '100%',\r\n                                            margingLeft: '250px',\r\n                                        },\r\n                                        filtering: false,\r\n                                        exportButton: true,\r\n                                        searchFieldAlignment: 'left',\r\n                                        pageSizeOptions:[10,20,100, 500,1000,2000,3000],\r\n                                        pageSize:10,\r\n                                        debounceInterval: 400\r\n                            }}\r\n                        />\r\n                    )}\r\n                </CardBody>\r\n            </Card>                                 \r\n        </>\r\n    );\r\n};\r\n\r\nexport default Appointment","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\PharmacyReport.js",["195","196","197","198"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card} from \"@material-ui/core\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { Button} from 'semantic-ui-react'\r\nimport { toast} from \"react-toastify\";\r\nimport FileSaver from \"file-saver\";\r\nimport { Message, Icon } from 'semantic-ui-react'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst PharmacyReport = (props) => {\r\n    let currentDate = new Date().toISOString().split('T')[0]\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false)\r\n    const [facilities, setFacilities] = useState([]);\r\n    const [objValues, setObjValues]=useState({       \r\n        organisationUnitId:\"\",\r\n        organisationUnitName:\"\"\r\n    })\r\n    useEffect(() => {\r\n        Facilities()\r\n      }, []);\r\n    //Get list of WhoStaging\r\n    const Facilities =()=>{\r\n    axios\r\n        .get(`${baseUrl}account`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setFacilities(response.data.applicationUserOrganisationUnits);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });\r\n    \r\n    }\r\n    const handleInputChange = e => {\r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value, organisationUnitName: e.target.innerText});\r\n    }\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        setLoading(true)\r\n        axios.get(`${baseUrl}reporting/pharmacy/${objValues.organisationUnitId}`,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}, responseType: 'blob'},\r\n          \r\n          )\r\n              .then(response => {\r\n                setLoading(false)\r\n                const fileName = `${objValues.organisationUnitName} Pharmacy ${currentDate}`\r\n                const responseData = response.data\r\n                let blob = new Blob([responseData], {type: \"application/octet-stream\"});\r\n                FileSaver.saveAs(blob, `${fileName}.xlsx`);\r\n                  //toast.success(\" Save successful\");\r\n                  //props.setActiveContent('recent-history')\r\n\r\n              })\r\n              .catch(error => {\r\n                setLoading(false)\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n              });\r\n            \r\n\r\n    }\r\n    \r\n    \r\n\r\n    return (\r\n        <>\r\n            \r\n            <Card >\r\n                <CardBody>\r\n    \r\n                <h2 style={{color:'#000'}}>PHARMACY REPORT</h2>\r\n                <br/>\r\n                    <form >\r\n                        <div className=\"row\">\r\n                        \r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>Facility*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"organisationUnitId\"\r\n                                        id=\"organisationUnitId\"\r\n                                        value={objValues.organisationUnitId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {facilities.map((value) => (\r\n                                            <option key={value.id} value={value.organisationUnitId}>\r\n                                                {value.organisationUnitName}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                            <Button type=\"submit\" content='Generate Report' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit} disabled={objValues.organisationUnitId===\"\" ? true : false}/>\r\n                            </div>\r\n                            </div>\r\n\r\n                            {loading && (\r\n                                <Message icon>\r\n                                    <Icon name='circle notched' loading />\r\n                                <Message.Content>\r\n                                <Message.Header>Just one second</Message.Header>\r\n                                    We are fetching that content for you.\r\n                                </Message.Content>\r\n                                </Message>\r\n                            )}\r\n                        </div>\r\n                    </form>\r\n\r\n                </CardBody>\r\n            </Card>                                 \r\n        </>\r\n    );\r\n};\r\n\r\nexport default PharmacyReport","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\HTSReport.js",["199","200","201"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card} from \"@material-ui/core\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { Button} from 'semantic-ui-react'\r\nimport { toast} from \"react-toastify\";\r\nimport FileSaver from \"file-saver\";\r\nimport { Message, Icon } from 'semantic-ui-react'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\nconst HTSReport = (props) => {\r\n    let currentDate = new Date().toISOString().split('T')[0]\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false)\r\n    const [facilities, setFacilities] = useState([]);\r\n    const [status, setStatus] = useState(true);\r\n    const [objValues, setObjValues]=useState({\r\n        organisationUnitId:\"\",\r\n        organisationUnitName:\"\",\r\n        startDate:\"\",\r\n        endDate: \"\"\r\n    })\r\n    useEffect(() => {\r\n        Facilities()\r\n      }, []);\r\n    //Get list of WhoStaging\r\n    const Facilities =()=>{\r\n    axios\r\n        .get(`${baseUrl}account`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n        console.log(response.data);\r\n            setFacilities(response.data.applicationUserOrganisationUnits);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });\r\n\r\n    }\r\n\r\n    const handleInputChange = e => {\r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value, organisationUnitName: e.target.innerText});\r\n    }\r\n\r\n    const handleValueChange = () => {\r\n        setStatus(!status)\r\n\r\n        if (status === true) {\r\n          setObjValues ({...objValues,  startDate: \"1980-01-01\", endDate: currentDate});\r\n        } else {\r\n          setObjValues ({...objValues,  startDate: \"\", endDate: currentDate});\r\n        }\r\n\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true)\r\n        console.log(token);\r\n\r\n        axios.post(`${baseUrl}hts-reporting?facilityId=${objValues.organisationUnitId}&startDate=${objValues.startDate}&endDate=${objValues.endDate}`,objValues.organisationUnitId,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}, responseType: 'blob'},\r\n        )\r\n          .then(response => {\r\n            setLoading(false)\r\n            const fileName = `${objValues.organisationUnitName} HTS ${currentDate}`\r\n            const responseData = response.data\r\n            let blob = new Blob([responseData], {type: \"application/octet-stream\"});\r\n\r\n            FileSaver.saveAs(blob, `${fileName}.xlsx`);\r\n            toast.success(\"HTS Report generated successfully\");\r\n          })\r\n          .catch(error => {\r\n            setLoading(false)\r\n            if(error.response && error.response.data){\r\n                let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                toast.error(errorMessage);\r\n              }\r\n              else{\r\n                toast.error(\"Something went wrong. Please try again...\");\r\n              }\r\n          });\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <Card >\r\n                <CardBody>\r\n\r\n                <h2 style={{color:'#000'}}>HTS REPORT</h2>\r\n                <br/>\r\n                    <form >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>From *</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"startDate\"\r\n                                        id=\"startDate\"\r\n                                        min={\"1980-01-01\"}\r\n                                        max={currentDate}\r\n                                        value={objValues.startDate}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>To *</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"endDate\"\r\n                                        id=\"endDate\"\r\n                                        min={\"1980-01-01\"}\r\n                                        max={currentDate}\r\n                                        //min={objValues.startDate}\r\n                                        value={objValues.endDate}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                 <FormGroup check>\r\n                                  <Label check>\r\n                                    <Input type=\"checkbox\" onChange={handleValueChange}/>\r\n                                     {' '} &nbsp;&nbsp;<span> As at Today.</span>\r\n                                  </Label>\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>Facility*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"organisationUnitId\"\r\n                                        id=\"organisationUnitId\"\r\n                                        value={objValues.organisationUnitId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {facilities.map((value) => (\r\n                                            <option key={value.id} value={value.organisationUnitId}>\r\n                                                {value.organisationUnitName}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n\r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                            <Button type=\"submit\" content='Generate Report' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit} disabled={objValues.organisationUnitId===\"\" ? true : false}/>\r\n                            </div>\r\n                            </div>\r\n\r\n                            {loading && (\r\n                                <Message icon>\r\n                                    <Icon name='circle notched' loading />\r\n                                <Message.Content>\r\n                                <Message.Header>Just one second</Message.Header>\r\n                                    We are fetching that content for you.\r\n                                </Message.Content>\r\n                                </Message>\r\n                            )}\r\n                        </div>\r\n                    </form>\r\n\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default HTSReport","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\ClinicData.js",["202","203","204","205","206"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { FormGroup, Label, CardBody, Spinner, Input, Form } from \"reactstrap\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card } from \"@material-ui/core\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport { token, url as baseUrl } from \"../../../api\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport { toast } from \"react-toastify\";\r\nimport FileSaver from \"file-saver\";\r\nimport { Message, Icon } from \"semantic-ui-react\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n    maxWidth: 752,\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n}));\r\n\r\nconst ClinicData = (props) => {\r\n  let currentDate = new Date().toISOString().split(\"T\")[0];\r\n  const classes = useStyles();\r\n  const [loading, setLoading] = useState(false);\r\n  const [facilities, setFacilities] = useState([]);\r\n  const [status, setStatus] = useState(true);\r\n  const [objValues, setObjValues] = useState({\r\n    organisationUnitId: \"\",\r\n    organisationUnitName: \"\",\r\n    startDate: \"\",\r\n    endDate: \"\",\r\n  });\r\n  useEffect(() => {\r\n    Facilities();\r\n  }, []);\r\n  //Get list of WhoStaging\r\n  const Facilities = () => {\r\n    axios\r\n      .get(`${baseUrl}account`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setFacilities(response.data.applicationUserOrganisationUnits);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    //1980-01-01\r\n    setObjValues({\r\n      ...objValues,\r\n      [e.target.name]: e.target.value,\r\n      organisationUnitName: e.target.innerText,\r\n    });\r\n  };\r\n\r\n  const handleValueChange = () => {\r\n    setStatus(!status);\r\n\r\n    if (status === true) {\r\n      setObjValues({\r\n        ...objValues,\r\n        startDate: \"1980-01-01\",\r\n        endDate: currentDate,\r\n      });\r\n    } else {\r\n      setObjValues({ ...objValues, startDate: \"\", endDate: currentDate });\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    //console.log(token);\r\n\r\n    axios\r\n      .get(`${baseUrl}reporting/clinic-data/${objValues.organisationUnitId}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n        responseType: \"blob\",\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n        setLoading(false);\r\n        const fileName = `${objValues.organisationUnitName} Clinic Data ${currentDate}`;\r\n        const responseData = response.data;\r\n        let blob = new Blob([responseData], {\r\n          type: \"application/octet-stream\",\r\n        });\r\n\r\n        FileSaver.saveAs(blob, `${fileName}.xlsx`);\r\n        toast.success(\"Clinic data generated successfully\");\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n        if (error.response && error.response.data) {\r\n          let errorMessage =\r\n            error.response.data.apierror &&\r\n            error.response.data.apierror.message !== \"\"\r\n              ? error.response.data.apierror.message\r\n              : \"Something went wrong, please try again\";\r\n          toast.error(errorMessage);\r\n        } else {\r\n          toast.error(\"Something went wrong. Please try again...\");\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardBody>\r\n          <h2 style={{ color: \"#000\" }}>CLINIC DATA REPORT</h2>\r\n          <br />\r\n          <form>\r\n            <div className=\"row\">\r\n              {/* <div className=\"form-group  col-md-6\">\r\n                <FormGroup>\r\n                  <Label>From *</Label>\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control\"\r\n                    name=\"startDate\"\r\n                    id=\"startDate\"\r\n                    min={\"1980-01-01\"}\r\n                    max={currentDate}\r\n                    value={objValues.startDate}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-6\">\r\n                <FormGroup>\r\n                  <Label>To *</Label>\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control\"\r\n                    name=\"endDate\"\r\n                    id=\"endDate\"\r\n                    min={\"1980-01-01\"}\r\n                    max={currentDate}\r\n                    //min={objValues.startDate}\r\n                    value={objValues.endDate}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-6\">\r\n                <FormGroup check>\r\n                  <Label check>\r\n                    <Input type=\"checkbox\" onChange={handleValueChange} />{\" \"}\r\n                    &nbsp;&nbsp;<span> As at Today.</span>\r\n                  </Label>\r\n                </FormGroup>\r\n              </div> */}\r\n              <div className=\"form-group  col-md-6\">\r\n                <FormGroup>\r\n                  <Label>Facility*</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"organisationUnitId\"\r\n                    id=\"organisationUnitId\"\r\n                    value={objValues.organisationUnitId}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    {facilities.map((value) => (\r\n                      <option key={value.id} value={value.organisationUnitId}>\r\n                        {value.organisationUnitName}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <br />\r\n              <div className=\"row\">\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                  <Button\r\n                    type=\"submit\"\r\n                    content=\"Generate Report\"\r\n                    icon=\"right arrow\"\r\n                    labelPosition=\"right\"\r\n                    style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n                    onClick={handleSubmit}\r\n                    disabled={\r\n                      objValues.organisationUnitId === \"\" ? true : false\r\n                    }\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              {loading && (\r\n                <Message icon>\r\n                  <Icon name=\"circle notched\" loading />\r\n                  <Message.Content>\r\n                    <Message.Header>Just one second</Message.Header>\r\n                    We are fetching that content for you.\r\n                  </Message.Content>\r\n                </Message>\r\n              )}\r\n            </div>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ClinicData;\r\n","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\ClientVerification.js",["207","208","209","210"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { FormGroup, Label, CardBody, Spinner, Input, Form } from \"reactstrap\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card } from \"@material-ui/core\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport { token, url as baseUrl } from \"../../../api\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport { toast } from \"react-toastify\";\r\nimport FileSaver from \"file-saver\";\r\nimport { Message, Icon } from \"semantic-ui-react\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n    maxWidth: 752,\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n}));\r\n\r\nconst ClientVerification = (props) => {\r\n  let currentDate = new Date().toISOString().split(\"T\")[0];\r\n  const classes = useStyles();\r\n  const [loading, setLoading] = useState(false);\r\n  const [facilities, setFacilities] = useState([]);\r\n  const [objValues, setObjValues] = useState({\r\n    organisationUnitId: \"\",\r\n    organisationUnitName: \"\",\r\n  });\r\n  useEffect(() => {\r\n    Facilities();\r\n  }, []);\r\n  //Get list of WhoStaging\r\n  const Facilities = () => {\r\n    axios\r\n      .get(`${baseUrl}account`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setFacilities(response.data.applicationUserOrganisationUnits);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const handleInputChange = (e) => {\r\n    setObjValues({\r\n      ...objValues,\r\n      [e.target.name]: e.target.value,\r\n        organisationUnitName: e.target.innerText,\r\n    \r\n    });\r\n      \r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n      setLoading(true);\r\n      \r\n    axios\r\n      .get(`${baseUrl}reporting/client-service-list/${objValues.organisationUnitId}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n        responseType: \"blob\",\r\n      })\r\n      .then((response) => {\r\n        setLoading(false);\r\n        const fileName = `${objValues.organisationUnitName}Client Verification${currentDate}`;\r\n        const responseData = response.data;\r\n        let blob = new Blob([responseData], {\r\n          type: \"application/octet-stream\",\r\n        });\r\n        FileSaver.saveAs(blob, `${fileName}.xlsx`);\r\n        //toast.success(\" Save successful\");\r\n        //props.setActiveContent('recent-history')\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n        if (error.response && error.response.data) {\r\n          let errorMessage =\r\n            error.response.data.apierror &&\r\n            error.response.data.apierror.message !== \"\"\r\n              ? error.response.data.apierror.message\r\n              : \"Something went wrong, please try again\";\r\n          toast.error(errorMessage);\r\n        } else {\r\n          toast.error(\"Something went wrong. Please try again...\");\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardBody>\r\n          <h2 style={{ color: \"#000\" }}>CLIENT VERIFICATION REPORT</h2>\r\n          <br />\r\n          <form>\r\n            <div className=\"row\">\r\n              <div className=\"form-group  col-md-6\">\r\n                <FormGroup>\r\n                  <Label>Facility*</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"organisationUnitId\"\r\n                    id=\"organisationUnitId\"\r\n                    value={objValues.organisationUnitId}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    {facilities.map((value) => (\r\n                      <option key={value.id} value={value.organisationUnitId}>\r\n                        {value.organisationUnitName}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <br />\r\n              <div className=\"row\">\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                  <Button\r\n                    type=\"submit\"\r\n                    content=\"Generate Report\"\r\n                    icon=\"right arrow\"\r\n                    labelPosition=\"right\"\r\n                    style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n                    onClick={handleSubmit}\r\n                    disabled={\r\n                      objValues.organisationUnitId === \"\" ? true : false\r\n                    }\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              {loading && (\r\n                <Message icon>\r\n                  <Icon name=\"circle notched\" loading />\r\n                  <Message.Content>\r\n                    <Message.Header>Just one second</Message.Header>\r\n                    We are fetching that content for you.\r\n                  </Message.Content>\r\n                </Message>\r\n              )}\r\n            </div>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ClientVerification;\r\n","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\TbReport.js",["211","212","213","214"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { FormGroup, Label, CardBody, Spinner, Input, Form } from \"reactstrap\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card } from \"@material-ui/core\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport { token, url as baseUrl } from \"../../../api\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport { toast } from \"react-toastify\";\r\nimport FileSaver from \"file-saver\";\r\nimport { Message, Icon } from \"semantic-ui-react\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n    maxWidth: 752,\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n}));\r\n\r\nconst TbReport = (props) => {\r\n  let currentDate = new Date().toISOString().split(\"T\")[0];\r\n  const classes = useStyles();\r\n  const [loading, setLoading] = useState(false);\r\n  const [facilities, setFacilities] = useState([]);\r\n  const [objValues, setObjValues] = useState({\r\n    organisationUnitId: \"\",\r\n    organisationUnitName: \"\",\r\n    startDate: \"\",\r\n    endDate: \"\",\r\n  });\r\n  useEffect(() => {\r\n    Facilities();\r\n  }, []);\r\n  //Get list of WhoStaging\r\n  const Facilities = () => {\r\n    axios\r\n      .get(`${baseUrl}account`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setFacilities(response.data.applicationUserOrganisationUnits);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const handleInputChange = (e) => {\r\n    setObjValues({\r\n      ...objValues,\r\n      [e.target.name]: e.target.value,\r\n      organisationUnitName: e.target.innerText,\r\n    });\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n   \r\n    axios\r\n      .get(\r\n        `${baseUrl}reporting/tb-report?facilityId=${objValues.organisationUnitId}&start=${objValues.startDate}&end=${objValues.endDate}`,\r\n        { headers: { Authorization: `Bearer ${token}` }, responseType: \"blob\" }\r\n      )\r\n      .then((response) => {\r\n        setLoading(false);\r\n        const fileName = `${objValues.organisationUnitName} TB-Report ${currentDate}`;\r\n        const responseData = response.data;\r\n        let blob = new Blob([responseData], {\r\n          type: \"application/octet-stream\",\r\n        });\r\n        FileSaver.saveAs(blob, `${fileName}.xlsx`);\r\n        toast.success(\" Report generated successful\");\r\n        //toast.success(\" Save successful\");\r\n        //props.setActiveContent('recent-history')\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n        if (error.response && error.response.data) {\r\n          let errorMessage =\r\n            error.response.data.apierror &&\r\n            error.response.data.apierror.message !== \"\"\r\n              ? error.response.data.apierror.message\r\n              : \"Something went wrong, please try again\";\r\n          toast.error(errorMessage);\r\n        } else {\r\n          toast.error(\"Something went wrong. Please try again...\");\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardBody>\r\n          <h2 style={{ color: \"#000\" }}>TB REPORT</h2>\r\n          <br />\r\n          <form>\r\n            <div className=\"row\">\r\n              <div className=\"form-group  col-md-6\">\r\n                <FormGroup>\r\n                  <Label>Start Date*</Label>\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control\"\r\n                    name=\"startDate\"\r\n                    id=\"startDate\"\r\n                    value={objValues.startDate}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-6\">\r\n                <FormGroup>\r\n                  <Label>End Date*</Label>\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control\"\r\n                    name=\"endDate\"\r\n                    id=\"endDate\"\r\n                    min={objValues.startDate}\r\n                    max={currentDate}\r\n                    value={objValues.endDate}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-6\">\r\n                <FormGroup>\r\n                  <Label>Facility*</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"organisationUnitId\"\r\n                    id=\"organisationUnitId\"\r\n                    value={objValues.organisationUnitId}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    {facilities.map((value) => (\r\n                      <option key={value.id} value={value.organisationUnitId}>\r\n                        {value.organisationUnitName}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <br />\r\n              <div className=\"row\">\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                  <Button\r\n                    type=\"submit\"\r\n                    content=\"Generate Report\"\r\n                    icon=\"right arrow\"\r\n                    labelPosition=\"right\"\r\n                    style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n                    onClick={handleSubmit}\r\n                    disabled={\r\n                      objValues.organisationUnitId === \"\" ? true : false\r\n                    }\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              {loading && (\r\n                <Message icon>\r\n                  <Icon name=\"circle notched\" loading />\r\n                  <Message.Content>\r\n                    <Message.Header>Just one second</Message.Header>\r\n                    We are fetching that content for you.\r\n                  </Message.Content>\r\n                </Message>\r\n              )}\r\n            </div>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TbReport;\r\n","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\PmtctHtsReport.js",["215","216","217"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card} from \"@material-ui/core\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { Button} from 'semantic-ui-react'\r\nimport { toast} from \"react-toastify\";\r\nimport FileSaver from \"file-saver\";\r\nimport { Message, Icon } from 'semantic-ui-react'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\nconst PmtctHtsReport = (props) => {\r\n    let currentDate = new Date().toISOString().split('T')[0]\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false)\r\n    const [facilities, setFacilities] = useState([]);\r\n    const [status, setStatus] = useState(true);\r\n    const [objValues, setObjValues]=useState({\r\n        organisationUnitId:\"\",\r\n        organisationUnitName:\"\",\r\n        startDate:\"\",\r\n        endDate: \"\"\r\n    })\r\n    useEffect(() => {\r\n        Facilities()\r\n      }, []);\r\n    //Get list of WhoStaging\r\n    const Facilities =()=>{\r\n    axios\r\n        .get(`${baseUrl}account`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n        console.log(response.data);\r\n            setFacilities(response.data.applicationUserOrganisationUnits);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });\r\n\r\n    }\r\n\r\n    const handleInputChange = e => {\r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value, organisationUnitName: e.target.innerText});\r\n    }\r\n\r\n    const handleValueChange = () => {\r\n        setStatus(!status)\r\n\r\n        if (status === true) {\r\n          setObjValues ({...objValues,  startDate: \"1980-01-01\", endDate: currentDate});\r\n        } else {\r\n          setObjValues ({...objValues,  startDate: \"\", endDate: currentDate});\r\n        }\r\n\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true)\r\n        console.log(token);\r\n\r\n        axios.post(`${baseUrl}reporting?reportId=82d80564-6d3e-433e-8441-25db7fe1f2af&facilityId=${objValues.organisationUnitId}&startDate=${objValues.startDate}&endDate=${objValues.endDate}`,objValues.organisationUnitId,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}, responseType: 'blob'},\r\n        )\r\n          .then(response => {\r\n            setLoading(false)\r\n            const fileName = `${objValues.organisationUnitName} PMTCT HTS ${currentDate}`\r\n            const responseData = response.data\r\n            let blob = new Blob([responseData], {type: \"application/octet-stream\"});\r\n\r\n            FileSaver.saveAs(blob, `${fileName}.xlsx`);\r\n            toast.success(\"PMTCT Report generated successfully\");\r\n          })\r\n          .catch(error => {\r\n            setLoading(false)\r\n            if(error.response && error.response.data){\r\n                let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                toast.error(errorMessage);\r\n              }\r\n              else{\r\n                toast.error(\"Something went wrong. Please try again...\");\r\n              }\r\n          });\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <Card >\r\n                <CardBody>\r\n\r\n                <h2 style={{color:'#000'}}>PMTCT - HTS REPORT</h2>\r\n                <br/>\r\n                    <form >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>From *</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"startDate\"\r\n                                        id=\"startDate\"\r\n                                        min={\"1980-01-01\"}\r\n                                        max={currentDate}\r\n                                        value={objValues.startDate}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>To *</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"endDate\"\r\n                                        id=\"endDate\"\r\n                                        min={\"1980-01-01\"}\r\n                                        max={currentDate}\r\n                                        //min={objValues.startDate}\r\n                                        value={objValues.endDate}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                 <FormGroup check>\r\n                                  <Label check>\r\n                                    <Input type=\"checkbox\" onChange={handleValueChange}/>\r\n                                     {' '} &nbsp;&nbsp;<span> As at Today.</span>\r\n                                  </Label>\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>Facility*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"organisationUnitId\"\r\n                                        id=\"organisationUnitId\"\r\n                                        value={objValues.organisationUnitId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {facilities.map((value) => (\r\n                                            <option key={value.id} value={value.organisationUnitId}>\r\n                                                {value.organisationUnitName}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n\r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                            <Button type=\"submit\" content='Generate Report' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit} disabled={objValues.organisationUnitId===\"\" ? true : false}/>\r\n                            </div>\r\n                            </div>\r\n\r\n                            {loading && (\r\n                                <Message icon>\r\n                                    <Icon name='circle notched' loading />\r\n                                <Message.Content>\r\n                                <Message.Header>Just one second</Message.Header>\r\n                                    We are fetching that content for you.\r\n                                </Message.Content>\r\n                                </Message>\r\n                            )}\r\n                        </div>\r\n                    </form>\r\n\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PmtctHtsReport","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\BiometricReport.js",["218","219","220","221"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card} from \"@material-ui/core\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { Button} from 'semantic-ui-react'\r\nimport { toast} from \"react-toastify\";\r\nimport FileSaver from \"file-saver\";\r\nimport { Message, Icon } from 'semantic-ui-react'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst BiometricReport = (props) => {\r\n    let currentDate = new Date().toISOString().split('T')[0]\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false)\r\n    const [facilities, setFacilities] = useState([]);\r\n    const [objValues, setObjValues]=useState({       \r\n        organisationUnitId:\"\",\r\n        organisationUnitName:\"\",\r\n        startDate:\"\",\r\n        endDate:\"\"\r\n    })\r\n    useEffect(() => {\r\n        Facilities()\r\n      }, []);\r\n    //Get list of WhoStaging\r\n    const Facilities =()=>{\r\n    axios\r\n        .get(`${baseUrl}account`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setFacilities(response.data.applicationUserOrganisationUnits);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });\r\n    \r\n    }\r\n    const handleInputChange = e => {\r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value, organisationUnitName: e.target.innerText});\r\n    }\r\n    const handleSubmit = (e) => {      \r\n        e.preventDefault();\r\n        setLoading(true)\r\n        axios.get(`${baseUrl}reporting/biometric?facilityId=${objValues.organisationUnitId}&startDate=${objValues.startDate}&endDate=${objValues.endDate}`,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}, responseType: 'blob'},\r\n          \r\n          )\r\n              .then(response => {\r\n                setLoading(false)\r\n                const fileName = `${objValues.organisationUnitName} Biometric-Report ${currentDate}`\r\n                const responseData = response.data\r\n                let blob = new Blob([responseData], {type: \"application/octet-stream\"});\r\n                FileSaver.saveAs(blob, `${fileName}.xlsx`);\r\n                toast.success(\" Report generated successful\");\r\n                  //toast.success(\" Save successful\");\r\n                  //props.setActiveContent('recent-history')\r\n\r\n              })\r\n              .catch(error => {\r\n                setLoading(false)\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n              });\r\n            \r\n\r\n    }\r\n    \r\n    \r\n\r\n    return (\r\n      <>\r\n        <Card>\r\n          <CardBody>\r\n            <h2 style={{ color: \"#000\" }}>BIOMETRIC REPORT</h2>\r\n            <br />\r\n            <form>\r\n              <div className=\"row\">\r\n                <div className=\"form-group  col-md-6\">\r\n                  <FormGroup>\r\n                    <Label>Start Date*</Label>\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control\"\r\n                      name=\"startDate\"\r\n                      id=\"startDate\"\r\n                      value={objValues.startDate}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                    />\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group  col-md-6\">\r\n                  <FormGroup>\r\n                    <Label>End Date*</Label>\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control\"\r\n                      name=\"endDate\"\r\n                      id=\"endDate\"\r\n                      min={objValues.startDate}\r\n                      max={currentDate}\r\n                      value={objValues.endDate}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                    />\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group  col-md-6\">\r\n                  <FormGroup>\r\n                    <Label>Facility*</Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"organisationUnitId\"\r\n                      id=\"organisationUnitId\"\r\n                      value={objValues.organisationUnitId}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                    >\r\n                      <option value={\"\"}></option>\r\n                      {facilities.map((value) => (\r\n                        <option key={value.id} value={value.organisationUnitId}>\r\n                          {value.organisationUnitName}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <br />\r\n                <div className=\"row\">\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <Button\r\n                      type=\"submit\"\r\n                      content=\"Generate Report\"\r\n                      icon=\"right arrow\"\r\n                      labelPosition=\"right\"\r\n                      style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n                      onClick={handleSubmit}\r\n                      disabled={\r\n                        objValues.organisationUnitId === \"\" ? true : false\r\n                      }\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                {loading && (\r\n                  <Message icon>\r\n                    <Icon name=\"circle notched\" loading />\r\n                    <Message.Content>\r\n                      <Message.Header>Just one second</Message.Header>\r\n                      We are fetching that content for you.\r\n                    </Message.Content>\r\n                  </Message>\r\n                )}\r\n              </div>\r\n            </form>\r\n          </CardBody>\r\n        </Card>\r\n      </>\r\n    );\r\n};\r\n\r\nexport default BiometricReport","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\IndexElicitation.js",["222","223","224"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card} from \"@material-ui/core\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { Button} from 'semantic-ui-react'\r\nimport { toast} from \"react-toastify\";\r\nimport FileSaver from \"file-saver\";\r\nimport { Message, Icon } from 'semantic-ui-react'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\nconst IndexElicitationReport = (props) => {\r\n    let currentDate = new Date().toISOString().split('T')[0]\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false)\r\n    const [facilities, setFacilities] = useState([]);\r\n    const [status, setStatus] = useState(true);\r\n    const [objValues, setObjValues]=useState({\r\n        organisationUnitId:\"\",\r\n        organisationUnitName:\"\",\r\n        startDate:\"\",\r\n        endDate: \"\"\r\n    })\r\n    useEffect(() => {\r\n        Facilities()\r\n    }, []);\r\n    //Get list of WhoStaging\r\n    const Facilities =()=>{\r\n        axios\r\n            .get(`${baseUrl}account`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                console.log(response.data);\r\n                setFacilities(response.data.applicationUserOrganisationUnits);\r\n            })\r\n            .catch((error) => {\r\n                //console.log(error);\r\n            });\r\n\r\n    }\r\n\r\n    const handleInputChange = e => {\r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value, organisationUnitName: e.target.innerText});\r\n    }\r\n\r\n    const handleValueChange = () => {\r\n        setStatus(!status)\r\n\r\n        if (status === true) {\r\n            setObjValues ({...objValues,  startDate: \"1980-01-01\", endDate: currentDate});\r\n        } else {\r\n            setObjValues ({...objValues,  startDate: \"\", endDate: currentDate});\r\n        }\r\n\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true)\r\n        console.log(token);\r\n\r\n        axios.post(`${baseUrl}index-elicitation-reporting?facilityId=${objValues.organisationUnitId}&startDate=${objValues.startDate}&endDate=${objValues.endDate}`,objValues.organisationUnitId,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}, responseType: 'blob'},\r\n        )\r\n            .then(response => {\r\n                setLoading(false)\r\n                const fileName = `${objValues.organisationUnitName} Index Elicitation ${currentDate}`\r\n                const responseData = response.data\r\n                let blob = new Blob([responseData], {type: \"application/octet-stream\"});\r\n\r\n                FileSaver.saveAs(blob, `${fileName}.xlsx`);\r\n                toast.success(\"Index Elicitation Report generated successfully\");\r\n            })\r\n            .catch(error => {\r\n                setLoading(false)\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                }\r\n                else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                }\r\n            });\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <Card >\r\n                <CardBody>\r\n\r\n                    <h2 style={{color:'#000'}}>INDEX ELICITATION REPORT</h2>\r\n                    <br/>\r\n                    <form >\r\n                        <div className=\"row\">\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>From *</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"startDate\"\r\n                                        id=\"startDate\"\r\n                                        min={\"1980-01-01\"}\r\n                                        max={currentDate}\r\n                                        value={objValues.startDate}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>To *</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"endDate\"\r\n                                        id=\"endDate\"\r\n                                        min={\"1980-01-01\"}\r\n                                        max={currentDate}\r\n                                        //min={objValues.startDate}\r\n                                        value={objValues.endDate}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup check>\r\n                                    <Label check>\r\n                                        <Input type=\"checkbox\" onChange={handleValueChange}/>\r\n                                        {' '} &nbsp;&nbsp;<span> As at Today.</span>\r\n                                    </Label>\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>Facility*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"organisationUnitId\"\r\n                                        id=\"organisationUnitId\"\r\n                                        value={objValues.organisationUnitId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {facilities.map((value) => (\r\n                                            <option key={value.id} value={value.organisationUnitId}>\r\n                                                {value.organisationUnitName}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n\r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <br />\r\n                            <div className=\"row\">\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <Button type=\"submit\" content='Generate Report' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit} disabled={objValues.organisationUnitId===\"\" ? true : false}/>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {loading && (\r\n                                <Message icon>\r\n                                    <Icon name='circle notched' loading />\r\n                                    <Message.Content>\r\n                                        <Message.Header>Just one second</Message.Header>\r\n                                        We are fetching that content for you.\r\n                                    </Message.Content>\r\n                                </Message>\r\n                            )}\r\n                        </div>\r\n                    </form>\r\n\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    );\r\n\r\n};\r\n\r\nexport default IndexElicitationReport","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\PmtctMaternalCohortReport.js",["225","226","227"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card} from \"@material-ui/core\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { Button} from 'semantic-ui-react'\r\nimport { toast} from \"react-toastify\";\r\nimport FileSaver from \"file-saver\";\r\nimport { Message, Icon } from 'semantic-ui-react'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\nconst PmtctMaternalCohortReport = (props) => {\r\n    let currentDate = new Date().toISOString().split('T')[0]\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false)\r\n    const [facilities, setFacilities] = useState([]);\r\n    const [status, setStatus] = useState(true);\r\n    const [objValues, setObjValues]=useState({\r\n        organisationUnitId:\"\",\r\n        organisationUnitName:\"\",\r\n        startDate:\"\",\r\n        endDate: \"\"\r\n    })\r\n    useEffect(() => {\r\n        Facilities()\r\n      }, []);\r\n    //Get list of WhoStaging\r\n    const Facilities =()=>{\r\n    axios\r\n        .get(`${baseUrl}account`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n        console.log(response.data);\r\n            setFacilities(response.data.applicationUserOrganisationUnits);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });\r\n\r\n    }\r\n\r\n    const handleInputChange = e => {\r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value, organisationUnitName: e.target.innerText});\r\n    }\r\n\r\n    const handleValueChange = () => {\r\n        setStatus(!status)\r\n\r\n        if (status === true) {\r\n          setObjValues ({...objValues,  startDate: \"1980-01-01\", endDate: currentDate});\r\n        } else {\r\n          setObjValues ({...objValues,  startDate: \"\", endDate: currentDate});\r\n        }\r\n\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true)\r\n        console.log(token);\r\n\r\n        axios.post(`${baseUrl}reporting?reportId=2b6fe1b9-9af0-4af7-9f59-b9cfcb906158&facilityId=${objValues.organisationUnitId}&startDate=${objValues.startDate}&endDate=${objValues.endDate}`,objValues.organisationUnitId,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}, responseType: 'blob'},\r\n        )\r\n          .then(response => {\r\n            setLoading(false)\r\n            const fileName = `${objValues.organisationUnitName} PMTCT Prematernal Cohort ${currentDate}`\r\n            const responseData = response.data\r\n            let blob = new Blob([responseData], {type: \"application/octet-stream\"});\r\n\r\n            FileSaver.saveAs(blob, `${fileName}.xlsx`);\r\n            toast.success(\"PMTCT Report generated successfully\");\r\n          })\r\n          .catch(error => {\r\n            setLoading(false)\r\n            if(error.response && error.response.data){\r\n                let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                toast.error(errorMessage);\r\n              }\r\n              else{\r\n                toast.error(\"Something went wrong. Please try again...\");\r\n              }\r\n          });\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <Card >\r\n                <CardBody>\r\n\r\n                <h2 style={{color:'#000'}}>PMTCT - Maternal Cohort REPORT</h2>\r\n                <br/>\r\n                    <form >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>From *</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"startDate\"\r\n                                        id=\"startDate\"\r\n                                        min={\"1980-01-01\"}\r\n                                        max={currentDate}\r\n                                        value={objValues.startDate}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>To *</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"endDate\"\r\n                                        id=\"endDate\"\r\n                                        min={\"1980-01-01\"}\r\n                                        max={currentDate}\r\n                                        //min={objValues.startDate}\r\n                                        value={objValues.endDate}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                 <FormGroup check>\r\n                                  <Label check>\r\n                                    <Input type=\"checkbox\" onChange={handleValueChange}/>\r\n                                     {' '} &nbsp;&nbsp;<span> As at Today.</span>\r\n                                  </Label>\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>Facility*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"organisationUnitId\"\r\n                                        id=\"organisationUnitId\"\r\n                                        value={objValues.organisationUnitId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {facilities.map((value) => (\r\n                                            <option key={value.id} value={value.organisationUnitId}>\r\n                                                {value.organisationUnitName}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n\r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                            <Button type=\"submit\" content='Generate Report' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit} disabled={objValues.organisationUnitId===\"\" ? true : false}/>\r\n                            </div>\r\n                            </div>\r\n\r\n                            {loading && (\r\n                                <Message icon>\r\n                                    <Icon name='circle notched' loading />\r\n                                <Message.Content>\r\n                                <Message.Header>Just one second</Message.Header>\r\n                                    We are fetching that content for you.\r\n                                </Message.Content>\r\n                                </Message>\r\n                            )}\r\n                        </div>\r\n                    </form>\r\n\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PmtctMaternalCohortReport","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\api.js",[],"C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\EACReport.js",["228","229","230","231"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { FormGroup, Label, CardBody, Spinner, Input, Form } from \"reactstrap\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card } from \"@material-ui/core\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport { token, url as baseUrl } from \"../../../api\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport { toast } from \"react-toastify\";\r\nimport FileSaver from \"file-saver\";\r\nimport { Message, Icon } from \"semantic-ui-react\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n    maxWidth: 752,\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n}));\r\n\r\nconst EACReport = (props) => {\r\n  let currentDate = new Date().toISOString().split(\"T\")[0];\r\n  const classes = useStyles();\r\n  const [loading, setLoading] = useState(false);\r\n  const [facilities, setFacilities] = useState([]);\r\n  const [objValues, setObjValues] = useState({\r\n    organisationUnitId: \"\",\r\n    organisationUnitName: \"\",\r\n    startDate: \"\",\r\n    endDate: \"\",\r\n  });\r\n  useEffect(() => {\r\n    Facilities();\r\n  }, []);\r\n  //Get list of WhoStaging\r\n  const Facilities = () => {\r\n    axios\r\n      .get(`${baseUrl}account`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setFacilities(response.data.applicationUserOrganisationUnits);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const handleInputChange = (e) => {\r\n    setObjValues({\r\n      ...objValues,\r\n      [e.target.name]: e.target.value,\r\n      organisationUnitName: e.target.innerText,\r\n    });\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n\r\n    axios\r\n      .get(\r\n        `${baseUrl}reporting/eac-report?facilityId=${objValues.organisationUnitId}&start=${objValues.startDate}&end=${objValues.endDate}`,\r\n        { headers: { Authorization: `Bearer ${token}` }, responseType: \"blob\" }\r\n      )\r\n      .then((response) => {\r\n        setLoading(false);\r\n        const fileName = `${objValues.organisationUnitName} EAC-Report ${currentDate}`;\r\n        const responseData = response.data;\r\n        let blob = new Blob([responseData], {\r\n          type: \"application/octet-stream\",\r\n        });\r\n        FileSaver.saveAs(blob, `${fileName}.xlsx`);\r\n        toast.success(\" Report generated successful\");\r\n        //toast.success(\" Save successful\");\r\n        //props.setActiveContent('recent-history')\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n        if (error.response && error.response.data) {\r\n          let errorMessage =\r\n            error.response.data.apierror &&\r\n            error.response.data.apierror.message !== \"\"\r\n              ? error.response.data.apierror.message\r\n              : \"Something went wrong, please try again\";\r\n          toast.error(errorMessage);\r\n        } else {\r\n          toast.error(\"Something went wrong. Please try again...\");\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardBody>\r\n          <h2 style={{ color: \"#000\" }}>EAC REPORT</h2>\r\n          <br />\r\n          <form>\r\n            <div className=\"row\">\r\n              <div className=\"form-group  col-md-6\">\r\n                <FormGroup>\r\n                  <Label>Start Date*</Label>\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control\"\r\n                    name=\"startDate\"\r\n                    id=\"startDate\"\r\n                    value={objValues.startDate}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-6\">\r\n                <FormGroup>\r\n                  <Label>End Date*</Label>\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control\"\r\n                    name=\"endDate\"\r\n                    id=\"endDate\"\r\n                    min={objValues.startDate}\r\n                    max={currentDate}\r\n                    value={objValues.endDate}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-6\">\r\n                <FormGroup>\r\n                  <Label>Facility*</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"organisationUnitId\"\r\n                    id=\"organisationUnitId\"\r\n                    value={objValues.organisationUnitId}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    {facilities.map((value) => (\r\n                      <option key={value.id} value={value.organisationUnitId}>\r\n                        {value.organisationUnitName}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <br />\r\n              <div className=\"row\">\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                  <Button\r\n                    type=\"submit\"\r\n                    content=\"Generate Report\"\r\n                    icon=\"right arrow\"\r\n                    labelPosition=\"right\"\r\n                    style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n                    onClick={handleSubmit}\r\n                    disabled={\r\n                      objValues.organisationUnitId === \"\" ? true : false\r\n                    }\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              {loading && (\r\n                <Message icon>\r\n                  <Icon name=\"circle notched\" loading />\r\n                  <Message.Content>\r\n                    <Message.Header>Just one second</Message.Header>\r\n                    We are fetching that content for you.\r\n                  </Message.Content>\r\n                </Message>\r\n              )}\r\n            </div>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EACReport;\r\n","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\NcdReport.js",["232","233","234","235"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { FormGroup, Label, CardBody, Spinner, Input, Form } from \"reactstrap\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card } from \"@material-ui/core\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport { token, url as baseUrl } from \"../../../api\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport { toast } from \"react-toastify\";\r\nimport FileSaver from \"file-saver\";\r\nimport { Message, Icon } from \"semantic-ui-react\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n    maxWidth: 752,\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n}));\r\n\r\nconst NcdReport = (props) => {\r\n  let currentDate = new Date().toISOString().split(\"T\")[0];\r\n  const classes = useStyles();\r\n  const [loading, setLoading] = useState(false);\r\n  const [facilities, setFacilities] = useState([]);\r\n  const [objValues, setObjValues] = useState({\r\n    organisationUnitId: \"\",\r\n    organisationUnitName: \"\",\r\n    startDate: \"\",\r\n    endDate: \"\",\r\n  });\r\n  useEffect(() => {\r\n    Facilities();\r\n  }, []);\r\n  //Get list of WhoStaging\r\n  const Facilities = () => {\r\n    axios\r\n      .get(`${baseUrl}account`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setFacilities(response.data.applicationUserOrganisationUnits);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const handleInputChange = (e) => {\r\n    setObjValues({\r\n      ...objValues,\r\n      [e.target.name]: e.target.value,\r\n      organisationUnitName: e.target.innerText,\r\n    });\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n\r\n    axios\r\n      .get(\r\n        `${baseUrl}reporting/ncd-report?facilityId=${objValues.organisationUnitId}&start=${objValues.startDate}&end=${objValues.endDate}`,\r\n        { headers: { Authorization: `Bearer ${token}` }, responseType: \"blob\" }\r\n      )\r\n      .then((response) => {\r\n        setLoading(false);\r\n        const fileName = `${objValues.organisationUnitName} NCD-Report ${currentDate}`;\r\n        const responseData = response.data;\r\n        let blob = new Blob([responseData], {\r\n          type: \"application/octet-stream\",\r\n        });\r\n        FileSaver.saveAs(blob, `${fileName}.xlsx`);\r\n        toast.success(\" Report generated successful\");\r\n        //toast.success(\" Save successful\");\r\n        //props.setActiveContent('recent-history')\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n        if (error.response && error.response.data) {\r\n          let errorMessage =\r\n            error.response.data.apierror &&\r\n            error.response.data.apierror.message !== \"\"\r\n              ? error.response.data.apierror.message\r\n              : \"Something went wrong, please try again\";\r\n          toast.error(errorMessage);\r\n        } else {\r\n          toast.error(\"Something went wrong. Please try again...\");\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardBody>\r\n          <h2 style={{ color: \"#000\" }}>NCD REPORT</h2>\r\n          <br />\r\n          <form>\r\n            <div className=\"row\">\r\n              <div className=\"form-group  col-md-6\">\r\n                <FormGroup>\r\n                  <Label>Start Date*</Label>\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control\"\r\n                    name=\"startDate\"\r\n                    id=\"startDate\"\r\n                    value={objValues.startDate}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-6\">\r\n                <FormGroup>\r\n                  <Label>End Date*</Label>\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control\"\r\n                    name=\"endDate\"\r\n                    id=\"endDate\"\r\n                    min={objValues.startDate}\r\n                    max={currentDate}\r\n                    value={objValues.endDate}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-6\">\r\n                <FormGroup>\r\n                  <Label>Facility*</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"organisationUnitId\"\r\n                    id=\"organisationUnitId\"\r\n                    value={objValues.organisationUnitId}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    {facilities.map((value) => (\r\n                      <option key={value.id} value={value.organisationUnitId}>\r\n                        {value.organisationUnitName}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <br />\r\n              <div className=\"row\">\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                  <Button\r\n                    type=\"submit\"\r\n                    content=\"Generate Report\"\r\n                    icon=\"right arrow\"\r\n                    labelPosition=\"right\"\r\n                    style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n                    onClick={handleSubmit}\r\n                    disabled={\r\n                      objValues.organisationUnitId === \"\" ? true : false\r\n                    }\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              {loading && (\r\n                <Message icon>\r\n                  <Icon name=\"circle notched\" loading />\r\n                  <Message.Content>\r\n                    <Message.Header>Just one second</Message.Header>\r\n                    We are fetching that content for you.\r\n                  </Message.Content>\r\n                </Message>\r\n              )}\r\n            </div>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NcdReport;","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\AhdReport.js",["236","237","238"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card} from \"@material-ui/core\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { Button} from 'semantic-ui-react'\r\nimport { toast} from \"react-toastify\";\r\nimport FileSaver from \"file-saver\";\r\nimport { Message, Icon } from 'semantic-ui-react'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\nconst AhdReport = (props) => {\r\n    let currentDate = new Date().toISOString().split('T')[0]\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false)\r\n    const [facilities, setFacilities] = useState([]);\r\n    const [status, setStatus] = useState(true);\r\n    const [objValues, setObjValues]=useState({\r\n        organisationUnitId:\"\",\r\n        organisationUnitName:\"\",\r\n        startDate:\"\",\r\n        endDate: \"\"\r\n    })\r\n    useEffect(() => {\r\n        Facilities()\r\n      }, []);\r\n    //Get list of WhoStaging\r\n    const Facilities =()=>{\r\n    axios\r\n        .get(`${baseUrl}account`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n        console.log(response.data);\r\n            setFacilities(response.data.applicationUserOrganisationUnits);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });\r\n\r\n    }\r\n\r\n    const handleInputChange = e => {\r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value, organisationUnitName: e.target.innerText});\r\n    }\r\n\r\n    const handleValueChange = () => {\r\n        setStatus(!status)\r\n\r\n        if (status === true) {\r\n          setObjValues ({...objValues,  startDate: \"1980-01-01\", endDate: currentDate});\r\n        } else {\r\n          setObjValues ({...objValues,  startDate: \"\", endDate: currentDate});\r\n        }\r\n\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true)\r\n        console.log(token);\r\n\r\n        axios.post(`${baseUrl}ahd-reporting?&facilityId=${objValues.organisationUnitId}&startDate=${objValues.startDate}&endDate=${objValues.endDate}`,objValues.organisationUnitId,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}, responseType: 'blob'},\r\n        )\r\n          .then(response => {\r\n            setLoading(false)\r\n            const fileName = `${objValues.organisationUnitName} AHD ${currentDate}`\r\n            const responseData = response.data\r\n            let blob = new Blob([responseData], {type: \"application/octet-stream\"});\r\n\r\n            FileSaver.saveAs(blob, `${fileName}.xlsx`);\r\n            toast.success(\"AHD Report generated successfully\");\r\n          })\r\n          .catch(error => {\r\n            setLoading(false)\r\n            if(error.response && error.response.data){\r\n                let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                toast.error(errorMessage);\r\n              }\r\n              else{\r\n                toast.error(\"Something went wrong. Please try again...\");\r\n              }\r\n          });\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <Card >\r\n                <CardBody>\r\n\r\n                <h2 style={{color:'#000'}}>AHD REPORT</h2>\r\n                <br/>\r\n                    <form >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>From *</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"startDate\"\r\n                                        id=\"startDate\"\r\n                                        min={\"1980-01-01\"}\r\n                                        max={currentDate}\r\n                                        value={objValues.startDate}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>To *</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"endDate\"\r\n                                        id=\"endDate\"\r\n                                        min={\"1980-01-01\"}\r\n                                        max={currentDate}\r\n                                        //min={objValues.startDate}\r\n                                        value={objValues.endDate}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                 <FormGroup check>\r\n                                  <Label check>\r\n                                    <Input type=\"checkbox\" onChange={handleValueChange}/>\r\n                                     {' '} &nbsp;&nbsp;<span> As at Today.</span>\r\n                                  </Label>\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>Facility*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"organisationUnitId\"\r\n                                        id=\"organisationUnitId\"\r\n                                        value={objValues.organisationUnitId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {facilities.map((value) => (\r\n                                            <option key={value.id} value={value.organisationUnitId}>\r\n                                                {value.organisationUnitName}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n\r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                            <Button type=\"submit\" content='Generate Report' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit} disabled={objValues.organisationUnitId===\"\" ? true : false}/>\r\n                            </div>\r\n                            </div>\r\n\r\n                            {loading && (\r\n                                <Message icon>\r\n                                    <Icon name='circle notched' loading />\r\n                                <Message.Content>\r\n                                <Message.Header>Just one second</Message.Header>\r\n                                    We are fetching that content for you.\r\n                                </Message.Content>\r\n                                </Message>\r\n                            )}\r\n                        </div>\r\n                    </form>\r\n\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AhdReport","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\PrepLongitudinalReport.js",["239","240","241"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card} from \"@material-ui/core\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { Button} from 'semantic-ui-react'\r\nimport { toast} from \"react-toastify\";\r\nimport FileSaver from \"file-saver\";\r\nimport { Message, Icon } from 'semantic-ui-react'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\nconst PrepLongitudinalReport = (props) => {\r\n    let currentDate = new Date().toISOString().split('T')[0]\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false)\r\n    const [facilities, setFacilities] = useState([]);\r\n    const [status, setStatus] = useState(true);\r\n    const [objValues, setObjValues]=useState({\r\n        organisationUnitId:\"\",\r\n        organisationUnitName:\"\",\r\n        startDate:\"\",\r\n        endDate: \"\"\r\n    })\r\n    useEffect(() => {\r\n        Facilities()\r\n      }, []);\r\n    //Get list of WhoStaging\r\n    const Facilities =()=>{\r\n    axios\r\n        .get(`${baseUrl}account`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            console.log(response.data);\r\n            setFacilities(response.data.applicationUserOrganisationUnits);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });\r\n    }\r\n\r\n    const handleInputChange = e => {\r\n        //1980-01-01\r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value, organisationUnitName: e.target.innerText});\r\n    }\r\n\r\n    const handleValueChange = () => {\r\n        setStatus(!status)\r\n\r\n        if (status === true) {\r\n          setObjValues ({...objValues,  startDate: \"1980-01-01\", endDate: currentDate});\r\n        } else {\r\n          setObjValues ({...objValues,  startDate: \"\", endDate: currentDate});\r\n        }\r\n\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true)\r\n        //console.log(token);\r\n\r\n        axios.post(`${baseUrl}longitudinal-prep?facilityId=${objValues.organisationUnitId}&startDate=${objValues.startDate}&endDate=${objValues.endDate}`,objValues.organisationUnitId,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}, responseType: 'blob'},\r\n        )\r\n          .then(response => {\r\n            setLoading(false)\r\n            const fileName =`${objValues.organisationUnitName} Longitudinal Prep ${currentDate}`\r\n            const responseData = response.data\r\n            let blob = new Blob([responseData], {type: \"application/octet-stream\"});\r\n\r\n            FileSaver.saveAs(blob, `${fileName}.xlsx`);\r\n            toast.success(\"Prep Longitudinal Report generated successfully\");\r\n          })\r\n          .catch(error => {\r\n            setLoading(false)\r\n            if(error.response && error.response.data){\r\n                let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                toast.error(errorMessage);\r\n              }\r\n              else{\r\n                toast.error(\"Something went wrong. Please try again...\");\r\n              }\r\n          });\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <Card >\r\n                <CardBody>\r\n\r\n                <h2 style={{color:'#000'}}>Prep-Longitudinal REPORT</h2>\r\n                <br/>\r\n                    <form >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>From *</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"startDate\"\r\n                                        id=\"startDate\"\r\n                                        min={\"1980-01-01\"}\r\n                                        max={currentDate}\r\n                                        value={objValues.startDate}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>To *</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"endDate\"\r\n                                        id=\"endDate\"\r\n                                        min={\"1980-01-01\"}\r\n                                        max={currentDate}\r\n                                        //min={objValues.startDate}\r\n                                        value={objValues.endDate}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                 <FormGroup check>\r\n                                  <Label check>\r\n                                    <Input type=\"checkbox\" onChange={handleValueChange}/>\r\n                                     {' '} &nbsp;&nbsp;<span> As at Today.</span>\r\n                                  </Label>\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>Facility*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"organisationUnitId\"\r\n                                        id=\"organisationUnitId\"\r\n                                        value={objValues.organisationUnitId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {facilities.map((value) => (\r\n                                            <option key={value.id} value={value.organisationUnitId}>\r\n                                                {value.organisationUnitName}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n\r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                            <Button type=\"submit\" content='Generate Report' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit} disabled={objValues.organisationUnitId===\"\" ? true : false}/>\r\n                            </div>\r\n                            </div>\r\n\r\n                            {loading && (\r\n                                <Message icon>\r\n                                    <Icon name='circle notched' loading />\r\n                                <Message.Content>\r\n                                <Message.Header>Just one second</Message.Header>\r\n                                    We are fetching that content for you.\r\n                                </Message.Content>\r\n                                </Message>\r\n                            )}\r\n                        </div>\r\n                    </form>\r\n\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PrepLongitudinalReport","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\MhpssReport.js",["242","243","244"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card} from \"@material-ui/core\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { Button} from 'semantic-ui-react'\r\nimport { toast} from \"react-toastify\";\r\nimport FileSaver from \"file-saver\";\r\nimport { Message, Icon } from 'semantic-ui-react'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\nconst MhpssReport = (props) => {\r\n    let currentDate = new Date().toISOString().split('T')[0]\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false)\r\n    const [facilities, setFacilities] = useState([]);\r\n    const [status, setStatus] = useState(true);\r\n    const [objValues, setObjValues]=useState({\r\n        organisationUnitId:\"\",\r\n        organisationUnitName:\"\",\r\n        startDate:\"\",\r\n        endDate: \"\"\r\n    })\r\n    useEffect(() => {\r\n        Facilities()\r\n      }, []);\r\n    //Get list of WhoStaging\r\n    const Facilities =()=>{\r\n    axios\r\n        .get(`${baseUrl}account`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            console.log(response.data);\r\n            setFacilities(response.data.applicationUserOrganisationUnits);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });\r\n    }\r\n\r\n    const handleInputChange = e => {\r\n        //1980-01-01\r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value, organisationUnitName: e.target.innerText});\r\n    }\r\n\r\n    const handleValueChange = () => {\r\n        setStatus(!status)\r\n\r\n        if (status === true) {\r\n          setObjValues ({...objValues,  startDate: \"1980-01-01\", endDate: currentDate});\r\n        } else {\r\n          setObjValues ({...objValues,  startDate: \"\", endDate: currentDate});\r\n        }\r\n\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true)\r\n        //console.log(token);\r\n\r\n        axios.post(`${baseUrl}reporting?reportId=e5f5685b-d355-498f-bc71-191b4037726c&facilityId=${objValues.organisationUnitId}&startDate=${objValues.startDate}&endDate=${objValues.endDate}`,objValues.organisationUnitId,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}, responseType: 'blob'},\r\n        )\r\n          .then(response => {\r\n            setLoading(false)\r\n            const fileName =`${objValues.organisationUnitName} Mhpss Report ${currentDate}`\r\n            const responseData = response.data\r\n            let blob = new Blob([responseData], {type: \"application/octet-stream\"});\r\n\r\n            FileSaver.saveAs(blob, `${fileName}.xlsx`);\r\n            toast.success(\"MHPSS Report generated successfully\");\r\n          })\r\n          .catch(error => {\r\n            setLoading(false)\r\n            if(error.response && error.response.data){\r\n                let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                toast.error(errorMessage);\r\n              }\r\n              else{\r\n                toast.error(\"Something went wrong. Please try again...\");\r\n              }\r\n          });\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <Card >\r\n                <CardBody>\r\n\r\n                <h2 style={{color:'#000'}}>MHPSS REPORT</h2>\r\n                <br/>\r\n                    <form >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>From *</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"startDate\"\r\n                                        id=\"startDate\"\r\n                                        min={\"1980-01-01\"}\r\n                                        max={currentDate}\r\n                                        value={objValues.startDate}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>To *</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"endDate\"\r\n                                        id=\"endDate\"\r\n                                        min={\"1980-01-01\"}\r\n                                        max={currentDate}\r\n                                        //min={objValues.startDate}\r\n                                        value={objValues.endDate}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                 <FormGroup check>\r\n                                  <Label check>\r\n                                    <Input type=\"checkbox\" onChange={handleValueChange}/>\r\n                                     {' '} &nbsp;&nbsp;<span> As at Today.</span>\r\n                                  </Label>\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>Facility*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"organisationUnitId\"\r\n                                        id=\"organisationUnitId\"\r\n                                        value={objValues.organisationUnitId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {facilities.map((value) => (\r\n                                            <option key={value.id} value={value.organisationUnitId}>\r\n                                                {value.organisationUnitName}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n\r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                            <Button type=\"submit\" content='Generate Report' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit} disabled={objValues.organisationUnitId===\"\" ? true : false}/>\r\n                            </div>\r\n                            </div>\r\n\r\n                            {loading && (\r\n                                <Message icon>\r\n                                    <Icon name='circle notched' loading />\r\n                                <Message.Content>\r\n                                <Message.Header>Just one second</Message.Header>\r\n                                    We are fetching that content for you.\r\n                                </Message.Content>\r\n                                </Message>\r\n                            )}\r\n                        </div>\r\n                    </form>\r\n\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MhpssReport","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\KpPrevReport.js",["245","246","247"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card} from \"@material-ui/core\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { Button} from 'semantic-ui-react'\r\nimport { toast} from \"react-toastify\";\r\nimport FileSaver from \"file-saver\";\r\nimport { Message, Icon } from 'semantic-ui-react'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\nconst KpPrevReport = (props) => {\r\n    let currentDate = new Date().toISOString().split('T')[0]\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false)\r\n    const [facilities, setFacilities] = useState([]);\r\n    const [status, setStatus] = useState(true);\r\n    const [objValues, setObjValues]=useState({\r\n        organisationUnitId:\"\",\r\n        organisationUnitName:\"\",\r\n        startDate:\"\",\r\n        endDate: \"\"\r\n    })\r\n    useEffect(() => {\r\n        Facilities()\r\n      }, []);\r\n    //Get list of WhoStaging\r\n    const Facilities =()=>{\r\n    axios\r\n        .get(`${baseUrl}account`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            console.log(response.data);\r\n            setFacilities(response.data.applicationUserOrganisationUnits);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });\r\n    }\r\n\r\n    const handleInputChange = e => {\r\n        //1980-01-01\r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value, organisationUnitName: e.target.innerText});\r\n    }\r\n\r\n    const handleValueChange = () => {\r\n        setStatus(!status)\r\n\r\n        if (status === true) {\r\n          setObjValues ({...objValues,  startDate: \"1980-01-01\", endDate: currentDate});\r\n        } else {\r\n          setObjValues ({...objValues,  startDate: \"\", endDate: currentDate});\r\n        }\r\n\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true)\r\n        //console.log(token);\r\n\r\n        axios.post(`${baseUrl}kp-prev-report?facilityId=${objValues.organisationUnitId}&startDate=${objValues.startDate}&endDate=${objValues.endDate}`,objValues.organisationUnitId,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}, responseType: 'blob'},\r\n        )\r\n          .then(response => {\r\n            setLoading(false)\r\n            const fileName =`${objValues.organisationUnitName} Kp_Prev ${currentDate}`\r\n            const responseData = response.data\r\n            let blob = new Blob([responseData], {type: \"application/octet-stream\"});\r\n\r\n            FileSaver.saveAs(blob, `${fileName}.xlsx`);\r\n            toast.success(\"Kp Prev Report generated successfully\");\r\n          })\r\n          .catch(error => {\r\n            setLoading(false)\r\n            if(error.response && error.response.data){\r\n                let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                toast.error(errorMessage);\r\n              }\r\n              else{\r\n                toast.error(\"Something went wrong. Please try again...\");\r\n              }\r\n          });\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <Card >\r\n                <CardBody>\r\n\r\n                <h2 style={{color:'#000'}}>Kp Prev REPORT</h2>\r\n                <br/>\r\n                    <form >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>From *</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"startDate\"\r\n                                        id=\"startDate\"\r\n                                        min={\"1980-01-01\"}\r\n                                        max={currentDate}\r\n                                        value={objValues.startDate}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>To *</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"endDate\"\r\n                                        id=\"endDate\"\r\n                                        min={\"1980-01-01\"}\r\n                                        max={currentDate}\r\n                                        //min={objValues.startDate}\r\n                                        value={objValues.endDate}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                 <FormGroup check>\r\n                                  <Label check>\r\n                                    <Input type=\"checkbox\" onChange={handleValueChange}/>\r\n                                     {' '} &nbsp;&nbsp;<span> As at Today.</span>\r\n                                  </Label>\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>Facility*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"organisationUnitId\"\r\n                                        id=\"organisationUnitId\"\r\n                                        value={objValues.organisationUnitId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {facilities.map((value) => (\r\n                                            <option key={value.id} value={value.organisationUnitId}>\r\n                                                {value.organisationUnitName}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n\r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                            <Button type=\"submit\" content='Generate Report' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit} disabled={objValues.organisationUnitId===\"\" ? true : false}/>\r\n                            </div>\r\n                            </div>\r\n\r\n                            {loading && (\r\n                                <Message icon>\r\n                                    <Icon name='circle notched' loading />\r\n                                <Message.Content>\r\n                                <Message.Header>Just one second</Message.Header>\r\n                                    We are fetching that content for you.\r\n                                </Message.Content>\r\n                                </Message>\r\n                            )}\r\n                        </div>\r\n                    </form>\r\n\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default KpPrevReport","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\HtsRegister.js",["248","249","250"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card} from \"@material-ui/core\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { Button} from 'semantic-ui-react'\r\nimport { toast} from \"react-toastify\";\r\nimport FileSaver from \"file-saver\";\r\nimport { Message, Icon } from 'semantic-ui-react'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\nconst PrepLongitudinalReport = (props) => {\r\n    let currentDate = new Date().toISOString().split('T')[0]\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false)\r\n    const [facilities, setFacilities] = useState([]);\r\n    const [status, setStatus] = useState(true);\r\n    const [objValues, setObjValues]=useState({\r\n        organisationUnitId:\"\",\r\n        organisationUnitName:\"\",\r\n        startDate:\"\",\r\n        endDate: \"\"\r\n    })\r\n    useEffect(() => {\r\n        Facilities()\r\n      }, []);\r\n    //Get list of WhoStaging\r\n    const Facilities =()=>{\r\n    axios\r\n        .get(`${baseUrl}account`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            // console.log(response.data);\r\n            setFacilities(response.data.applicationUserOrganisationUnits);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });\r\n    }\r\n\r\n    const handleInputChange = e => {\r\n        //1980-01-01\r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value, organisationUnitName: e.target.innerText});\r\n    }\r\n\r\n    const handleValueChange = () => {\r\n        setStatus(!status)\r\n\r\n        if (status === true) {\r\n          setObjValues ({...objValues,  startDate: \"1980-01-01\", endDate: currentDate});\r\n        } else {\r\n          setObjValues ({...objValues,  startDate: \"\", endDate: currentDate});\r\n        }\r\n\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true)\r\n        //console.log(token);\r\n\r\n        axios.post(`${baseUrl}hts-register?facilityId=${objValues.organisationUnitId}&startDate=${objValues.startDate}&endDate=${objValues.endDate}`,objValues.organisationUnitId,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}, responseType: 'blob'},\r\n        )\r\n          .then(response => {\r\n            setLoading(false)\r\n            const fileName =`${objValues.organisationUnitName} HTS Register ${currentDate}`\r\n            const responseData = response.data\r\n            let blob = new Blob([responseData], {type: \"application/octet-stream\"});\r\n\r\n            FileSaver.saveAs(blob, `${fileName}.xlsx`);\r\n            toast.success(\"HTS Register generated successfully\");\r\n          })\r\n          .catch(error => {\r\n            setLoading(false)\r\n            if(error.response && error.response.data){\r\n                let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                toast.error(errorMessage);\r\n              }\r\n              else{\r\n                toast.error(\"Something went wrong. Please try again...\");\r\n              }\r\n          });\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <Card >\r\n                <CardBody>\r\n\r\n                <h2 style={{color:'#000'}}>HTS REGISTER</h2>\r\n                <br/>\r\n                    <form >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>From *</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"startDate\"\r\n                                        id=\"startDate\"\r\n                                        min={\"1980-01-01\"}\r\n                                        max={currentDate}\r\n                                        value={objValues.startDate}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>To *</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"endDate\"\r\n                                        id=\"endDate\"\r\n                                        min={\"1980-01-01\"}\r\n                                        max={currentDate}\r\n                                        //min={objValues.startDate}\r\n                                        value={objValues.endDate}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                 <FormGroup check>\r\n                                  <Label check>\r\n                                    <Input type=\"checkbox\" onChange={handleValueChange}/>\r\n                                     {' '} &nbsp;&nbsp;<span> As at Today.</span>\r\n                                  </Label>\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>Facility*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"organisationUnitId\"\r\n                                        id=\"organisationUnitId\"\r\n                                        value={objValues.organisationUnitId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {facilities.map((value) => (\r\n                                            <option key={value.id} value={value.organisationUnitId}>\r\n                                                {value.organisationUnitName}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n\r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                            <Button type=\"submit\" content='Generate Report' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit} disabled={objValues.organisationUnitId===\"\" ? true : false}/>\r\n                            </div>\r\n                            </div>\r\n\r\n                            {loading && (\r\n                                <Message icon>\r\n                                    <Icon name='circle notched' loading />\r\n                                <Message.Content>\r\n                                <Message.Header>Just one second</Message.Header>\r\n                                    We are fetching that content for you.\r\n                                </Message.Content>\r\n                                </Message>\r\n                            )}\r\n                        </div>\r\n                    </form>\r\n\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PrepLongitudinalReport","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\HIVSTReport.js",["251","252","253"],"C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\HTSIndexReport.js",["254","255","256"],"C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\CustomReport.js",["257","258","259","260","261","262","263","264","265","266"],"C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Shared\\Scrollable.js",["267","268","269","270","271"],"import React from 'react';\r\nimport {FormGroup, Label, CardBody, Spinner,Input,Form} from \"reactstrap\";\r\n// import { Input } from '@material-ui/core';\r\n\r\nconst ScrollableDiv = (props) => {\r\n  const items = Array.from({ length: 50 }, (_, index) => `Item ${index + 1}`);\r\n\r\n\r\n  function extractPatterns(e) {\r\n    const pattern = /\\{\\{([^}]+)\\}\\}/g;\r\n    let match;\r\n    while ((match = pattern.exec(e)) !== null) {\r\n      console.log(match[1]);\r\n    }\r\n  }\r\n\r\n  const containerStyle = {\r\n    width: 'auto',\r\n    margin: '0 auto'\r\n  };\r\n\r\n  const scrollableDivStyle = {\r\n    height: '325px',\r\n    overflowY: 'auto',\r\n    border: '1px solid #ccc',\r\n    padding: '10px',\r\n    boxSizing: 'border-box'\r\n  };\r\n\r\n  const itemStyle = {\r\n    padding: '5px',\r\n    borderBottom: '1px solid #ddd'\r\n  };\r\n\r\n  return (\r\n    <div style={containerStyle}>\r\n      <div style={scrollableDivStyle}>\r\n        {props.listOfParams?.map((match, index) => (\r\n          <div key={index} style={{...itemStyle, display:\"flex\"}}>\r\n            <FormGroup>\r\n            <Label>{Object.keys(match)[0]}</Label>\r\n            if({Object.keys(match)[0]}.includes(\"Facility\")){\r\n              <select\r\n                  className=\"form-control\"\r\n                  name=\"organisationUnitId\"\r\n                  id=\"organisationUnitId\"\r\n                  value={props.objValues?.organisationUnitId}\r\n                  style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}>\r\n                  <option value={\"\"}></option>\r\n                  {props.objValues?.facilities.map((value) => (\r\n                      <option key={value.id} value={value.organisationUnitId}>\r\n                          {value.organisationUnitName}\r\n                      </option>\r\n                  ))}\r\n              </select>\r\n            }else if({Object.keys(match)[0]}.includes(\"Date\")){\r\n              <Input\r\n                type=\"date\"\r\n                className=\"form-control\"\r\n                name=\"endDate\"\r\n                id=\"endDate\"\r\n                min={\"1980-01-01\"}\r\n                max={props.objValues?.currentDate}\r\n                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n              />\r\n            }else{\r\n              <Input\r\n                type=\"date\"\r\n                className=\"form-control\"\r\n                name=\"endDate\"\r\n                id=\"endDate\"\r\n                min={\"1980-01-01\"}\r\n                max={props.objValues?.currentDate}\r\n                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n              />\r\n            }\r\n            </FormGroup>\r\n          </div>\r\n          \r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ScrollableDiv;\r\n",{"ruleId":"272","severity":1,"message":"273","line":4,"column":41,"nodeType":"274","messageId":"275","endLine":4,"endColumn":47},{"ruleId":"276","replacedBy":"277"},{"ruleId":"278","replacedBy":"279"},{"ruleId":"272","severity":1,"message":"280","line":4,"column":25,"nodeType":"274","messageId":"275","endLine":4,"endColumn":35},{"ruleId":"272","severity":1,"message":"281","line":5,"column":9,"nodeType":"274","messageId":"275","endLine":5,"endColumn":13},{"ruleId":"272","severity":1,"message":"282","line":48,"column":11,"nodeType":"274","messageId":"275","endLine":48,"endColumn":18},{"ruleId":"272","severity":1,"message":"283","line":49,"column":12,"nodeType":"274","messageId":"275","endLine":49,"endColumn":19},{"ruleId":"272","severity":1,"message":"284","line":49,"column":21,"nodeType":"274","messageId":"275","endLine":49,"endColumn":31},{"ruleId":"272","severity":1,"message":"285","line":4,"column":26,"nodeType":"274","messageId":"275","endLine":4,"endColumn":31},{"ruleId":"272","severity":1,"message":"286","line":8,"column":10,"nodeType":"274","messageId":"275","endLine":8,"endColumn":14},{"ruleId":"272","severity":1,"message":"287","line":8,"column":22,"nodeType":"274","messageId":"275","endLine":8,"endColumn":30},{"ruleId":"272","severity":1,"message":"282","line":47,"column":9,"nodeType":"274","messageId":"275","endLine":47,"endColumn":16},{"ruleId":"272","severity":1,"message":"288","line":48,"column":10,"nodeType":"274","messageId":"275","endLine":48,"endColumn":16},{"ruleId":"272","severity":1,"message":"289","line":48,"column":18,"nodeType":"274","messageId":"275","endLine":48,"endColumn":27},{"ruleId":"272","severity":1,"message":"290","line":3,"column":38,"nodeType":"274","messageId":"275","endLine":3,"endColumn":45},{"ruleId":"272","severity":1,"message":"291","line":3,"column":46,"nodeType":"274","messageId":"275","endLine":3,"endColumn":51},{"ruleId":"272","severity":1,"message":"281","line":3,"column":52,"nodeType":"274","messageId":"275","endLine":3,"endColumn":56},{"ruleId":"272","severity":1,"message":"282","line":59,"column":11,"nodeType":"274","messageId":"275","endLine":59,"endColumn":18},{"ruleId":"272","severity":1,"message":"290","line":3,"column":38,"nodeType":"274","messageId":"275","endLine":3,"endColumn":45},{"ruleId":"272","severity":1,"message":"291","line":3,"column":46,"nodeType":"274","messageId":"275","endLine":3,"endColumn":51},{"ruleId":"272","severity":1,"message":"281","line":3,"column":52,"nodeType":"274","messageId":"275","endLine":3,"endColumn":56},{"ruleId":"272","severity":1,"message":"282","line":59,"column":11,"nodeType":"274","messageId":"275","endLine":59,"endColumn":18},{"ruleId":"272","severity":1,"message":"290","line":3,"column":38,"nodeType":"274","messageId":"275","endLine":3,"endColumn":45},{"ruleId":"272","severity":1,"message":"281","line":3,"column":54,"nodeType":"274","messageId":"275","endLine":3,"endColumn":58},{"ruleId":"272","severity":1,"message":"282","line":57,"column":9,"nodeType":"274","messageId":"275","endLine":57,"endColumn":16},{"ruleId":"272","severity":1,"message":"290","line":3,"column":38,"nodeType":"274","messageId":"275","endLine":3,"endColumn":45},{"ruleId":"272","severity":1,"message":"281","line":3,"column":52,"nodeType":"274","messageId":"275","endLine":3,"endColumn":56},{"ruleId":"272","severity":1,"message":"282","line":57,"column":11,"nodeType":"274","messageId":"275","endLine":57,"endColumn":18},{"ruleId":"272","severity":1,"message":"290","line":3,"column":38,"nodeType":"274","messageId":"275","endLine":3,"endColumn":45},{"ruleId":"272","severity":1,"message":"291","line":3,"column":46,"nodeType":"274","messageId":"275","endLine":3,"endColumn":51},{"ruleId":"272","severity":1,"message":"281","line":3,"column":52,"nodeType":"274","messageId":"275","endLine":3,"endColumn":56},{"ruleId":"272","severity":1,"message":"282","line":94,"column":11,"nodeType":"274","messageId":"275","endLine":94,"endColumn":18},{"ruleId":"272","severity":1,"message":"290","line":3,"column":38,"nodeType":"274","messageId":"275","endLine":3,"endColumn":45},{"ruleId":"272","severity":1,"message":"291","line":3,"column":46,"nodeType":"274","messageId":"275","endLine":3,"endColumn":51},{"ruleId":"272","severity":1,"message":"281","line":3,"column":52,"nodeType":"274","messageId":"275","endLine":3,"endColumn":56},{"ruleId":"272","severity":1,"message":"282","line":59,"column":11,"nodeType":"274","messageId":"275","endLine":59,"endColumn":18},{"ruleId":"272","severity":1,"message":"290","line":3,"column":38,"nodeType":"274","messageId":"275","endLine":3,"endColumn":45},{"ruleId":"272","severity":1,"message":"281","line":3,"column":52,"nodeType":"274","messageId":"275","endLine":3,"endColumn":56},{"ruleId":"272","severity":1,"message":"282","line":57,"column":11,"nodeType":"274","messageId":"275","endLine":57,"endColumn":18},{"ruleId":"272","severity":1,"message":"290","line":3,"column":38,"nodeType":"274","messageId":"275","endLine":3,"endColumn":45},{"ruleId":"272","severity":1,"message":"291","line":3,"column":47,"nodeType":"274","messageId":"275","endLine":3,"endColumn":52},{"ruleId":"272","severity":1,"message":"281","line":3,"column":54,"nodeType":"274","messageId":"275","endLine":3,"endColumn":58},{"ruleId":"272","severity":1,"message":"282","line":57,"column":9,"nodeType":"274","messageId":"275","endLine":57,"endColumn":16},{"ruleId":"272","severity":1,"message":"292","line":94,"column":9,"nodeType":"274","messageId":"275","endLine":94,"endColumn":26},{"ruleId":"272","severity":1,"message":"290","line":3,"column":38,"nodeType":"274","messageId":"275","endLine":3,"endColumn":45},{"ruleId":"272","severity":1,"message":"291","line":3,"column":47,"nodeType":"274","messageId":"275","endLine":3,"endColumn":52},{"ruleId":"272","severity":1,"message":"281","line":3,"column":54,"nodeType":"274","messageId":"275","endLine":3,"endColumn":58},{"ruleId":"272","severity":1,"message":"282","line":57,"column":9,"nodeType":"274","messageId":"275","endLine":57,"endColumn":16},{"ruleId":"272","severity":1,"message":"290","line":3,"column":38,"nodeType":"274","messageId":"275","endLine":3,"endColumn":45},{"ruleId":"272","severity":1,"message":"291","line":3,"column":47,"nodeType":"274","messageId":"275","endLine":3,"endColumn":52},{"ruleId":"272","severity":1,"message":"281","line":3,"column":54,"nodeType":"274","messageId":"275","endLine":3,"endColumn":58},{"ruleId":"272","severity":1,"message":"282","line":57,"column":9,"nodeType":"274","messageId":"275","endLine":57,"endColumn":16},{"ruleId":"272","severity":1,"message":"290","line":3,"column":38,"nodeType":"274","messageId":"275","endLine":3,"endColumn":45},{"ruleId":"272","severity":1,"message":"281","line":3,"column":52,"nodeType":"274","messageId":"275","endLine":3,"endColumn":56},{"ruleId":"272","severity":1,"message":"282","line":57,"column":11,"nodeType":"274","messageId":"275","endLine":57,"endColumn":18},{"ruleId":"272","severity":1,"message":"290","line":3,"column":38,"nodeType":"274","messageId":"275","endLine":3,"endColumn":45},{"ruleId":"272","severity":1,"message":"291","line":3,"column":46,"nodeType":"274","messageId":"275","endLine":3,"endColumn":51},{"ruleId":"272","severity":1,"message":"281","line":3,"column":52,"nodeType":"274","messageId":"275","endLine":3,"endColumn":56},{"ruleId":"272","severity":1,"message":"282","line":59,"column":11,"nodeType":"274","messageId":"275","endLine":59,"endColumn":18},{"ruleId":"272","severity":1,"message":"290","line":3,"column":38,"nodeType":"274","messageId":"275","endLine":3,"endColumn":45},{"ruleId":"272","severity":1,"message":"281","line":3,"column":52,"nodeType":"274","messageId":"275","endLine":3,"endColumn":56},{"ruleId":"272","severity":1,"message":"282","line":57,"column":11,"nodeType":"274","messageId":"275","endLine":57,"endColumn":18},{"ruleId":"272","severity":1,"message":"290","line":3,"column":38,"nodeType":"274","messageId":"275","endLine":3,"endColumn":45},{"ruleId":"272","severity":1,"message":"281","line":3,"column":52,"nodeType":"274","messageId":"275","endLine":3,"endColumn":56},{"ruleId":"272","severity":1,"message":"282","line":57,"column":11,"nodeType":"274","messageId":"275","endLine":57,"endColumn":18},{"ruleId":"272","severity":1,"message":"290","line":3,"column":38,"nodeType":"274","messageId":"275","endLine":3,"endColumn":45},{"ruleId":"272","severity":1,"message":"291","line":3,"column":47,"nodeType":"274","messageId":"275","endLine":3,"endColumn":52},{"ruleId":"272","severity":1,"message":"281","line":3,"column":54,"nodeType":"274","messageId":"275","endLine":3,"endColumn":58},{"ruleId":"272","severity":1,"message":"282","line":57,"column":9,"nodeType":"274","messageId":"275","endLine":57,"endColumn":16},{"ruleId":"272","severity":1,"message":"290","line":3,"column":38,"nodeType":"274","messageId":"275","endLine":3,"endColumn":45},{"ruleId":"272","severity":1,"message":"291","line":3,"column":47,"nodeType":"274","messageId":"275","endLine":3,"endColumn":52},{"ruleId":"272","severity":1,"message":"281","line":3,"column":54,"nodeType":"274","messageId":"275","endLine":3,"endColumn":58},{"ruleId":"272","severity":1,"message":"282","line":57,"column":9,"nodeType":"274","messageId":"275","endLine":57,"endColumn":16},{"ruleId":"272","severity":1,"message":"290","line":3,"column":38,"nodeType":"274","messageId":"275","endLine":3,"endColumn":45},{"ruleId":"272","severity":1,"message":"281","line":3,"column":52,"nodeType":"274","messageId":"275","endLine":3,"endColumn":56},{"ruleId":"272","severity":1,"message":"282","line":57,"column":11,"nodeType":"274","messageId":"275","endLine":57,"endColumn":18},{"ruleId":"272","severity":1,"message":"290","line":3,"column":38,"nodeType":"274","messageId":"275","endLine":3,"endColumn":45},{"ruleId":"272","severity":1,"message":"281","line":3,"column":52,"nodeType":"274","messageId":"275","endLine":3,"endColumn":56},{"ruleId":"272","severity":1,"message":"282","line":57,"column":11,"nodeType":"274","messageId":"275","endLine":57,"endColumn":18},{"ruleId":"272","severity":1,"message":"290","line":3,"column":38,"nodeType":"274","messageId":"275","endLine":3,"endColumn":45},{"ruleId":"272","severity":1,"message":"281","line":3,"column":52,"nodeType":"274","messageId":"275","endLine":3,"endColumn":56},{"ruleId":"272","severity":1,"message":"282","line":57,"column":11,"nodeType":"274","messageId":"275","endLine":57,"endColumn":18},{"ruleId":"272","severity":1,"message":"290","line":3,"column":38,"nodeType":"274","messageId":"275","endLine":3,"endColumn":45},{"ruleId":"272","severity":1,"message":"281","line":3,"column":52,"nodeType":"274","messageId":"275","endLine":3,"endColumn":56},{"ruleId":"272","severity":1,"message":"282","line":57,"column":11,"nodeType":"274","messageId":"275","endLine":57,"endColumn":18},{"ruleId":"272","severity":1,"message":"290","line":3,"column":38,"nodeType":"274","messageId":"275","endLine":3,"endColumn":45},{"ruleId":"272","severity":1,"message":"281","line":3,"column":52,"nodeType":"274","messageId":"275","endLine":3,"endColumn":56},{"ruleId":"272","severity":1,"message":"282","line":57,"column":11,"nodeType":"274","messageId":"275","endLine":57,"endColumn":18},{"ruleId":"272","severity":1,"message":"290","line":3,"column":38,"nodeType":"274","messageId":"275","endLine":3,"endColumn":45},{"ruleId":"272","severity":1,"message":"281","line":3,"column":52,"nodeType":"274","messageId":"275","endLine":3,"endColumn":56},{"ruleId":"272","severity":1,"message":"282","line":57,"column":11,"nodeType":"274","messageId":"275","endLine":57,"endColumn":18},{"ruleId":"272","severity":1,"message":"290","line":3,"column":38,"nodeType":"274","messageId":"275","endLine":3,"endColumn":45},{"ruleId":"272","severity":1,"message":"281","line":3,"column":52,"nodeType":"274","messageId":"275","endLine":3,"endColumn":56},{"ruleId":"272","severity":1,"message":"282","line":57,"column":11,"nodeType":"274","messageId":"275","endLine":57,"endColumn":18},{"ruleId":"272","severity":1,"message":"290","line":3,"column":38,"nodeType":"274","messageId":"275","endLine":3,"endColumn":45},{"ruleId":"272","severity":1,"message":"291","line":3,"column":47,"nodeType":"274","messageId":"275","endLine":3,"endColumn":52},{"ruleId":"272","severity":1,"message":"281","line":3,"column":54,"nodeType":"274","messageId":"275","endLine":3,"endColumn":58},{"ruleId":"272","severity":1,"message":"282","line":60,"column":11,"nodeType":"274","messageId":"275","endLine":60,"endColumn":18},{"ruleId":"272","severity":1,"message":"293","line":118,"column":15,"nodeType":"274","messageId":"275","endLine":118,"endColumn":43},{"ruleId":"272","severity":1,"message":"294","line":119,"column":15,"nodeType":"274","messageId":"275","endLine":119,"endColumn":19},{"ruleId":"272","severity":1,"message":"293","line":124,"column":15,"nodeType":"274","messageId":"275","endLine":124,"endColumn":43},{"ruleId":"272","severity":1,"message":"294","line":125,"column":15,"nodeType":"274","messageId":"275","endLine":125,"endColumn":19},{"ruleId":"272","severity":1,"message":"293","line":130,"column":15,"nodeType":"274","messageId":"275","endLine":130,"endColumn":43},{"ruleId":"272","severity":1,"message":"294","line":131,"column":15,"nodeType":"274","messageId":"275","endLine":131,"endColumn":19},{"ruleId":"272","severity":1,"message":"295","line":2,"column":27,"nodeType":"274","messageId":"275","endLine":2,"endColumn":35},{"ruleId":"272","severity":1,"message":"290","line":2,"column":37,"nodeType":"274","messageId":"275","endLine":2,"endColumn":44},{"ruleId":"272","severity":1,"message":"281","line":2,"column":51,"nodeType":"274","messageId":"275","endLine":2,"endColumn":55},{"ruleId":"272","severity":1,"message":"296","line":6,"column":9,"nodeType":"274","messageId":"275","endLine":6,"endColumn":14},{"ruleId":"272","severity":1,"message":"297","line":9,"column":12,"nodeType":"274","messageId":"275","endLine":9,"endColumn":27},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","no-native-reassign",["298"],"no-negated-in-lhs",["299"],"'Breadcrumb' is defined but never used.","'Form' is defined but never used.","'classes' is assigned a value but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'toast' is defined but never used.","'Icon' is defined but never used.","'Dropdown' is defined but never used.","'saving' is assigned a value but never used.","'setSaving' is assigned a value but never used.","'Spinner' is defined but never used.","'Input' is defined but never used.","'handleValueChange' is assigned a value but never used.","'objValuesWithTemplateStrings' is assigned a value but never used.","'text' is assigned a value but never used.","'CardBody' is defined but never used.","'items' is assigned a value but never used.","'extractPatterns' is defined but never used.","no-global-assign","no-unsafe-negation"]