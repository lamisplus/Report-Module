[{"/Users/basil/Desktop/Palladium_Pro/lamis_app/Report-Module/src/index.js":"1","/Users/basil/Desktop/Palladium_Pro/lamis_app/Report-Module/src/App.js":"2","/Users/basil/Desktop/Palladium_Pro/lamis_app/Report-Module/src/main/webapp/context/ThemeContext.js":"3","/Users/basil/Desktop/Palladium_Pro/lamis_app/Report-Module/src/main/webapp/reportWebVitals.js":"4","/Users/basil/Desktop/Palladium_Pro/lamis_app/Report-Module/src/main/webapp/context/ThemeDemo.js":"5","/Users/basil/Desktop/Palladium_Pro/lamis_app/Report-Module/src/main/webapp/jsx/components/Home.js":"6","/Users/basil/Desktop/Palladium_Pro/lamis_app/Report-Module/src/main/webapp/jsx/components/Reports/Index.js":"7","/Users/basil/Desktop/Palladium_Pro/lamis_app/Report-Module/src/main/webapp/jsx/components/Visualisation/Index.js":"8","/Users/basil/Desktop/Palladium_Pro/lamis_app/Report-Module/src/main/webapp/jsx/components/Reports/ClinicData.js":"9","/Users/basil/Desktop/Palladium_Pro/lamis_app/Report-Module/src/main/webapp/jsx/components/Reports/LaboratoryReport.js":"10","/Users/basil/Desktop/Palladium_Pro/lamis_app/Report-Module/src/main/webapp/jsx/components/Reports/PatientLineList.js":"11","/Users/basil/Desktop/Palladium_Pro/lamis_app/Report-Module/src/main/webapp/jsx/components/Reports/Appointment.js":"12","/Users/basil/Desktop/Palladium_Pro/lamis_app/Report-Module/src/main/webapp/jsx/components/Reports/Radet.js":"13","/Users/basil/Desktop/Palladium_Pro/lamis_app/Report-Module/src/main/webapp/jsx/components/Reports/PharmacyReport.js":"14","/Users/basil/Desktop/Palladium_Pro/lamis_app/Report-Module/src/main/webapp/jsx/components/Reports/BiometricReport.js":"15","/Users/basil/Desktop/Palladium_Pro/lamis_app/Report-Module/src/main/webapp/jsx/components/Reports/ClientVerification.js":"16","/Users/basil/Desktop/Palladium_Pro/lamis_app/Report-Module/src/main/webapp/jsx/components/Reports/TbReport.js":"17","/Users/basil/Desktop/Palladium_Pro/lamis_app/Report-Module/src/main/webapp/jsx/components/Reports/PrepReport.js":"18","/Users/basil/Desktop/Palladium_Pro/lamis_app/Report-Module/src/main/webapp/jsx/components/Reports/HTSReport.js":"19","/Users/basil/Desktop/Palladium_Pro/lamis_app/Report-Module/src/main/webapp/jsx/components/Reports/PmtctHtsReport.js":"20","/Users/basil/Desktop/Palladium_Pro/lamis_app/Report-Module/src/main/webapp/jsx/components/Reports/PmtctMaternalCohortReport.js":"21","/Users/basil/Desktop/Palladium_Pro/lamis_app/Report-Module/src/main/webapp/jsx/components/Reports/IndexElicitation.js":"22","/Users/basil/Desktop/Palladium_Pro/lamis_app/Report-Module/src/main/webapp/api.js":"23"},{"size":729,"mtime":1709981038179,"results":"24","hashOfConfig":"25"},{"size":810,"mtime":1709981038179,"results":"26","hashOfConfig":"25"},{"size":8947,"mtime":1709981038200,"results":"27","hashOfConfig":"25"},{"size":362,"mtime":1709981039296,"results":"28","hashOfConfig":"25"},{"size":2920,"mtime":1709981038200,"results":"29","hashOfConfig":"25"},{"size":1487,"mtime":1709981039290,"results":"30","hashOfConfig":"25"},{"size":13597,"mtime":1709995581776,"results":"31","hashOfConfig":"25"},{"size":6147,"mtime":1709981039294,"results":"32","hashOfConfig":"25"},{"size":7836,"mtime":1709981039291,"results":"33","hashOfConfig":"25"},{"size":6451,"mtime":1709981039292,"results":"34","hashOfConfig":"25"},{"size":6485,"mtime":1709981039293,"results":"35","hashOfConfig":"25"},{"size":16453,"mtime":1709981039290,"results":"36","hashOfConfig":"25"},{"size":8369,"mtime":1709981039294,"results":"37","hashOfConfig":"25"},{"size":6441,"mtime":1709981039293,"results":"38","hashOfConfig":"25"},{"size":7614,"mtime":1709996573380,"results":"39","hashOfConfig":"25"},{"size":5708,"mtime":1709981039291,"results":"40","hashOfConfig":"25"},{"size":7102,"mtime":1709996541980,"results":"41","hashOfConfig":"25"},{"size":9027,"mtime":1709981039294,"results":"42","hashOfConfig":"25"},{"size":8996,"mtime":1709981039291,"results":"43","hashOfConfig":"25"},{"size":9064,"mtime":1709981039293,"results":"44","hashOfConfig":"25"},{"size":9113,"mtime":1709981039293,"results":"45","hashOfConfig":"25"},{"size":9253,"mtime":1709981039292,"results":"46","hashOfConfig":"25"},{"size":425,"mtime":1709981038199,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},"1ti93at",{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/basil/Desktop/Palladium_Pro/lamis_app/Report-Module/src/index.js",["109"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter, MemoryRouter as Router,} from 'react-router-dom';\n\nimport reportWebVitals from \"./../src/main/webapp/reportWebVitals\";\nimport SimpleReactLightbox from \"simple-react-lightbox\";\nimport  ThemeContext  from \"./../src/main/webapp/context/ThemeContext\"; \n\nReactDOM.render(\n\t<React.StrictMode>\n\n            <SimpleReactLightbox>\n                <BrowserRouter basename='/'>\n                    <ThemeContext>\n                        <App />\n                    </ThemeContext>  \n                </BrowserRouter>\n            </SimpleReactLightbox>\n\n\t</React.StrictMode>,\n  document.getElementById(\"root\")\n);\nreportWebVitals();\n","/Users/basil/Desktop/Palladium_Pro/lamis_app/Report-Module/src/App.js",[],"/Users/basil/Desktop/Palladium_Pro/lamis_app/Report-Module/src/main/webapp/context/ThemeContext.js",[],"/Users/basil/Desktop/Palladium_Pro/lamis_app/Report-Module/src/main/webapp/reportWebVitals.js",[],"/Users/basil/Desktop/Palladium_Pro/lamis_app/Report-Module/src/main/webapp/context/ThemeDemo.js",[],"/Users/basil/Desktop/Palladium_Pro/lamis_app/Report-Module/src/main/webapp/jsx/components/Home.js",[],"/Users/basil/Desktop/Palladium_Pro/lamis_app/Report-Module/src/main/webapp/jsx/components/Reports/Index.js",["110","111","112","113","114"],"import React, { useState } from \"react\";\nimport { Card, CardBody } from \"reactstrap\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport \"react-phone-input-2/lib/style.css\";\nimport { Icon, Menu } from \"semantic-ui-react\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport PatientLineList from \"./PatientLineList\";\nimport Appointment from \"./Appointment\";\nimport Radet from \"./Radet\";\nimport BiometricReport from \"./BiometricReport\";\nimport PharmacyReport from \"./PharmacyReport\";\nimport LaboratoryReport from \"./LaboratoryReport\";\nimport HTSReport from \"./HTSReport\";\nimport PrepReport from \"./PrepReport\";\nimport ClinicData from \"./ClinicData\";\nimport ClientVerification from \"./ClientVerification\";\nimport TbReport from \"./TbReport\";\nimport IndexElicitation from \"./IndexElicitation\";\nimport PmtctHtsReport from \"./PmtctHtsReport\";\nimport PmtctMaternalCohortReport from \"./PmtctMaternalCohortReport\";\n\nconst useStyles = makeStyles((theme) => ({\n  error: {\n    color: \"#f85032\",\n    fontSize: \"12.8px\",\n  },\n  success: {\n    color: \"#4BB543 \",\n    fontSize: \"11px\",\n  },\n}));\n\nconst Reports = (props) => {\n  const classes = useStyles();\n  const [saving, setSaving] = useState(false);\n  const [activeItem, setactiveItem] = useState(\"basic\");\n  const [completed, setCompleted] = useState([]);\n  const handleItemClick = (activeItem) => {\n    setactiveItem(activeItem);\n    //setCompleted({...completed, ...completedMenu})\n  };\n\n  return (\n    <>\n      <ToastContainer autoClose={3000} hideProgressBar />\n      <Card>\n        <CardBody>\n          <div className=\"row\">\n            <form>\n              <br />\n              <br />\n              <div className=\"col-md-3 float-start\">\n                <Menu\n                  size=\"small\"\n                  vertical\n                  style={{ backgroundColor: \"#014D88\" }}\n                >\n                  <Menu.Item\n                    name=\"inbox\"\n                    active={activeItem === \"radet\"}\n                    onClick={() => handleItemClick(\"radet\")}\n                    style={{\n                      backgroundColor: activeItem === \"radet\" ? \"#000\" : \"\",\n                    }}\n                  >\n                    <span style={{ color: \"#fff\" }}> RADET </span>\n                  </Menu.Item>\n\n                  <Menu.Item\n                    name=\"spam\"\n                    active={activeItem === \"appointment\"}\n                    onClick={() => handleItemClick(\"appointment\")}\n                    style={{\n                      backgroundColor:\n                        activeItem === \"appointment\" ? \"#000\" : \"\",\n                    }}\n                  >\n                    {/* <Label>4</Label> */}\n                    <span style={{ color: \"#fff\" }}>APPOINTMENT </span>\n                  </Menu.Item>\n                  <Menu.Item\n                    name=\"spam\"\n                    active={activeItem === \"line-list\"}\n                    onClick={() => handleItemClick(\"line-list\")}\n                    style={{\n                      backgroundColor: activeItem === \"line-list\" ? \"#000\" : \"\",\n                    }}\n                  >\n                    {/* <Label>4</Label> */}\n                    <span style={{ color: \"#fff\" }}>PATIENT LINE LIST</span>\n                  </Menu.Item>\n                  <Menu.Item\n                    name=\"inbox\"\n                    active={activeItem === \"pharmacy-report\"}\n                    onClick={() => handleItemClick(\"pharmacy-report\")}\n                    style={{\n                      backgroundColor:\n                        activeItem === \"pharmacy-report\" ? \"#000\" : \"\",\n                    }}\n                  >\n                    <span style={{ color: \"#fff\" }}>PHARMACY DATA</span>\n\n                    {/* <Label color='teal'>5</Label> */}\n                  </Menu.Item>\n                  <Menu.Item\n                    name=\"inbox\"\n                    active={activeItem === \"biometric\"}\n                    onClick={() => handleItemClick(\"biometric\")}\n                    style={{\n                      backgroundColor: activeItem === \"biometric\" ? \"#000\" : \"\",\n                    }}\n                  >\n                    <span style={{ color: \"#fff\" }}>BIOMETRIC DATA</span>\n\n                    {/* <Label color='teal'>5</Label> */}\n                  </Menu.Item>\n                  <Menu.Item\n                    name=\"inbox\"\n                    active={activeItem === \"laboratory-report\"}\n                    onClick={() => handleItemClick(\"laboratory-report\")}\n                    style={{\n                      backgroundColor:\n                        activeItem === \"laboratory-report\" ? \"#000\" : \"\",\n                    }}\n                  >\n                    <span style={{ color: \"#fff\" }}>LABORATORY DATA</span>\n\n                    {/* <Label color='teal'>5</Label> */}\n                  </Menu.Item>\n                  <Menu.Item\n                    name=\"inbox\"\n                    active={activeItem === \"hts-report\"}\n                    onClick={() => handleItemClick(\"hts-report\")}\n                    style={{\n                      backgroundColor:\n                        activeItem === \"hts-report\" ? \"#000\" : \"\",\n                    }}\n                  >\n                    <span style={{ color: \"#fff\" }}>HTS REPORT</span>\n\n                    {/* <Label color='teal'>5</Label> */}\n                  </Menu.Item>\n                  <Menu.Item\n                    name=\"inbox\"\n                    active={activeItem === \"prep-report\"}\n                    onClick={() => handleItemClick(\"prep-report\")}\n                    style={{\n                      backgroundColor:\n                        activeItem === \"prep-report\" ? \"#000\" : \"\",\n                    }}\n                  >\n                    <span style={{ color: \"#fff\" }}>Prep REPORT</span>\n\n                    {/* <Label color='teal'>5</Label> */}\n                  </Menu.Item>\n                  <Menu.Item\n                    name=\"inbox\"\n                    active={activeItem === \"clinic-data-report\"}\n                    onClick={() => handleItemClick(\"clinic-data-report\")}\n                    style={{\n                      backgroundColor:\n                        activeItem === \"clinic-data-report\" ? \"#000\" : \"\",\n                    }}\n                  >\n                    <span style={{ color: \"#fff\" }}>CLINIC DATA REPORT</span>\n\n                    {/* <Label color='teal'>5</Label> */}\n                  </Menu.Item>\n\n                  <Menu.Item\n                    name=\"inbox\"\n                    active={activeItem === \"client-verification\"}\n                    onClick={() => handleItemClick(\"client-verification\")}\n                    style={{\n                      backgroundColor:\n                        activeItem === \"client-verification\" ? \"#000\" : \"\",\n                    }}\n                  >\n                    <span style={{ color: \"#fff\" }}>CLIENT VERIFICATION</span>\n\n                    {/* <Label color='teal'>5</Label> */}\n                  </Menu.Item>\n\n                  <Menu.Item\n                    name=\"inbox\"\n                    active={activeItem === \"tb-report\"}\n                    onClick={() => handleItemClick(\"tb-report\")}\n                    style={{\n                      backgroundColor:\n                        activeItem === \"tb-report\" ? \"#000\" : \"\",\n                    }}\n                  >\n                    <span style={{ color: \"#fff\" }}>TB REPORT</span>\n\n                    {/* <Label color='teal'>5</Label> */}\n                  </Menu.Item>\n                  <Menu.Item\n                      name=\"inbox\"\n                      active={activeItem === \"index-elicitation\"}\n                      onClick={() => handleItemClick(\"index-elicitation\")}\n                      style={{\n                        backgroundColor:\n                            activeItem === \"index-elicitation\" ? \"#000\" : \"\",\n                      }}\n                  >\n                    <span style={{ color: \"#fff\" }}>INDEX ELICITATION</span>\n\n                    {/* <Label color='teal'>5</Label> */}\n                  </Menu.Item>\n                  <Menu.Item\n                      name=\"inbox\"\n                      active={activeItem === \"pmtct-hts\"}\n                      onClick={() => handleItemClick(\"pmtct-hts\")}\n                      style={{\n                        backgroundColor:\n                            activeItem === \"pmtct-hts\" ? \"#000\" : \"\",\n                      }}\n                  >\n                    <span style={{ color: \"#fff\" }}>PMTCT HTS</span>\n\n                    {/* <Label color='teal'>5</Label> */}\n                  </Menu.Item>\n                  <Menu.Item\n                      name=\"inbox\"\n                      active={activeItem === \"pmtct-maternal-cohort\"}\n                      onClick={() => handleItemClick(\"pmtct-maternal-cohort\")}\n                      style={{\n                        backgroundColor:\n                            activeItem === \"pmtct-maternal-cohort\" ? \"#000\" : \"\",\n                      }}\n                  >\n                    <span style={{ color: \"#fff\" }}>PMTCT MATERNAL COHORT</span>\n\n                    {/* <Label color='teal'>5</Label> */}\n                  </Menu.Item>\n                </Menu>\n\n              </div>\n              <div\n                className=\"col-md-9 float-end\"\n                style={{ backgroundColor: \"#fff\" }}\n              >\n                {activeItem === \"line-list\" && (\n                  <PatientLineList\n                    handleItemClick={handleItemClick}\n                    setCompleted={setCompleted}\n                    completed={completed}\n                  />\n                )}\n                {activeItem === \"appointment\" && (\n                  <Appointment\n                    handleItemClick={handleItemClick}\n                    setCompleted={setCompleted}\n                    completed={completed}\n                  />\n                )}\n                {activeItem === \"radet\" && (\n                  <Radet\n                    handleItemClick={handleItemClick}\n                    setCompleted={setCompleted}\n                    completed={completed}\n                  />\n                )}\n                {activeItem === \"biometric\" && (\n                  <BiometricReport\n                    handleItemClick={handleItemClick}\n                    setCompleted={setCompleted}\n                    completed={completed}\n                  />\n                )}\n                {activeItem === \"pharmacy-report\" && (\n                  <PharmacyReport\n                    handleItemClick={handleItemClick}\n                    setCompleted={setCompleted}\n                    completed={completed}\n                  />\n                )}\n                {activeItem === \"laboratory-report\" && (\n                  <LaboratoryReport\n                    handleItemClick={handleItemClick}\n                    setCompleted={setCompleted}\n                    completed={completed}\n                  />\n                )}\n                {activeItem === \"tb-report\" && (\n                  <TbReport\n                    handleItemClick={handleItemClick}\n                    setCompleted={setCompleted}\n                    completed={completed}\n                  />\n                )}\n                {activeItem === \"hts-report\" && (\n                  <HTSReport\n                    handleItemClick={handleItemClick}\n                    setCompleted={setCompleted}\n                    completed={completed}\n                  />\n                )}\n                {activeItem === \"prep-report\" && (\n                  <PrepReport\n                    handleItemClick={handleItemClick}\n                    setCompleted={setCompleted}\n                    completed={completed}\n                  />\n                )}\n                {activeItem === \"clinic-data-report\" && (\n                  <ClinicData\n                    handleItemClick={handleItemClick}\n                    setCompleted={setCompleted}\n                    completed={completed}\n                  />\n                )}\n\n                {activeItem === \"client-verification\" && (\n                  <ClientVerification\n                    handleItemClick={handleItemClick}\n                    setCompleted={setCompleted}\n                    completed={completed}\n                  />\n                )\n                }\n                {activeItem === \"index-elicitation\" && (\n                    <IndexElicitation\n                        handleItemClick={handleItemClick}\n                        setCompleted={setCompleted}\n                        completed={completed}\n                    />\n                )\n                }\n                {activeItem === \"pmtct-hts\" && (\n                    <PmtctHtsReport\n                        handleItemClick={handleItemClick}\n                        setCompleted={setCompleted}\n                        completed={completed}\n                    />\n                )\n                }\n                {activeItem === \"pmtct-maternal-cohort\" && (\n                    <PmtctMaternalCohortReport\n                        handleItemClick={handleItemClick}\n                        setCompleted={setCompleted}\n                        completed={completed}\n                    />\n                )\n                }\n              </div>\n            </form>\n          </div>\n        </CardBody>\n      </Card>\n    </>\n  );\n};\n\nexport default Reports;\n","/Users/basil/Desktop/Palladium_Pro/lamis_app/Report-Module/src/main/webapp/jsx/components/Visualisation/Index.js",["115","116","117","118","119"],"import React, { useState } from \"react\";\nimport {Card,CardBody,} from \"reactstrap\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {  Icon, Button, Breadcrumb} from 'semantic-ui-react';\nimport {Form,Row,Col,FormGroup,Label,Input, FormFeedback} from 'reactstrap';\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        margin: theme.spacing(20),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3)\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2)\n    },\n    cardBottom: {\n        marginBottom: 20\n    },\n    Select: {\n        height: 45,\n        width: 350\n    },\n    button: {\n        margin: theme.spacing(1)\n    },\n    root: {\n        '& > *': {\n          margin: theme.spacing(1)\n        }\n    },\n    input: {\n        display: 'none'\n    },\n    error:{\n        color: '#f85032',\n        fontSize: '12.8px'\n    }\n}))\n\nconst GenerateCharts = (props) => {\n    const classes = useStyles()\n    const [loading, setLoading] = useState(false)\n\n\n  return (\n    <div >\n        <Card >\n         <CardBody>\n\n                 <Row style={{ marginTop: '20px'}}>\n  \n                    <Col md=\"3\">\n                    <FormGroup>\n                        <Label>Data Category </Label>\n                            <Input\n                                type=\"select\"\n                                name=\"category\"\n                                id=\"category\"\n                              \n                            >\n                                <option value=\"\"></option>\n                                <option value=\"indicator\"> Indicator </option>\n\n                            </Input>\n\n                    </FormGroup>\n                    </Col>\n                    <Col md=\"3\">\n                    <FormGroup>\n                        <Label>Chart Type </Label>\n                            <Input\n                                type=\"select\"\n                                name=\"chart_type\"\n                                id=\"chart_type\"\n                               \n                            >\n                                <option value=\"\"></option>\n                                <option value=\"column\"> Pie Chart</option>\n                                <option value=\"column\"> Bar Chart</option>\n                                <option value=\"column\"> Column Chart </option>\n                                <option value=\"column\"> Line Chart</option>\n                                <option value=\"column\"> Area Chart </option>\n                            </Input>\n\n                    </FormGroup>\n                    </Col>\n                    <Col md=\"3\">\n                    <FormGroup>\n                        <Label>Gender </Label>\n                            <Input\n                                type=\"select\"\n                                name=\"gender\"\n                                id=\"gender\"\n                              \n                            >\n                                <option value=\"\">All</option>\n                                <option value=\"Male\">Male </option>\n                                <option value=\"Female\"> Female </option>\n                               \n                            </Input>\n\n                    </FormGroup>\n                    </Col>\n                    <Col md=\"3\">\n                     <FormGroup>\n                            <Label for=\"exampleSelect\">Age Disaggregation</Label>\n                                <Input type=\"text\" name=\"age_disaggregation\" id=\"age_disaggregation\"  >\n                                    \n                                </Input>\n                                    <FormFeedback></FormFeedback>\n                        </FormGroup>\n                    </Col>\n                    <Col md=\"3\">\n                    <FormGroup>\n                        <Label>Data Element </Label>\n                            <Input\n                                type=\"select\"\n                                name=\"data_element\"\n                                id=\"data_element\"\n                                \n                            >\n\n                                <option value=\"\"></option>\n                                <option value=\"TX_CURR\">TX_CURR </option>\n                                <option value=\"TX_NEW\">TX_NEW </option>\n                                <option value=\"PVLS_D\">PVLS_D </option>\n                                <option value=\"PVLS_N\">PVLS_N </option>\n                                <option value=\"HTS_POS\">HTS_POS </option>\n                                <option value=\"HTS\">HTS </option>\n\n                            </Input>\n\n                    </FormGroup>\n                    </Col>\n\n                    <Col md=\"3\">\n                    <FormGroup>\n                        <Label>Start Date </Label>\n                        <Input\n                            type=\"date\"\n                            name=\"data_element\"\n                            id=\"data_element\"                                \n                        />\n                    </FormGroup>\n                    </Col>\n                    <Col md=\"3\">\n                    <FormGroup>\n                        <Label>End Date </Label>\n                        <Input\n                            type=\"date\"\n                            name=\"data_element\"\n                            id=\"data_element\"                                \n                        /> \n                    </FormGroup>\n                    </Col>\n                   \n                    <Col style={{ marginTop: '20px'}}>\n                    <Button icon labelPosition='right' color='blue' >\n                        Generate Chart Report\n                    <Icon name='right arrow' />\n                    </Button>\n                    </Col>\n                    </Row>\n               \n                 \n            </CardBody>\n        </Card>\n    </div>\n  );\n}\n\nexport default GenerateCharts;\n\n\n\n","/Users/basil/Desktop/Palladium_Pro/lamis_app/Report-Module/src/main/webapp/jsx/components/Reports/ClinicData.js",["120","121","122","123","124"],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { FormGroup, Label, CardBody, Spinner, Input, Form } from \"reactstrap\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Card } from \"@material-ui/core\";\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\n// import {TiArrowBack} from 'react-icons/ti'\nimport { token, url as baseUrl } from \"../../../api\";\nimport \"react-phone-input-2/lib/style.css\";\nimport { Button } from \"semantic-ui-react\";\nimport { toast } from \"react-toastify\";\nimport FileSaver from \"file-saver\";\nimport { Message, Icon } from \"semantic-ui-react\";\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    margin: theme.spacing(20),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  cardBottom: {\n    marginBottom: 20,\n  },\n  Select: {\n    height: 45,\n    width: 300,\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n  root: {\n    flexGrow: 1,\n    maxWidth: 752,\n  },\n  demo: {\n    backgroundColor: theme.palette.background.default,\n  },\n  inline: {\n    display: \"inline\",\n  },\n  error: {\n    color: \"#f85032\",\n    fontSize: \"12.8px\",\n  },\n}));\n\nconst ClinicData = (props) => {\n  let currentDate = new Date().toISOString().split(\"T\")[0];\n  const classes = useStyles();\n  const [loading, setLoading] = useState(false);\n  const [facilities, setFacilities] = useState([]);\n  const [status, setStatus] = useState(true);\n  const [objValues, setObjValues] = useState({\n    organisationUnitId: \"\",\n    organisationUnitName: \"\",\n    startDate: \"\",\n    endDate: \"\",\n  });\n  useEffect(() => {\n    Facilities();\n  }, []);\n  //Get list of WhoStaging\n  const Facilities = () => {\n    axios\n      .get(`${baseUrl}account`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        console.log(response.data);\n        setFacilities(response.data.applicationUserOrganisationUnits);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n\n  const handleInputChange = (e) => {\n    //1980-01-01\n    setObjValues({\n      ...objValues,\n      [e.target.name]: e.target.value,\n      organisationUnitName: e.target.innerText,\n    });\n  };\n\n  const handleValueChange = () => {\n    setStatus(!status);\n\n    if (status === true) {\n      setObjValues({\n        ...objValues,\n        startDate: \"1980-01-01\",\n        endDate: currentDate,\n      });\n    } else {\n      setObjValues({ ...objValues, startDate: \"\", endDate: currentDate });\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setLoading(true);\n    //console.log(token);\n\n    axios\n      .get(`${baseUrl}reporting/clinic-data/${objValues.organisationUnitId}`, {\n        headers: { Authorization: `Bearer ${token}` },\n        responseType: \"blob\",\n      })\n      .then((response) => {\n        console.log(response);\n        setLoading(false);\n        const fileName = `${objValues.organisationUnitName} Clinic Data ${currentDate}`;\n        const responseData = response.data;\n        let blob = new Blob([responseData], {\n          type: \"application/octet-stream\",\n        });\n\n        FileSaver.saveAs(blob, `${fileName}.xlsx`);\n        toast.success(\"Clinic data generated successfully\");\n      })\n      .catch((error) => {\n        setLoading(false);\n        if (error.response && error.response.data) {\n          let errorMessage =\n            error.response.data.apierror &&\n            error.response.data.apierror.message !== \"\"\n              ? error.response.data.apierror.message\n              : \"Something went wrong, please try again\";\n          toast.error(errorMessage);\n        } else {\n          toast.error(\"Something went wrong. Please try again...\");\n        }\n      });\n  };\n\n  return (\n    <>\n      <Card>\n        <CardBody>\n          <h2 style={{ color: \"#000\" }}>CLINIC DATA REPORT</h2>\n          <br />\n          <form>\n            <div className=\"row\">\n              {/* <div className=\"form-group  col-md-6\">\n                <FormGroup>\n                  <Label>From *</Label>\n                  <input\n                    type=\"date\"\n                    className=\"form-control\"\n                    name=\"startDate\"\n                    id=\"startDate\"\n                    min={\"1980-01-01\"}\n                    max={currentDate}\n                    value={objValues.startDate}\n                    onChange={handleInputChange}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  />\n                </FormGroup>\n              </div>\n              <div className=\"form-group  col-md-6\">\n                <FormGroup>\n                  <Label>To *</Label>\n                  <input\n                    type=\"date\"\n                    className=\"form-control\"\n                    name=\"endDate\"\n                    id=\"endDate\"\n                    min={\"1980-01-01\"}\n                    max={currentDate}\n                    //min={objValues.startDate}\n                    value={objValues.endDate}\n                    onChange={handleInputChange}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  />\n                </FormGroup>\n              </div>\n              <div className=\"form-group  col-md-6\">\n                <FormGroup check>\n                  <Label check>\n                    <Input type=\"checkbox\" onChange={handleValueChange} />{\" \"}\n                    &nbsp;&nbsp;<span> As at Today.</span>\n                  </Label>\n                </FormGroup>\n              </div> */}\n              <div className=\"form-group  col-md-6\">\n                <FormGroup>\n                  <Label>Facility*</Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"organisationUnitId\"\n                    id=\"organisationUnitId\"\n                    value={objValues.organisationUnitId}\n                    onChange={handleInputChange}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    {facilities.map((value) => (\n                      <option key={value.id} value={value.organisationUnitId}>\n                        {value.organisationUnitName}\n                      </option>\n                    ))}\n                  </select>\n                </FormGroup>\n              </div>\n\n              <br />\n              <div className=\"row\">\n                <div className=\"form-group mb-3 col-md-6\">\n                  <Button\n                    type=\"submit\"\n                    content=\"Generate Report\"\n                    icon=\"right arrow\"\n                    labelPosition=\"right\"\n                    style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\n                    onClick={handleSubmit}\n                    disabled={\n                      objValues.organisationUnitId === \"\" ? true : false\n                    }\n                  />\n                </div>\n              </div>\n\n              {loading && (\n                <Message icon>\n                  <Icon name=\"circle notched\" loading />\n                  <Message.Content>\n                    <Message.Header>Just one second</Message.Header>\n                    We are fetching that content for you.\n                  </Message.Content>\n                </Message>\n              )}\n            </div>\n          </form>\n        </CardBody>\n      </Card>\n    </>\n  );\n};\n\nexport default ClinicData;\n","/Users/basil/Desktop/Palladium_Pro/lamis_app/Report-Module/src/main/webapp/jsx/components/Reports/LaboratoryReport.js",["125","126","127","128"],"import React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Card} from \"@material-ui/core\";\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\n// import {TiArrowBack} from 'react-icons/ti'\nimport {token, url as baseUrl } from \"../../../api\";\nimport 'react-phone-input-2/lib/style.css'\nimport { Button} from 'semantic-ui-react'\nimport { toast} from \"react-toastify\";\nimport FileSaver from \"file-saver\";\nimport { Message, Icon } from 'semantic-ui-react'\n\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        margin: theme.spacing(20),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    cardBottom: {\n        marginBottom: 20,\n    },\n    Select: {\n        height: 45,\n        width: 300,\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n    root: {\n        flexGrow: 1,\n        maxWidth: 752,\n    },\n    demo: {\n        backgroundColor: theme.palette.background.default,\n    },\n    inline: {\n        display: \"inline\",\n    },\n    error:{\n        color: '#f85032',\n        fontSize: '12.8px'\n    }\n}));\n\n\nconst LaboratoryReport = (props) => {\n    let currentDate = new Date().toISOString().split('T')[0]\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false)\n    const [facilities, setFacilities] = useState([]);\n    const [objValues, setObjValues]=useState({       \n        organisationUnitId:\"\",\n        organisationUnitName:\"\"\n    })\n    useEffect(() => {\n        Facilities()\n      }, []);\n    //Get list of WhoStaging\n    const Facilities =()=>{\n    axios\n        .get(`${baseUrl}account`,\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\n        )\n        .then((response) => {\n            //console.log(response.data);\n            setFacilities(response.data.applicationUserOrganisationUnits);\n        })\n        .catch((error) => {\n        //console.log(error);\n        });\n    \n    }\n    const handleInputChange = e => {\n        setObjValues ({...objValues,  [e.target.name]: e.target.value, organisationUnitName: e.target.innerText});\n    }\n    const handleSubmit = (e) => {        \n        e.preventDefault();\n        setLoading(true)\n        axios.get(`${baseUrl}reporting/laboratory/${objValues.organisationUnitId}`,\n           { headers: {\"Authorization\" : `Bearer ${token}`}, responseType: 'blob'},\n          \n          )\n              .then(response => {\n                setLoading(false)\n                const fileName = `${objValues.organisationUnitName} Laboratory ${currentDate}`\n                const responseData = response.data\n                let blob = new Blob([responseData], {type: \"application/octet-stream\"});\n                FileSaver.saveAs(blob, `${fileName}.xlsx`);\n                  //toast.success(\" Save successful\");\n                  //props.setActiveContent('recent-history')\n\n              })\n              .catch(error => {\n                setLoading(false)\n                if(error.response && error.response.data){\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\n                    toast.error(errorMessage);\n                  }\n                  else{\n                    toast.error(\"Something went wrong. Please try again...\");\n                  }\n              });\n            \n\n    }\n    \n    \n\n    return (\n        <>\n            \n            <Card >\n                <CardBody>\n    \n                <h2 style={{color:'#000'}}>LABORATORY REPORT</h2>\n                <br/>\n                    <form >\n                        <div className=\"row\">\n                        \n                            <div className=\"form-group  col-md-6\">\n                                <FormGroup>\n                                    <Label>Facility*</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"organisationUnitId\"\n                                        id=\"organisationUnitId\"\n                                        value={objValues.organisationUnitId}\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        {facilities.map((value) => (\n                                            <option key={value.id} value={value.organisationUnitId}>\n                                                {value.organisationUnitName}\n                                            </option>\n                                        ))}\n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n\n                            <br />\n                            <div className=\"row\">\n                            <div className=\"form-group mb-3 col-md-6\">\n                            <Button type=\"submit\" content='Generate Report' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit} disabled={objValues.organisationUnitId===\"\" ? true : false}/>\n                            </div>\n                            </div>\n\n                            {loading && (\n                                <Message icon>\n                                    <Icon name='circle notched' loading />\n                                <Message.Content>\n                                <Message.Header>Just one second</Message.Header>\n                                    We are fetching that content for you.\n                                </Message.Content>\n                                </Message>\n                            )}\n                        </div>\n                    </form>\n\n                </CardBody>\n            </Card>                                 \n        </>\n    );\n};\n\nexport default LaboratoryReport","/Users/basil/Desktop/Palladium_Pro/lamis_app/Report-Module/src/main/webapp/jsx/components/Reports/PatientLineList.js",["129","130","131","132"],"import React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Card} from \"@material-ui/core\";\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\n// import {TiArrowBack} from 'react-icons/ti'\nimport {token, url as baseUrl } from \"../../../api\";\nimport 'react-phone-input-2/lib/style.css'\nimport { Button} from 'semantic-ui-react'\nimport { toast} from \"react-toastify\";\nimport FileSaver from \"file-saver\";\nimport { Message, Icon } from 'semantic-ui-react'\n\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        margin: theme.spacing(20),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    cardBottom: {\n        marginBottom: 20,\n    },\n    Select: {\n        height: 45,\n        width: 300,\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n    root: {\n        flexGrow: 1,\n        maxWidth: 752,\n    },\n    demo: {\n        backgroundColor: theme.palette.background.default,\n    },\n    inline: {\n        display: \"inline\",\n    },\n    error:{\n        color: '#f85032',\n        fontSize: '12.8px'\n    }\n}));\n\n\nconst PatientLineList = (props) => {\n    let currentDate = new Date().toISOString().split('T')[0]\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false)\n    const [facilitiesUpdate, setFacilities] = useState([]);\n    const [objValues, setObjValues]=useState({       \n        organisationUnitId:\"\",\n        organisationUnitName:\"\",\n    })\n    const handleSubmit = (e) => {        \n        e.preventDefault();\n        setLoading(true)\n        axios.post(`${baseUrl}reporting/patient-line-list?facilityId=${objValues.organisationUnitId}`,objValues.organisationUnitId,\n           { headers: {\"Authorization\" : `Bearer ${token}`}, responseType: 'blob'},\n          )\n              .then(response => {\n                setLoading(false)\n                const fileName = `${objValues.organisationUnitName} Patient Line List ${currentDate}`\n                const responseData = response.data\n                let blob = new Blob([responseData], {type: \"application/octet-stream\"});\n                FileSaver.saveAs(blob, `${fileName}.xlsx`);\n                toast.success(\" Report generated successful\");\n                  //toast.success(\" Save successful\");\n                  //props.setActiveContent('recent-history')\n\n              })\n              .catch(error => {\n                setLoading(false)\n                if(error.response && error.response.data){\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\n                    toast.error(errorMessage);\n                  }\n                  else{\n                    toast.error(\"Something went wrong. Please try again...\");\n                  }\n              });\n            \n\n    }\n    const handleInputChange = e => {\n        setObjValues ({...objValues,  [e.target.name]: e.target.value, organisationUnitName: e.target.innerText});\n    }\n    useEffect(() => {\n        Facilities()\n      }, []);\n    //Get list of WhoStaging\n    const Facilities =()=>{\n    axios\n        .get(`${baseUrl}account`,\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\n        )\n        .then((response) => {\n            console.log(response.data);\n            setFacilities(response.data.applicationUserOrganisationUnits);\n        })\n        .catch((error) => {\n        //console.log(error);\n        });\n    \n    }\nconsole.log(facilitiesUpdate)\n    return (\n        <>\n            \n            <Card >\n                <CardBody>\n    \n                <h2 style={{color:'#000'}}>PATIENT LINE LIST</h2>\n                <br/>\n                    <form >\n                        <div className=\"row\">\n\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Facility*</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"organisationUnitId\"\n                                        id=\"organisationUnitId\"\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        {facilitiesUpdate.map((value) => (\n                                            <option key={value.id} value={value.organisationUnitId}>\n                                                {value.organisationUnitName}\n                                            </option>\n                                        ))}\n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n\n                            <br />\n                            <div className=\"row\">\n                            <div className=\"form-group mb-3 col-md-6\">\n                            <Button type=\"submit\" content='Generate Report' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit} disabled={objValues.organisationUnitId===\"\" ? true : false}/>\n                            </div>\n                            </div>\n\n                            {loading && (\n                                <Message icon>\n                                    <Icon name='circle notched' loading />\n                                <Message.Content>\n                                <Message.Header>Just one second</Message.Header>\n                                    We are fetching that content for you.\n                                </Message.Content>\n                                </Message>\n                            )}\n                        </div>\n                    </form>\n\n                </CardBody>\n            </Card>                                 \n        </>\n    );\n};\n\nexport default PatientLineList","/Users/basil/Desktop/Palladium_Pro/lamis_app/Report-Module/src/main/webapp/jsx/components/Reports/Appointment.js",["133","134","135","136"],"import React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Card} from \"@material-ui/core\";\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\n// import {TiArrowBack} from 'react-icons/ti'\nimport {token, url as baseUrl } from \"../../../api\";\nimport 'react-phone-input-2/lib/style.css'\nimport { Button} from 'semantic-ui-react'\nimport MaterialTable from 'material-table';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport 'react-toastify/dist/ReactToastify.css';\nimport 'react-widgets/dist/css/react-widgets.css';\nimport { forwardRef } from 'react';\nimport { toast} from \"react-toastify\";\nimport { Message, Icon } from 'semantic-ui-react'\n\nconst tableIcons = {\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n    };\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        margin: theme.spacing(20),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    cardBottom: {\n        marginBottom: 20,\n    },\n    Select: {\n        height: 45,\n        width: 300,\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n    root: {\n        flexGrow: 1,\n        maxWidth: 752,\n    },\n    demo: {\n        backgroundColor: theme.palette.background.default,\n    },\n    inline: {\n        display: \"inline\",\n    },\n    error:{\n        color: '#f85032',\n        fontSize: '12.8px'\n    }\n}));\n\n\nconst Appointment = (props) => {\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false)\n    const [showContent, setShowContent] = useState(false)\n    const [appointmentReport, setAppointmentReport]= useState([])\n    const [facilities, setFacilities] = useState([]);\n    const [tableTitle, setTableTitle]= useState(\"\");\n    const [showNoRecord, setShowNoRecord]= useState(false)\n    const [objValues, setObjValues]=useState({       \n        facilityId:\"\", startDate:\"\", endDate:\"\", type:\"\"\n    })\n    const handleSubmit = (e) => {        \n        e.preventDefault();\n        setLoading(true)\n        axios.get(`${baseUrl}reporting/${objValues.type}?facilityId=${objValues.facilityId}&startDate=${objValues.startDate}&endDate=${objValues.endDate} `,\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\n          \n          )\n              .then(response => {                \n                setLoading(false)\n                setShowContent(true)\n                if(objValues.type==='miss-refill'){\n                    setTableTitle(`Missed Refill Appointment  -  From :${objValues.startDate}  - To: ${objValues.endDate}`)\n                }else if(objValues.type==='miss-clinic'){\n                    setTableTitle(`Missed Clinic Appointment   -  From :${objValues.startDate}  - To: ${objValues.endDate}`)\n                }else if(objValues.type==='clinic-appointment'){\n                    setTableTitle(`Clinic Appointment   -  From :${objValues.startDate}  - To: ${objValues.endDate}`)\n                }else if(objValues.type==='refill-appointment'){\n                    setTableTitle(`Refill Appointment   -  From :${objValues.startDate}  - To: ${objValues.endDate}`)\n                }else{\n                    setTableTitle('')\n                }\n                setAppointmentReport(response.data)\n                if(response.data.length <=0){\n                    setShowNoRecord(true)\n                }else{\n                    setShowNoRecord(false)\n                }\n              })\n              .catch(error => {\n                setLoading(false)\n                setShowContent(false)\n                if(error.response && error.response.data){\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\n                    toast.error(errorMessage);\n                  }\n                  else{\n                    toast.error(\"Something went wrong. Please try again...\");\n                  }\n              });\n            \n\n    }\n    const handleInputChange = e => {\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\n    }\n    useEffect(() => {\n        Facilities()\n      }, []);\n    //Get list of WhoStaging\n    const Facilities =()=>{\n    axios\n        .get(`${baseUrl}account`,\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\n        )\n        .then((response) => {\n            setFacilities(response.data.applicationUserOrganisationUnits);\n        })\n        .catch((error) => {\n        //console.log(error);\n        });\n    \n    }\n\n    return (\n        <>\n            \n            <Card >\n                <CardBody>\n    \n                <h2 style={{color:'#000'}}>APPOINTMENT REPORT</h2>\n                <br/>\n                    <form >\n                        <div className=\"row\">\n\n                            <div className=\"form-group  col-md-6\">\n                                <FormGroup>\n                                    <Label>Start Date*</Label>\n                                    <input\n                                        type=\"date\"\n                                        className=\"form-control\"\n                                        name=\"startDate\"\n                                        id=\"startDate\"\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    />\n                                    \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-6\">\n                                <FormGroup>\n                                    <Label>End Date*</Label>\n                                    <input\n                                        type=\"date\"\n                                        className=\"form-control\"\n                                        name=\"endDate\"\n                                        id=\"endDate\"\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    />\n                                     \n                                    \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-6\">\n                                <FormGroup>\n                                    <Label>Facility*</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"facilityId\"\n                                        id=\"facilityId\"\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        {facilities.map((value) => (\n                                            <option key={value.id} value={value.organisationUnitId}>\n                                                {value.organisationUnitName}\n                                            </option>\n                                        ))}\n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-6\">\n                                <FormGroup>\n                                    <Label>Type*</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"type\"\n                                        id=\"type\"\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"miss-refill\">Missed Refill Appointment</option>\n                                        <option value=\"miss-clinic\">Missed Clinic Appointment </option>\n                                        <option value=\"clinic-appointment\">Scheduled Clinic Visit(Clinic Appointment)</option>\n                                        <option value=\"refill-appointment\">Scheduled Refill Visit(Refill Appointment)</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n                            <br />\n                            <div className=\"row\">\n                            <div className=\"form-group mb-3 col-md-6\">\n                            <Button type=\"submit\" content='Generate Report' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit}\n                                disabled={objValues.facilityId===\"\" || objValues.startDate===\"\" || objValues.endDate===\"\"  || objValues.type===\"\" ? true : false}\n                            />\n                            </div>\n                            </div>\n                        </div>\n                    </form>\n\n                    <br/>\n                    {loading && (\n                        <Message icon>\n                            <Icon name='circle notched' loading />\n                            <Message.Content>\n                            <Message.Header>Just one second</Message.Header>\n                            We are fetching that content for you.\n                            </Message.Content>\n                        </Message>\n                    )}\n                    {showNoRecord && (\n                        <Message info>\n                            <Message.Content>\n                            {/* <Message.Header>Just one second</Message.Header> */}\n                            <b>No Record Found</b>\n                            </Message.Content>\n                        </Message>\n                    )}\n                    {showContent &&(\n                        <MaterialTable\n                            icons={tableIcons}\n                            title= {tableTitle}\n                            columns={[\n                                { title: \"Name\", field: \"name\" },\n                                { title: \"Hospital Num\", field: \"hospitalNum\" },\n                                { title: \"Patient Id\", field: \"patientId\" },                                \n                                { title: \"DOB\", field: \"dateBirth\" },\n                                { title: \"Age\", field: \"age\" },\n                                { title: \"phone\", field: \"phone\" },\n                                { title: \"Art Start Date\", field: \"artStartDate\" },\n                                { title: \"Date Of LastVisit\", field: \"dateOfLastVisit\" },\n                                { title: \"Date Of NextVisit\", field: \"dateOfNextVisit\" },\n                                { title: \"Current Status\", field: \"currentStatus\" },\n                                { title: \"Case Manager\", field: \"caseManager\" },\n                                { title: \"Facility Name\", field: \"facilityName\" },\n                                { title: \"lga\", field: \"lga\" },\n                                { title: \"Lga Of Residence\", field: \"lgaOfResidence\" },\n                                { title: \"state\", field: \"state\" },\n                                { title: \"State Of Residence\", field: \"stateOfResidence\" },\n\n                            ]}\n                            isLoading={loading}\n                            data={appointmentReport.map((row) => ({\n                                name: row.name,\n                                hospitalNum: row.hospitalNum,\n                                patientId:row.patientId,\n                                dateBirth: row.dateBirth,\n                                age: row.age,\n                                phone: row.phone,\n                                artStartDate: row.artStartDate,\n                                dateOfLastVisit: row.dateOfLastVisit,\n                                dateOfNextVisit:row.dateOfNextVisit,\n                                currentStatus: row.currentStatus,\n                                caseManager: row.caseManager,\n                                facilityName: row.facilityName,\n                                lga:row.lga,\n                                lgaOfResidence: row.lgaOfResidence,\n                                state: row.state,\n                                stateOfResidence:row.stateOfResidence,\n                                \n                                }))}\n                            \n                                        options={{\n                                        headerStyle: {\n                                            backgroundColor: \"#014d88\",\n                                            color: \"#fff\",\n                                        },\n                                        searchFieldStyle: {\n                                            width : '100%',\n                                            margingLeft: '250px',\n                                        },\n                                        filtering: false,\n                                        exportButton: true,\n                                        searchFieldAlignment: 'left',\n                                        pageSizeOptions:[10,20,100, 500,1000,2000,3000],\n                                        pageSize:10,\n                                        debounceInterval: 400\n                            }}\n                        />\n                    )}\n                </CardBody>\n            </Card>                                 \n        </>\n    );\n};\n\nexport default Appointment","/Users/basil/Desktop/Palladium_Pro/lamis_app/Report-Module/src/main/webapp/jsx/components/Reports/Radet.js",["137","138","139"],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { FormGroup, Label, CardBody, Spinner, Input, Form } from \"reactstrap\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Card } from \"@material-ui/core\";\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\n// import {TiArrowBack} from 'react-icons/ti'\nimport { token, url as baseUrl } from \"../../../api\";\nimport \"react-phone-input-2/lib/style.css\";\nimport { Button } from \"semantic-ui-react\";\nimport { toast } from \"react-toastify\";\nimport FileSaver from \"file-saver\";\nimport { Message, Icon } from \"semantic-ui-react\";\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    margin: theme.spacing(20),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  cardBottom: {\n    marginBottom: 20,\n  },\n  Select: {\n    height: 45,\n    width: 300,\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n  root: {\n    flexGrow: 1,\n    maxWidth: 752,\n  },\n  demo: {\n    backgroundColor: theme.palette.background.default,\n  },\n  inline: {\n    display: \"inline\",\n  },\n  error: {\n    color: \"#f85032\",\n    fontSize: \"12.8px\",\n  },\n}));\n\nconst PatientLineList = (props) => {\n  let currentDate = new Date().toISOString().split(\"T\")[0];\n  const classes = useStyles();\n  const [loading, setLoading] = useState(false);\n  const [facilities, setFacilities] = useState([]);\n  const [status, setStatus] = useState(true);\n  const [objValues, setObjValues] = useState({\n    organisationUnitId: \"\",\n    organisationUnitName: \"\",\n    startDate: \"\",\n    endDate: \"\",\n  });\n  useEffect(() => {\n    Facilities();\n  }, []);\n  //Get list of WhoStaging\n  const Facilities = () => {\n    axios\n      .get(`${baseUrl}account`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        //console.log(response.data);\n        setFacilities(response.data.applicationUserOrganisationUnits);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n\n  const handleInputChange = (e) => {\n    //1980-01-01\n    console.log(e.target.innerText, e.target.name, e.target.name);\n    if (e.target.name === \"organisationUnitId\") {\n      localStorage.setItem(\"facility\", JSON.stringify(e.target.innerText));\n    } else {\n      setObjValues({\n        ...objValues,\n        [e.target.name]: e.target.value,\n        organisationUnitName: e.target.innerText,\n      });\n    }\n    setObjValues({\n      ...objValues,\n      [e.target.name]: e.target.value,\n      organisationUnitName: e.target.innerText,\n    });\n  };\n\n  const handleValueChange = () => {\n    setStatus(!status);\n\n    if (status === true) {\n      setObjValues({\n        ...objValues,\n        startDate: \"1980-01-01\",\n        endDate: currentDate,\n      });\n    } else {\n      setObjValues({ ...objValues, startDate: \"\", endDate: currentDate });\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setLoading(true);\n\n    console.log(objValues);\n\n    axios\n      .get(\n        `${baseUrl}reporting/radet?facilityId=${objValues.organisationUnitId}&startDate=${objValues.startDate}&endDate=${objValues.endDate}`,\n        { headers: { Authorization: `Bearer ${token}` }, responseType: \"blob\" }\n      )\n      .then((response) => {\n        setLoading(false);\n        const facilityName = JSON.parse(localStorage.getItem(\"facility\"));\n        // console.log(facilityName);\n        const fileName = `${facilityName} Radet ${currentDate}`;\n        const responseData = response.data;\n        let blob = new Blob([responseData], {\n          type: \"application/octet-stream\",\n        });\n\n        FileSaver.saveAs(blob, `${fileName}.xlsx`);\n        toast.success(\"Radet Report generated successful\");\n        //props.setActiveContent('recent-history')\n      })\n      .catch((error) => {\n        setLoading(false);\n        if (error.response && error.response.data) {\n          let errorMessage =\n            error.response.data.apierror &&\n            error.response.data.apierror.message !== \"\"\n              ? error.response.data.apierror.message\n              : \"Something went wrong, please try again\";\n          toast.error(errorMessage);\n        } else {\n          toast.error(\"Something went wrong. Please try again...\");\n        }\n      });\n  };\n\n  return (\n    <>\n      <Card>\n        <CardBody>\n          <h2 style={{ color: \"#000\" }}>RADET REPORT</h2>\n          <br />\n          <form>\n            <div className=\"row\">\n              <div className=\"form-group  col-md-6\">\n                <FormGroup>\n                  <Label>From *</Label>\n                  <input\n                    type=\"date\"\n                    className=\"form-control\"\n                    name=\"startDate\"\n                    id=\"startDate\"\n                    min={\"1980-01-01\"}\n                    max={currentDate}\n                    value={objValues.startDate}\n                    onChange={handleInputChange}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  />\n                </FormGroup>\n              </div>\n              <div className=\"form-group  col-md-6\">\n                <FormGroup>\n                  <Label>To *</Label>\n                  <input\n                    type=\"date\"\n                    className=\"form-control\"\n                    name=\"endDate\"\n                    id=\"endDate\"\n                    min={\"1980-01-01\"}\n                    max={currentDate}\n                    //min={objValues.startDate}\n                    value={objValues.endDate}\n                    onChange={handleInputChange}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  />\n                </FormGroup>\n              </div>\n              <div className=\"form-group  col-md-6\">\n                <FormGroup check>\n                  <Label check>\n                    <Input type=\"checkbox\" onChange={handleValueChange} />{\" \"}\n                    &nbsp;&nbsp;<span> As at Today.</span>\n                  </Label>\n                </FormGroup>\n              </div>\n              <div className=\"form-group  col-md-6\">\n                <FormGroup>\n                  <Label>Facility*</Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"organisationUnitId\"\n                    id=\"organisationUnitId\"\n                    value={objValues.organisationUnitId}\n                    onChange={handleInputChange}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    {facilities.map((value) => (\n                      <option key={value.id} value={value.organisationUnitId}>\n                        {value.organisationUnitName}\n                      </option>\n                    ))}\n                  </select>\n                </FormGroup>\n              </div>\n\n              <br />\n              <div className=\"row\">\n                <div className=\"form-group mb-3 col-md-6\">\n                  <Button\n                    type=\"submit\"\n                    content=\"Generate Report\"\n                    icon=\"right arrow\"\n                    labelPosition=\"right\"\n                    style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\n                    onClick={handleSubmit}\n                    disabled={\n                      objValues.organisationUnitId === \"\" ? true : false\n                    }\n                  />\n                </div>\n              </div>\n\n              {loading && (\n                <Message icon>\n                  <Icon name=\"circle notched\" loading />\n                  <Message.Content>\n                    <Message.Header>Just one second</Message.Header>\n                    We are fetching that content for you.\n                  </Message.Content>\n                </Message>\n              )}\n            </div>\n          </form>\n        </CardBody>\n      </Card>\n    </>\n  );\n};\n\nexport default PatientLineList;\n","/Users/basil/Desktop/Palladium_Pro/lamis_app/Report-Module/src/main/webapp/jsx/components/Reports/PharmacyReport.js",["140","141","142","143"],"import React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Card} from \"@material-ui/core\";\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\n// import {TiArrowBack} from 'react-icons/ti'\nimport {token, url as baseUrl } from \"../../../api\";\nimport 'react-phone-input-2/lib/style.css'\nimport { Button} from 'semantic-ui-react'\nimport { toast} from \"react-toastify\";\nimport FileSaver from \"file-saver\";\nimport { Message, Icon } from 'semantic-ui-react'\n\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        margin: theme.spacing(20),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    cardBottom: {\n        marginBottom: 20,\n    },\n    Select: {\n        height: 45,\n        width: 300,\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n    root: {\n        flexGrow: 1,\n        maxWidth: 752,\n    },\n    demo: {\n        backgroundColor: theme.palette.background.default,\n    },\n    inline: {\n        display: \"inline\",\n    },\n    error:{\n        color: '#f85032',\n        fontSize: '12.8px'\n    }\n}));\n\n\nconst PharmacyReport = (props) => {\n    let currentDate = new Date().toISOString().split('T')[0]\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false)\n    const [facilities, setFacilities] = useState([]);\n    const [objValues, setObjValues]=useState({       \n        organisationUnitId:\"\",\n        organisationUnitName:\"\"\n    })\n    useEffect(() => {\n        Facilities()\n      }, []);\n    //Get list of WhoStaging\n    const Facilities =()=>{\n    axios\n        .get(`${baseUrl}account`,\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\n        )\n        .then((response) => {\n            //console.log(response.data);\n            setFacilities(response.data.applicationUserOrganisationUnits);\n        })\n        .catch((error) => {\n        //console.log(error);\n        });\n    \n    }\n    const handleInputChange = e => {\n        setObjValues ({...objValues,  [e.target.name]: e.target.value, organisationUnitName: e.target.innerText});\n    }\n    const handleSubmit = (e) => {        \n        e.preventDefault();\n        setLoading(true)\n        axios.get(`${baseUrl}reporting/pharmacy/${objValues.organisationUnitId}`,\n           { headers: {\"Authorization\" : `Bearer ${token}`}, responseType: 'blob'},\n          \n          )\n              .then(response => {\n                setLoading(false)\n                const fileName = `${objValues.organisationUnitName} Pharmacy ${currentDate}`\n                const responseData = response.data\n                let blob = new Blob([responseData], {type: \"application/octet-stream\"});\n                FileSaver.saveAs(blob, `${fileName}.xlsx`);\n                  //toast.success(\" Save successful\");\n                  //props.setActiveContent('recent-history')\n\n              })\n              .catch(error => {\n                setLoading(false)\n                if(error.response && error.response.data){\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\n                    toast.error(errorMessage);\n                  }\n                  else{\n                    toast.error(\"Something went wrong. Please try again...\");\n                  }\n              });\n            \n\n    }\n    \n    \n\n    return (\n        <>\n            \n            <Card >\n                <CardBody>\n    \n                <h2 style={{color:'#000'}}>PHARMACY REPORT</h2>\n                <br/>\n                    <form >\n                        <div className=\"row\">\n                        \n                            <div className=\"form-group  col-md-6\">\n                                <FormGroup>\n                                    <Label>Facility*</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"organisationUnitId\"\n                                        id=\"organisationUnitId\"\n                                        value={objValues.organisationUnitId}\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        {facilities.map((value) => (\n                                            <option key={value.id} value={value.organisationUnitId}>\n                                                {value.organisationUnitName}\n                                            </option>\n                                        ))}\n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n\n                            <br />\n                            <div className=\"row\">\n                            <div className=\"form-group mb-3 col-md-6\">\n                            <Button type=\"submit\" content='Generate Report' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit} disabled={objValues.organisationUnitId===\"\" ? true : false}/>\n                            </div>\n                            </div>\n\n                            {loading && (\n                                <Message icon>\n                                    <Icon name='circle notched' loading />\n                                <Message.Content>\n                                <Message.Header>Just one second</Message.Header>\n                                    We are fetching that content for you.\n                                </Message.Content>\n                                </Message>\n                            )}\n                        </div>\n                    </form>\n\n                </CardBody>\n            </Card>                                 \n        </>\n    );\n};\n\nexport default PharmacyReport","/Users/basil/Desktop/Palladium_Pro/lamis_app/Report-Module/src/main/webapp/jsx/components/Reports/BiometricReport.js",["144","145","146","147"],"/Users/basil/Desktop/Palladium_Pro/lamis_app/Report-Module/src/main/webapp/jsx/components/Reports/ClientVerification.js",["148","149","150","151"],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { FormGroup, Label, CardBody, Spinner, Input, Form } from \"reactstrap\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Card } from \"@material-ui/core\";\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\n// import {TiArrowBack} from 'react-icons/ti'\nimport { token, url as baseUrl } from \"../../../api\";\nimport \"react-phone-input-2/lib/style.css\";\nimport { Button } from \"semantic-ui-react\";\nimport { toast } from \"react-toastify\";\nimport FileSaver from \"file-saver\";\nimport { Message, Icon } from \"semantic-ui-react\";\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    margin: theme.spacing(20),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  cardBottom: {\n    marginBottom: 20,\n  },\n  Select: {\n    height: 45,\n    width: 300,\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n  root: {\n    flexGrow: 1,\n    maxWidth: 752,\n  },\n  demo: {\n    backgroundColor: theme.palette.background.default,\n  },\n  inline: {\n    display: \"inline\",\n  },\n  error: {\n    color: \"#f85032\",\n    fontSize: \"12.8px\",\n  },\n}));\n\nconst ClientVerification = (props) => {\n  let currentDate = new Date().toISOString().split(\"T\")[0];\n  const classes = useStyles();\n  const [loading, setLoading] = useState(false);\n  const [facilities, setFacilities] = useState([]);\n  const [objValues, setObjValues] = useState({\n    organisationUnitId: \"\",\n    organisationUnitName: \"\",\n  });\n  useEffect(() => {\n    Facilities();\n  }, []);\n  //Get list of WhoStaging\n  const Facilities = () => {\n    axios\n      .get(`${baseUrl}account`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        console.log(response.data);\n        setFacilities(response.data.applicationUserOrganisationUnits);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n  const handleInputChange = (e) => {\n    setObjValues({\n      ...objValues,\n      [e.target.name]: e.target.value,\n        organisationUnitName: e.target.innerText,\n    \n    });\n      \n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n      setLoading(true);\n      \n    axios\n      .get(`${baseUrl}reporting/client-service-list/${objValues.organisationUnitId}`, {\n        headers: { Authorization: `Bearer ${token}` },\n        responseType: \"blob\",\n      })\n      .then((response) => {\n        setLoading(false);\n        const fileName = `${objValues.organisationUnitName}Client Verification${currentDate}`;\n        const responseData = response.data;\n        let blob = new Blob([responseData], {\n          type: \"application/octet-stream\",\n        });\n        FileSaver.saveAs(blob, `${fileName}.xlsx`);\n        //toast.success(\" Save successful\");\n        //props.setActiveContent('recent-history')\n      })\n      .catch((error) => {\n        setLoading(false);\n        if (error.response && error.response.data) {\n          let errorMessage =\n            error.response.data.apierror &&\n            error.response.data.apierror.message !== \"\"\n              ? error.response.data.apierror.message\n              : \"Something went wrong, please try again\";\n          toast.error(errorMessage);\n        } else {\n          toast.error(\"Something went wrong. Please try again...\");\n        }\n      });\n  };\n\n  return (\n    <>\n      <Card>\n        <CardBody>\n          <h2 style={{ color: \"#000\" }}>CLIENT VERIFICATION REPORT</h2>\n          <br />\n          <form>\n            <div className=\"row\">\n              <div className=\"form-group  col-md-6\">\n                <FormGroup>\n                  <Label>Facility*</Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"organisationUnitId\"\n                    id=\"organisationUnitId\"\n                    value={objValues.organisationUnitId}\n                    onChange={handleInputChange}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    {facilities.map((value) => (\n                      <option key={value.id} value={value.organisationUnitId}>\n                        {value.organisationUnitName}\n                      </option>\n                    ))}\n                  </select>\n                </FormGroup>\n              </div>\n\n              <br />\n              <div className=\"row\">\n                <div className=\"form-group mb-3 col-md-6\">\n                  <Button\n                    type=\"submit\"\n                    content=\"Generate Report\"\n                    icon=\"right arrow\"\n                    labelPosition=\"right\"\n                    style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\n                    onClick={handleSubmit}\n                    disabled={\n                      objValues.organisationUnitId === \"\" ? true : false\n                    }\n                  />\n                </div>\n              </div>\n\n              {loading && (\n                <Message icon>\n                  <Icon name=\"circle notched\" loading />\n                  <Message.Content>\n                    <Message.Header>Just one second</Message.Header>\n                    We are fetching that content for you.\n                  </Message.Content>\n                </Message>\n              )}\n            </div>\n          </form>\n        </CardBody>\n      </Card>\n    </>\n  );\n};\n\nexport default ClientVerification;\n","/Users/basil/Desktop/Palladium_Pro/lamis_app/Report-Module/src/main/webapp/jsx/components/Reports/TbReport.js",["152","153","154","155"],"/Users/basil/Desktop/Palladium_Pro/lamis_app/Report-Module/src/main/webapp/jsx/components/Reports/PrepReport.js",["156","157","158"],"import React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Card} from \"@material-ui/core\";\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\n// import {TiArrowBack} from 'react-icons/ti'\nimport {token, url as baseUrl } from \"../../../api\";\nimport 'react-phone-input-2/lib/style.css'\nimport { Button} from 'semantic-ui-react'\nimport { toast} from \"react-toastify\";\nimport FileSaver from \"file-saver\";\nimport { Message, Icon } from 'semantic-ui-react'\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        margin: theme.spacing(20),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    cardBottom: {\n        marginBottom: 20,\n    },\n    Select: {\n        height: 45,\n        width: 300,\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n    root: {\n        flexGrow: 1,\n        maxWidth: 752,\n    },\n    demo: {\n        backgroundColor: theme.palette.background.default,\n    },\n    inline: {\n        display: \"inline\",\n    },\n    error:{\n        color: '#f85032',\n        fontSize: '12.8px'\n    }\n}));\n\nconst PrepReport = (props) => {\n    let currentDate = new Date().toISOString().split('T')[0]\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false)\n    const [facilities, setFacilities] = useState([]);\n    const [status, setStatus] = useState(true);\n    const [objValues, setObjValues]=useState({\n        organisationUnitId:\"\",\n        organisationUnitName:\"\",\n        startDate:\"\",\n        endDate: \"\"\n    })\n    useEffect(() => {\n        Facilities()\n      }, []);\n    //Get list of WhoStaging\n    const Facilities =()=>{\n    axios\n        .get(`${baseUrl}account`,\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\n        )\n        .then((response) => {\n            console.log(response.data);\n            setFacilities(response.data.applicationUserOrganisationUnits);\n        })\n        .catch((error) => {\n        //console.log(error);\n        });\n    }\n\n    const handleInputChange = e => {\n        //1980-01-01\n        setObjValues ({...objValues,  [e.target.name]: e.target.value, organisationUnitName: e.target.innerText});\n    }\n\n    const handleValueChange = () => {\n        setStatus(!status)\n\n        if (status === true) {\n          setObjValues ({...objValues,  startDate: \"1980-01-01\", endDate: currentDate});\n        } else {\n          setObjValues ({...objValues,  startDate: \"\", endDate: currentDate});\n        }\n\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        setLoading(true)\n        //console.log(token);\n\n        axios.post(`${baseUrl}prep-reporting?facilityId=${objValues.organisationUnitId}&startDate=${objValues.startDate}&endDate=${objValues.endDate}`,objValues.organisationUnitId,\n            { headers: {\"Authorization\" : `Bearer ${token}`}, responseType: 'blob'},\n        )\n          .then(response => {\n            setLoading(false)\n            const fileName =`${objValues.organisationUnitName} Prep ${currentDate}`\n            const responseData = response.data\n            let blob = new Blob([responseData], {type: \"application/octet-stream\"});\n\n            FileSaver.saveAs(blob, `${fileName}.xlsx`);\n            toast.success(\"Prep Report generated successfully\");\n          })\n          .catch(error => {\n            setLoading(false)\n            if(error.response && error.response.data){\n                let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\n                toast.error(errorMessage);\n              }\n              else{\n                toast.error(\"Something went wrong. Please try again...\");\n              }\n          });\n    }\n\n    return (\n        <>\n\n            <Card >\n                <CardBody>\n\n                <h2 style={{color:'#000'}}>Prep REPORT</h2>\n                <br/>\n                    <form >\n                        <div className=\"row\">\n                        <div className=\"form-group  col-md-6\">\n                                <FormGroup>\n                                    <Label>From *</Label>\n                                    <input\n                                        type=\"date\"\n                                        className=\"form-control\"\n                                        name=\"startDate\"\n                                        id=\"startDate\"\n                                        min={\"1980-01-01\"}\n                                        max={currentDate}\n                                        value={objValues.startDate}\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    />\n\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-6\">\n                                <FormGroup>\n                                    <Label>To *</Label>\n                                    <input\n                                        type=\"date\"\n                                        className=\"form-control\"\n                                        name=\"endDate\"\n                                        id=\"endDate\"\n                                        min={\"1980-01-01\"}\n                                        max={currentDate}\n                                        //min={objValues.startDate}\n                                        value={objValues.endDate}\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    />\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-6\">\n                                 <FormGroup check>\n                                  <Label check>\n                                    <Input type=\"checkbox\" onChange={handleValueChange}/>\n                                     {' '} &nbsp;&nbsp;<span> As at Today.</span>\n                                  </Label>\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-6\">\n                                <FormGroup>\n                                    <Label>Facility*</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"organisationUnitId\"\n                                        id=\"organisationUnitId\"\n                                        value={objValues.organisationUnitId}\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        {facilities.map((value) => (\n                                            <option key={value.id} value={value.organisationUnitId}>\n                                                {value.organisationUnitName}\n                                            </option>\n                                        ))}\n                                    </select>\n\n                                </FormGroup>\n                            </div>\n\n                            <br />\n                            <div className=\"row\">\n                            <div className=\"form-group mb-3 col-md-6\">\n                            <Button type=\"submit\" content='Generate Report' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit} disabled={objValues.organisationUnitId===\"\" ? true : false}/>\n                            </div>\n                            </div>\n\n                            {loading && (\n                                <Message icon>\n                                    <Icon name='circle notched' loading />\n                                <Message.Content>\n                                <Message.Header>Just one second</Message.Header>\n                                    We are fetching that content for you.\n                                </Message.Content>\n                                </Message>\n                            )}\n                        </div>\n                    </form>\n\n                </CardBody>\n            </Card>\n        </>\n    );\n};\n\nexport default PrepReport","/Users/basil/Desktop/Palladium_Pro/lamis_app/Report-Module/src/main/webapp/jsx/components/Reports/HTSReport.js",["159","160","161"],"import React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Card} from \"@material-ui/core\";\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\n// import {TiArrowBack} from 'react-icons/ti'\nimport {token, url as baseUrl } from \"../../../api\";\nimport 'react-phone-input-2/lib/style.css'\nimport { Button} from 'semantic-ui-react'\nimport { toast} from \"react-toastify\";\nimport FileSaver from \"file-saver\";\nimport { Message, Icon } from 'semantic-ui-react'\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        margin: theme.spacing(20),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    cardBottom: {\n        marginBottom: 20,\n    },\n    Select: {\n        height: 45,\n        width: 300,\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n    root: {\n        flexGrow: 1,\n        maxWidth: 752,\n    },\n    demo: {\n        backgroundColor: theme.palette.background.default,\n    },\n    inline: {\n        display: \"inline\",\n    },\n    error:{\n        color: '#f85032',\n        fontSize: '12.8px'\n    }\n}));\n\nconst HTSReport = (props) => {\n    let currentDate = new Date().toISOString().split('T')[0]\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false)\n    const [facilities, setFacilities] = useState([]);\n    const [status, setStatus] = useState(true);\n    const [objValues, setObjValues]=useState({\n        organisationUnitId:\"\",\n        organisationUnitName:\"\",\n        startDate:\"\",\n        endDate: \"\"\n    })\n    useEffect(() => {\n        Facilities()\n      }, []);\n    //Get list of WhoStaging\n    const Facilities =()=>{\n    axios\n        .get(`${baseUrl}account`,\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\n        )\n        .then((response) => {\n        console.log(response.data);\n            setFacilities(response.data.applicationUserOrganisationUnits);\n        })\n        .catch((error) => {\n        //console.log(error);\n        });\n\n    }\n\n    const handleInputChange = e => {\n        setObjValues ({...objValues,  [e.target.name]: e.target.value, organisationUnitName: e.target.innerText});\n    }\n\n    const handleValueChange = () => {\n        setStatus(!status)\n\n        if (status === true) {\n          setObjValues ({...objValues,  startDate: \"1980-01-01\", endDate: currentDate});\n        } else {\n          setObjValues ({...objValues,  startDate: \"\", endDate: currentDate});\n        }\n\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        setLoading(true)\n        console.log(token);\n\n        axios.post(`${baseUrl}hts-reporting?facilityId=${objValues.organisationUnitId}&startDate=${objValues.startDate}&endDate=${objValues.endDate}`,objValues.organisationUnitId,\n            { headers: {\"Authorization\" : `Bearer ${token}`}, responseType: 'blob'},\n        )\n          .then(response => {\n            setLoading(false)\n            const fileName = `${objValues.organisationUnitName} HTS ${currentDate}`\n            const responseData = response.data\n            let blob = new Blob([responseData], {type: \"application/octet-stream\"});\n\n            FileSaver.saveAs(blob, `${fileName}.xlsx`);\n            toast.success(\"HTS Report generated successfully\");\n          })\n          .catch(error => {\n            setLoading(false)\n            if(error.response && error.response.data){\n                let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\n                toast.error(errorMessage);\n              }\n              else{\n                toast.error(\"Something went wrong. Please try again...\");\n              }\n          });\n    }\n\n    return (\n        <>\n\n            <Card >\n                <CardBody>\n\n                <h2 style={{color:'#000'}}>HTS REPORT</h2>\n                <br/>\n                    <form >\n                        <div className=\"row\">\n                        <div className=\"form-group  col-md-6\">\n                                <FormGroup>\n                                    <Label>From *</Label>\n                                    <input\n                                        type=\"date\"\n                                        className=\"form-control\"\n                                        name=\"startDate\"\n                                        id=\"startDate\"\n                                        min={\"1980-01-01\"}\n                                        max={currentDate}\n                                        value={objValues.startDate}\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    />\n\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-6\">\n                                <FormGroup>\n                                    <Label>To *</Label>\n                                    <input\n                                        type=\"date\"\n                                        className=\"form-control\"\n                                        name=\"endDate\"\n                                        id=\"endDate\"\n                                        min={\"1980-01-01\"}\n                                        max={currentDate}\n                                        //min={objValues.startDate}\n                                        value={objValues.endDate}\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    />\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-6\">\n                                 <FormGroup check>\n                                  <Label check>\n                                    <Input type=\"checkbox\" onChange={handleValueChange}/>\n                                     {' '} &nbsp;&nbsp;<span> As at Today.</span>\n                                  </Label>\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-6\">\n                                <FormGroup>\n                                    <Label>Facility*</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"organisationUnitId\"\n                                        id=\"organisationUnitId\"\n                                        value={objValues.organisationUnitId}\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        {facilities.map((value) => (\n                                            <option key={value.id} value={value.organisationUnitId}>\n                                                {value.organisationUnitName}\n                                            </option>\n                                        ))}\n                                    </select>\n\n                                </FormGroup>\n                            </div>\n\n                            <br />\n                            <div className=\"row\">\n                            <div className=\"form-group mb-3 col-md-6\">\n                            <Button type=\"submit\" content='Generate Report' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit} disabled={objValues.organisationUnitId===\"\" ? true : false}/>\n                            </div>\n                            </div>\n\n                            {loading && (\n                                <Message icon>\n                                    <Icon name='circle notched' loading />\n                                <Message.Content>\n                                <Message.Header>Just one second</Message.Header>\n                                    We are fetching that content for you.\n                                </Message.Content>\n                                </Message>\n                            )}\n                        </div>\n                    </form>\n\n                </CardBody>\n            </Card>\n        </>\n    );\n};\n\nexport default HTSReport","/Users/basil/Desktop/Palladium_Pro/lamis_app/Report-Module/src/main/webapp/jsx/components/Reports/PmtctHtsReport.js",["162","163","164"],"import React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Card} from \"@material-ui/core\";\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\n// import {TiArrowBack} from 'react-icons/ti'\nimport {token, url as baseUrl } from \"../../../api\";\nimport 'react-phone-input-2/lib/style.css'\nimport { Button} from 'semantic-ui-react'\nimport { toast} from \"react-toastify\";\nimport FileSaver from \"file-saver\";\nimport { Message, Icon } from 'semantic-ui-react'\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        margin: theme.spacing(20),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    cardBottom: {\n        marginBottom: 20,\n    },\n    Select: {\n        height: 45,\n        width: 300,\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n    root: {\n        flexGrow: 1,\n        maxWidth: 752,\n    },\n    demo: {\n        backgroundColor: theme.palette.background.default,\n    },\n    inline: {\n        display: \"inline\",\n    },\n    error:{\n        color: '#f85032',\n        fontSize: '12.8px'\n    }\n}));\n\nconst PmtctHtsReport = (props) => {\n    let currentDate = new Date().toISOString().split('T')[0]\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false)\n    const [facilities, setFacilities] = useState([]);\n    const [status, setStatus] = useState(true);\n    const [objValues, setObjValues]=useState({\n        organisationUnitId:\"\",\n        organisationUnitName:\"\",\n        startDate:\"\",\n        endDate: \"\"\n    })\n    useEffect(() => {\n        Facilities()\n      }, []);\n    //Get list of WhoStaging\n    const Facilities =()=>{\n    axios\n        .get(`${baseUrl}account`,\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\n        )\n        .then((response) => {\n        console.log(response.data);\n            setFacilities(response.data.applicationUserOrganisationUnits);\n        })\n        .catch((error) => {\n        //console.log(error);\n        });\n\n    }\n\n    const handleInputChange = e => {\n        setObjValues ({...objValues,  [e.target.name]: e.target.value, organisationUnitName: e.target.innerText});\n    }\n\n    const handleValueChange = () => {\n        setStatus(!status)\n\n        if (status === true) {\n          setObjValues ({...objValues,  startDate: \"1980-01-01\", endDate: currentDate});\n        } else {\n          setObjValues ({...objValues,  startDate: \"\", endDate: currentDate});\n        }\n\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        setLoading(true)\n        console.log(token);\n\n        axios.post(`${baseUrl}reporting?reportId=82d80564-6d3e-433e-8441-25db7fe1f2af&facilityId=${objValues.organisationUnitId}&startDate=${objValues.startDate}&endDate=${objValues.endDate}`,objValues.organisationUnitId,\n            { headers: {\"Authorization\" : `Bearer ${token}`}, responseType: 'blob'},\n        )\n          .then(response => {\n            setLoading(false)\n            const fileName = `${objValues.organisationUnitName} PMTCT HTS ${currentDate}`\n            const responseData = response.data\n            let blob = new Blob([responseData], {type: \"application/octet-stream\"});\n\n            FileSaver.saveAs(blob, `${fileName}.xlsx`);\n            toast.success(\"PMTCT Report generated successfully\");\n          })\n          .catch(error => {\n            setLoading(false)\n            if(error.response && error.response.data){\n                let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\n                toast.error(errorMessage);\n              }\n              else{\n                toast.error(\"Something went wrong. Please try again...\");\n              }\n          });\n    }\n\n    return (\n        <>\n\n            <Card >\n                <CardBody>\n\n                <h2 style={{color:'#000'}}>PMTCT - HTS REPORT</h2>\n                <br/>\n                    <form >\n                        <div className=\"row\">\n                        <div className=\"form-group  col-md-6\">\n                                <FormGroup>\n                                    <Label>From *</Label>\n                                    <input\n                                        type=\"date\"\n                                        className=\"form-control\"\n                                        name=\"startDate\"\n                                        id=\"startDate\"\n                                        min={\"1980-01-01\"}\n                                        max={currentDate}\n                                        value={objValues.startDate}\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    />\n\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-6\">\n                                <FormGroup>\n                                    <Label>To *</Label>\n                                    <input\n                                        type=\"date\"\n                                        className=\"form-control\"\n                                        name=\"endDate\"\n                                        id=\"endDate\"\n                                        min={\"1980-01-01\"}\n                                        max={currentDate}\n                                        //min={objValues.startDate}\n                                        value={objValues.endDate}\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    />\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-6\">\n                                 <FormGroup check>\n                                  <Label check>\n                                    <Input type=\"checkbox\" onChange={handleValueChange}/>\n                                     {' '} &nbsp;&nbsp;<span> As at Today.</span>\n                                  </Label>\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-6\">\n                                <FormGroup>\n                                    <Label>Facility*</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"organisationUnitId\"\n                                        id=\"organisationUnitId\"\n                                        value={objValues.organisationUnitId}\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        {facilities.map((value) => (\n                                            <option key={value.id} value={value.organisationUnitId}>\n                                                {value.organisationUnitName}\n                                            </option>\n                                        ))}\n                                    </select>\n\n                                </FormGroup>\n                            </div>\n\n                            <br />\n                            <div className=\"row\">\n                            <div className=\"form-group mb-3 col-md-6\">\n                            <Button type=\"submit\" content='Generate Report' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit} disabled={objValues.organisationUnitId===\"\" ? true : false}/>\n                            </div>\n                            </div>\n\n                            {loading && (\n                                <Message icon>\n                                    <Icon name='circle notched' loading />\n                                <Message.Content>\n                                <Message.Header>Just one second</Message.Header>\n                                    We are fetching that content for you.\n                                </Message.Content>\n                                </Message>\n                            )}\n                        </div>\n                    </form>\n\n                </CardBody>\n            </Card>\n        </>\n    );\n};\n\nexport default PmtctHtsReport","/Users/basil/Desktop/Palladium_Pro/lamis_app/Report-Module/src/main/webapp/jsx/components/Reports/PmtctMaternalCohortReport.js",["165","166","167"],"import React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Card} from \"@material-ui/core\";\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\n// import {TiArrowBack} from 'react-icons/ti'\nimport {token, url as baseUrl } from \"../../../api\";\nimport 'react-phone-input-2/lib/style.css'\nimport { Button} from 'semantic-ui-react'\nimport { toast} from \"react-toastify\";\nimport FileSaver from \"file-saver\";\nimport { Message, Icon } from 'semantic-ui-react'\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        margin: theme.spacing(20),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    cardBottom: {\n        marginBottom: 20,\n    },\n    Select: {\n        height: 45,\n        width: 300,\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n    root: {\n        flexGrow: 1,\n        maxWidth: 752,\n    },\n    demo: {\n        backgroundColor: theme.palette.background.default,\n    },\n    inline: {\n        display: \"inline\",\n    },\n    error:{\n        color: '#f85032',\n        fontSize: '12.8px'\n    }\n}));\n\nconst PmtctMaternalCohortReport = (props) => {\n    let currentDate = new Date().toISOString().split('T')[0]\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false)\n    const [facilities, setFacilities] = useState([]);\n    const [status, setStatus] = useState(true);\n    const [objValues, setObjValues]=useState({\n        organisationUnitId:\"\",\n        organisationUnitName:\"\",\n        startDate:\"\",\n        endDate: \"\"\n    })\n    useEffect(() => {\n        Facilities()\n      }, []);\n    //Get list of WhoStaging\n    const Facilities =()=>{\n    axios\n        .get(`${baseUrl}account`,\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\n        )\n        .then((response) => {\n        console.log(response.data);\n            setFacilities(response.data.applicationUserOrganisationUnits);\n        })\n        .catch((error) => {\n        //console.log(error);\n        });\n\n    }\n\n    const handleInputChange = e => {\n        setObjValues ({...objValues,  [e.target.name]: e.target.value, organisationUnitName: e.target.innerText});\n    }\n\n    const handleValueChange = () => {\n        setStatus(!status)\n\n        if (status === true) {\n          setObjValues ({...objValues,  startDate: \"1980-01-01\", endDate: currentDate});\n        } else {\n          setObjValues ({...objValues,  startDate: \"\", endDate: currentDate});\n        }\n\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        setLoading(true)\n        console.log(token);\n\n        axios.post(`${baseUrl}reporting?reportId=2b6fe1b9-9af0-4af7-9f59-b9cfcb906158&facilityId=${objValues.organisationUnitId}&startDate=${objValues.startDate}&endDate=${objValues.endDate}`,objValues.organisationUnitId,\n            { headers: {\"Authorization\" : `Bearer ${token}`}, responseType: 'blob'},\n        )\n          .then(response => {\n            setLoading(false)\n            const fileName = `${objValues.organisationUnitName} PMTCT Prematernal Cohort ${currentDate}`\n            const responseData = response.data\n            let blob = new Blob([responseData], {type: \"application/octet-stream\"});\n\n            FileSaver.saveAs(blob, `${fileName}.xlsx`);\n            toast.success(\"PMTCT Report generated successfully\");\n          })\n          .catch(error => {\n            setLoading(false)\n            if(error.response && error.response.data){\n                let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\n                toast.error(errorMessage);\n              }\n              else{\n                toast.error(\"Something went wrong. Please try again...\");\n              }\n          });\n    }\n\n    return (\n        <>\n\n            <Card >\n                <CardBody>\n\n                <h2 style={{color:'#000'}}>PMTCT - Maternal Cohort REPORT</h2>\n                <br/>\n                    <form >\n                        <div className=\"row\">\n                        <div className=\"form-group  col-md-6\">\n                                <FormGroup>\n                                    <Label>From *</Label>\n                                    <input\n                                        type=\"date\"\n                                        className=\"form-control\"\n                                        name=\"startDate\"\n                                        id=\"startDate\"\n                                        min={\"1980-01-01\"}\n                                        max={currentDate}\n                                        value={objValues.startDate}\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    />\n\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-6\">\n                                <FormGroup>\n                                    <Label>To *</Label>\n                                    <input\n                                        type=\"date\"\n                                        className=\"form-control\"\n                                        name=\"endDate\"\n                                        id=\"endDate\"\n                                        min={\"1980-01-01\"}\n                                        max={currentDate}\n                                        //min={objValues.startDate}\n                                        value={objValues.endDate}\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    />\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-6\">\n                                 <FormGroup check>\n                                  <Label check>\n                                    <Input type=\"checkbox\" onChange={handleValueChange}/>\n                                     {' '} &nbsp;&nbsp;<span> As at Today.</span>\n                                  </Label>\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-6\">\n                                <FormGroup>\n                                    <Label>Facility*</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"organisationUnitId\"\n                                        id=\"organisationUnitId\"\n                                        value={objValues.organisationUnitId}\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        {facilities.map((value) => (\n                                            <option key={value.id} value={value.organisationUnitId}>\n                                                {value.organisationUnitName}\n                                            </option>\n                                        ))}\n                                    </select>\n\n                                </FormGroup>\n                            </div>\n\n                            <br />\n                            <div className=\"row\">\n                            <div className=\"form-group mb-3 col-md-6\">\n                            <Button type=\"submit\" content='Generate Report' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit} disabled={objValues.organisationUnitId===\"\" ? true : false}/>\n                            </div>\n                            </div>\n\n                            {loading && (\n                                <Message icon>\n                                    <Icon name='circle notched' loading />\n                                <Message.Content>\n                                <Message.Header>Just one second</Message.Header>\n                                    We are fetching that content for you.\n                                </Message.Content>\n                                </Message>\n                            )}\n                        </div>\n                    </form>\n\n                </CardBody>\n            </Card>\n        </>\n    );\n};\n\nexport default PmtctMaternalCohortReport","/Users/basil/Desktop/Palladium_Pro/lamis_app/Report-Module/src/main/webapp/jsx/components/Reports/IndexElicitation.js",["168","169","170"],"import React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Card} from \"@material-ui/core\";\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\n// import {TiArrowBack} from 'react-icons/ti'\nimport {token, url as baseUrl } from \"../../../api\";\nimport 'react-phone-input-2/lib/style.css'\nimport { Button} from 'semantic-ui-react'\nimport { toast} from \"react-toastify\";\nimport FileSaver from \"file-saver\";\nimport { Message, Icon } from 'semantic-ui-react'\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        margin: theme.spacing(20),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    cardBottom: {\n        marginBottom: 20,\n    },\n    Select: {\n        height: 45,\n        width: 300,\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n    root: {\n        flexGrow: 1,\n        maxWidth: 752,\n    },\n    demo: {\n        backgroundColor: theme.palette.background.default,\n    },\n    inline: {\n        display: \"inline\",\n    },\n    error:{\n        color: '#f85032',\n        fontSize: '12.8px'\n    }\n}));\n\nconst IndexElicitationReport = (props) => {\n    let currentDate = new Date().toISOString().split('T')[0]\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false)\n    const [facilities, setFacilities] = useState([]);\n    const [status, setStatus] = useState(true);\n    const [objValues, setObjValues]=useState({\n        organisationUnitId:\"\",\n        organisationUnitName:\"\",\n        startDate:\"\",\n        endDate: \"\"\n    })\n    useEffect(() => {\n        Facilities()\n    }, []);\n    //Get list of WhoStaging\n    const Facilities =()=>{\n        axios\n            .get(`${baseUrl}account`,\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\n            )\n            .then((response) => {\n                console.log(response.data);\n                setFacilities(response.data.applicationUserOrganisationUnits);\n            })\n            .catch((error) => {\n                //console.log(error);\n            });\n\n    }\n\n    const handleInputChange = e => {\n        setObjValues ({...objValues,  [e.target.name]: e.target.value, organisationUnitName: e.target.innerText});\n    }\n\n    const handleValueChange = () => {\n        setStatus(!status)\n\n        if (status === true) {\n            setObjValues ({...objValues,  startDate: \"1980-01-01\", endDate: currentDate});\n        } else {\n            setObjValues ({...objValues,  startDate: \"\", endDate: currentDate});\n        }\n\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        setLoading(true)\n        console.log(token);\n\n        axios.post(`${baseUrl}index-elicitation-reporting?facilityId=${objValues.organisationUnitId}&startDate=${objValues.startDate}&endDate=${objValues.endDate}`,objValues.organisationUnitId,\n            { headers: {\"Authorization\" : `Bearer ${token}`}, responseType: 'blob'},\n        )\n            .then(response => {\n                setLoading(false)\n                const fileName = `${objValues.organisationUnitName} Index Elicitation ${currentDate}`\n                const responseData = response.data\n                let blob = new Blob([responseData], {type: \"application/octet-stream\"});\n\n                FileSaver.saveAs(blob, `${fileName}.xlsx`);\n                toast.success(\"Index Elicitation Report generated successfully\");\n            })\n            .catch(error => {\n                setLoading(false)\n                if(error.response && error.response.data){\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\n                    toast.error(errorMessage);\n                }\n                else{\n                    toast.error(\"Something went wrong. Please try again...\");\n                }\n            });\n\n\n\n\n    }\n\n    return (\n        <>\n\n            <Card >\n                <CardBody>\n\n                    <h2 style={{color:'#000'}}>INDEX ELICITATION REPORT</h2>\n                    <br/>\n                    <form >\n                        <div className=\"row\">\n                            <div className=\"form-group  col-md-6\">\n                                <FormGroup>\n                                    <Label>From *</Label>\n                                    <input\n                                        type=\"date\"\n                                        className=\"form-control\"\n                                        name=\"startDate\"\n                                        id=\"startDate\"\n                                        min={\"1980-01-01\"}\n                                        max={currentDate}\n                                        value={objValues.startDate}\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    />\n\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-6\">\n                                <FormGroup>\n                                    <Label>To *</Label>\n                                    <input\n                                        type=\"date\"\n                                        className=\"form-control\"\n                                        name=\"endDate\"\n                                        id=\"endDate\"\n                                        min={\"1980-01-01\"}\n                                        max={currentDate}\n                                        //min={objValues.startDate}\n                                        value={objValues.endDate}\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    />\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-6\">\n                                <FormGroup check>\n                                    <Label check>\n                                        <Input type=\"checkbox\" onChange={handleValueChange}/>\n                                        {' '} &nbsp;&nbsp;<span> As at Today.</span>\n                                    </Label>\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-6\">\n                                <FormGroup>\n                                    <Label>Facility*</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"organisationUnitId\"\n                                        id=\"organisationUnitId\"\n                                        value={objValues.organisationUnitId}\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        {facilities.map((value) => (\n                                            <option key={value.id} value={value.organisationUnitId}>\n                                                {value.organisationUnitName}\n                                            </option>\n                                        ))}\n                                    </select>\n\n                                </FormGroup>\n                            </div>\n\n                            <br />\n                            <div className=\"row\">\n                                <div className=\"form-group mb-3 col-md-6\">\n                                    <Button type=\"submit\" content='Generate Report' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit} disabled={objValues.organisationUnitId===\"\" ? true : false}/>\n                                </div>\n                            </div>\n\n                            {loading && (\n                                <Message icon>\n                                    <Icon name='circle notched' loading />\n                                    <Message.Content>\n                                        <Message.Header>Just one second</Message.Header>\n                                        We are fetching that content for you.\n                                    </Message.Content>\n                                </Message>\n                            )}\n                        </div>\n                    </form>\n\n                </CardBody>\n            </Card>\n        </>\n    );\n\n};\n\nexport default IndexElicitationReport","/Users/basil/Desktop/Palladium_Pro/lamis_app/Report-Module/src/main/webapp/api.js",[],{"ruleId":"171","severity":1,"message":"172","line":4,"column":41,"nodeType":"173","messageId":"174","endLine":4,"endColumn":47},{"ruleId":"171","severity":1,"message":"175","line":4,"column":26,"nodeType":"173","messageId":"174","endLine":4,"endColumn":31},{"ruleId":"171","severity":1,"message":"176","line":8,"column":10,"nodeType":"173","messageId":"174","endLine":8,"endColumn":14},{"ruleId":"171","severity":1,"message":"177","line":37,"column":9,"nodeType":"173","messageId":"174","endLine":37,"endColumn":16},{"ruleId":"171","severity":1,"message":"178","line":38,"column":10,"nodeType":"173","messageId":"174","endLine":38,"endColumn":16},{"ruleId":"171","severity":1,"message":"179","line":38,"column":18,"nodeType":"173","messageId":"174","endLine":38,"endColumn":27},{"ruleId":"171","severity":1,"message":"180","line":4,"column":25,"nodeType":"173","messageId":"174","endLine":4,"endColumn":35},{"ruleId":"171","severity":1,"message":"181","line":5,"column":9,"nodeType":"173","messageId":"174","endLine":5,"endColumn":13},{"ruleId":"171","severity":1,"message":"177","line":48,"column":11,"nodeType":"173","messageId":"174","endLine":48,"endColumn":18},{"ruleId":"171","severity":1,"message":"182","line":49,"column":12,"nodeType":"173","messageId":"174","endLine":49,"endColumn":19},{"ruleId":"171","severity":1,"message":"183","line":49,"column":21,"nodeType":"173","messageId":"174","endLine":49,"endColumn":31},{"ruleId":"171","severity":1,"message":"184","line":3,"column":38,"nodeType":"173","messageId":"174","endLine":3,"endColumn":45},{"ruleId":"171","severity":1,"message":"185","line":3,"column":47,"nodeType":"173","messageId":"174","endLine":3,"endColumn":52},{"ruleId":"171","severity":1,"message":"181","line":3,"column":54,"nodeType":"173","messageId":"174","endLine":3,"endColumn":58},{"ruleId":"171","severity":1,"message":"177","line":57,"column":9,"nodeType":"173","messageId":"174","endLine":57,"endColumn":16},{"ruleId":"171","severity":1,"message":"186","line":94,"column":9,"nodeType":"173","messageId":"174","endLine":94,"endColumn":26},{"ruleId":"171","severity":1,"message":"184","line":3,"column":38,"nodeType":"173","messageId":"174","endLine":3,"endColumn":45},{"ruleId":"171","severity":1,"message":"185","line":3,"column":46,"nodeType":"173","messageId":"174","endLine":3,"endColumn":51},{"ruleId":"171","severity":1,"message":"181","line":3,"column":52,"nodeType":"173","messageId":"174","endLine":3,"endColumn":56},{"ruleId":"171","severity":1,"message":"177","line":59,"column":11,"nodeType":"173","messageId":"174","endLine":59,"endColumn":18},{"ruleId":"171","severity":1,"message":"184","line":3,"column":38,"nodeType":"173","messageId":"174","endLine":3,"endColumn":45},{"ruleId":"171","severity":1,"message":"185","line":3,"column":46,"nodeType":"173","messageId":"174","endLine":3,"endColumn":51},{"ruleId":"171","severity":1,"message":"181","line":3,"column":52,"nodeType":"173","messageId":"174","endLine":3,"endColumn":56},{"ruleId":"171","severity":1,"message":"177","line":59,"column":11,"nodeType":"173","messageId":"174","endLine":59,"endColumn":18},{"ruleId":"171","severity":1,"message":"184","line":3,"column":38,"nodeType":"173","messageId":"174","endLine":3,"endColumn":45},{"ruleId":"171","severity":1,"message":"185","line":3,"column":46,"nodeType":"173","messageId":"174","endLine":3,"endColumn":51},{"ruleId":"171","severity":1,"message":"181","line":3,"column":52,"nodeType":"173","messageId":"174","endLine":3,"endColumn":56},{"ruleId":"171","severity":1,"message":"177","line":94,"column":11,"nodeType":"173","messageId":"174","endLine":94,"endColumn":18},{"ruleId":"171","severity":1,"message":"184","line":3,"column":38,"nodeType":"173","messageId":"174","endLine":3,"endColumn":45},{"ruleId":"171","severity":1,"message":"181","line":3,"column":54,"nodeType":"173","messageId":"174","endLine":3,"endColumn":58},{"ruleId":"171","severity":1,"message":"177","line":57,"column":9,"nodeType":"173","messageId":"174","endLine":57,"endColumn":16},{"ruleId":"171","severity":1,"message":"184","line":3,"column":38,"nodeType":"173","messageId":"174","endLine":3,"endColumn":45},{"ruleId":"171","severity":1,"message":"185","line":3,"column":46,"nodeType":"173","messageId":"174","endLine":3,"endColumn":51},{"ruleId":"171","severity":1,"message":"181","line":3,"column":52,"nodeType":"173","messageId":"174","endLine":3,"endColumn":56},{"ruleId":"171","severity":1,"message":"177","line":59,"column":11,"nodeType":"173","messageId":"174","endLine":59,"endColumn":18},{"ruleId":"171","severity":1,"message":"184","line":3,"column":38,"nodeType":"173","messageId":"174","endLine":3,"endColumn":45},{"ruleId":"171","severity":1,"message":"185","line":3,"column":46,"nodeType":"173","messageId":"174","endLine":3,"endColumn":51},{"ruleId":"171","severity":1,"message":"181","line":3,"column":52,"nodeType":"173","messageId":"174","endLine":3,"endColumn":56},{"ruleId":"171","severity":1,"message":"177","line":59,"column":11,"nodeType":"173","messageId":"174","endLine":59,"endColumn":18},{"ruleId":"171","severity":1,"message":"184","line":3,"column":38,"nodeType":"173","messageId":"174","endLine":3,"endColumn":45},{"ruleId":"171","severity":1,"message":"185","line":3,"column":47,"nodeType":"173","messageId":"174","endLine":3,"endColumn":52},{"ruleId":"171","severity":1,"message":"181","line":3,"column":54,"nodeType":"173","messageId":"174","endLine":3,"endColumn":58},{"ruleId":"171","severity":1,"message":"177","line":57,"column":9,"nodeType":"173","messageId":"174","endLine":57,"endColumn":16},{"ruleId":"171","severity":1,"message":"184","line":3,"column":38,"nodeType":"173","messageId":"174","endLine":3,"endColumn":45},{"ruleId":"171","severity":1,"message":"185","line":3,"column":47,"nodeType":"173","messageId":"174","endLine":3,"endColumn":52},{"ruleId":"171","severity":1,"message":"181","line":3,"column":54,"nodeType":"173","messageId":"174","endLine":3,"endColumn":58},{"ruleId":"171","severity":1,"message":"177","line":57,"column":9,"nodeType":"173","messageId":"174","endLine":57,"endColumn":16},{"ruleId":"171","severity":1,"message":"184","line":3,"column":38,"nodeType":"173","messageId":"174","endLine":3,"endColumn":45},{"ruleId":"171","severity":1,"message":"181","line":3,"column":52,"nodeType":"173","messageId":"174","endLine":3,"endColumn":56},{"ruleId":"171","severity":1,"message":"177","line":57,"column":11,"nodeType":"173","messageId":"174","endLine":57,"endColumn":18},{"ruleId":"171","severity":1,"message":"184","line":3,"column":38,"nodeType":"173","messageId":"174","endLine":3,"endColumn":45},{"ruleId":"171","severity":1,"message":"181","line":3,"column":52,"nodeType":"173","messageId":"174","endLine":3,"endColumn":56},{"ruleId":"171","severity":1,"message":"177","line":57,"column":11,"nodeType":"173","messageId":"174","endLine":57,"endColumn":18},{"ruleId":"171","severity":1,"message":"184","line":3,"column":38,"nodeType":"173","messageId":"174","endLine":3,"endColumn":45},{"ruleId":"171","severity":1,"message":"181","line":3,"column":52,"nodeType":"173","messageId":"174","endLine":3,"endColumn":56},{"ruleId":"171","severity":1,"message":"177","line":57,"column":11,"nodeType":"173","messageId":"174","endLine":57,"endColumn":18},{"ruleId":"171","severity":1,"message":"184","line":3,"column":38,"nodeType":"173","messageId":"174","endLine":3,"endColumn":45},{"ruleId":"171","severity":1,"message":"181","line":3,"column":52,"nodeType":"173","messageId":"174","endLine":3,"endColumn":56},{"ruleId":"171","severity":1,"message":"177","line":57,"column":11,"nodeType":"173","messageId":"174","endLine":57,"endColumn":18},{"ruleId":"171","severity":1,"message":"184","line":3,"column":38,"nodeType":"173","messageId":"174","endLine":3,"endColumn":45},{"ruleId":"171","severity":1,"message":"181","line":3,"column":52,"nodeType":"173","messageId":"174","endLine":3,"endColumn":56},{"ruleId":"171","severity":1,"message":"177","line":57,"column":11,"nodeType":"173","messageId":"174","endLine":57,"endColumn":18},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'toast' is defined but never used.","'Icon' is defined but never used.","'classes' is assigned a value but never used.","'saving' is assigned a value but never used.","'setSaving' is assigned a value but never used.","'Breadcrumb' is defined but never used.","'Form' is defined but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'Spinner' is defined but never used.","'Input' is defined but never used.","'handleValueChange' is assigned a value but never used."]