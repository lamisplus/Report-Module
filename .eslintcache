[{"C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\index.js":"1","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\App.js":"2","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\reportWebVitals.js":"3","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\context\\ThemeContext.js":"4","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\context\\ThemeDemo.js":"5","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Home.js":"6","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Visualisation\\Index.js":"7","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\Index.js":"8","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\PatientLineList.js":"9","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\LaboratoryReport.js":"10","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\Radet.js":"11","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\PrepReport.js":"12","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\Appointment.js":"13","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\PharmacyReport.js":"14","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\HTSReport.js":"15","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\ClinicData.js":"16","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\ClientVerification.js":"17","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\TbReport.js":"18","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\PmtctHtsReport.js":"19","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\BiometricReport.js":"20","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\IndexElicitation.js":"21","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\PmtctMaternalCohortReport.js":"22","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\api.js":"23","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\EACReport.js":"24","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\NcdReport.js":"25","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\AhdReport.js":"26","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\PrepLongitudinalReport.js":"27","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\MhpssReport.js":"28","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\KpPrevReport.js":"29","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\HtsRegister.js":"30","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\HIVSTReport.js":"31","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\HTSIndexReport.js":"32","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\CustomReport.js":"33","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Shared\\Scrollable.js":"34","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\SplitActionButton.js":"35","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\ProgressComponent.js":"36","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\ADRReport.js":"37"},{"size":753,"mtime":1700812866159,"results":"38","hashOfConfig":"39"},{"size":847,"mtime":1700812866156,"results":"40","hashOfConfig":"39"},{"size":375,"mtime":1700812873175,"results":"41","hashOfConfig":"39"},{"size":9235,"mtime":1700812866279,"results":"42","hashOfConfig":"39"},{"size":3056,"mtime":1700812866282,"results":"43","hashOfConfig":"39"},{"size":1540,"mtime":1700812873136,"results":"44","hashOfConfig":"39"},{"size":6329,"mtime":1700812873164,"results":"45","hashOfConfig":"39"},{"size":23326,"mtime":1718883511836,"results":"46","hashOfConfig":"39"},{"size":6609,"mtime":1718883014567,"results":"47","hashOfConfig":"39"},{"size":6578,"mtime":1718883230415,"results":"48","hashOfConfig":"39"},{"size":8554,"mtime":1718879834328,"results":"49","hashOfConfig":"39"},{"size":9200,"mtime":1718883014588,"results":"50","hashOfConfig":"39"},{"size":16685,"mtime":1718883230267,"results":"51","hashOfConfig":"39"},{"size":6568,"mtime":1718883014492,"results":"52","hashOfConfig":"39"},{"size":9174,"mtime":1718883230394,"results":"53","hashOfConfig":"39"},{"size":8070,"mtime":1718883230245,"results":"54","hashOfConfig":"39"},{"size":5877,"mtime":1718883230288,"results":"55","hashOfConfig":"39"},{"size":7306,"mtime":1718883014645,"results":"56","hashOfConfig":"39"},{"size":9242,"mtime":1718883014455,"results":"57","hashOfConfig":"39"},{"size":7812,"mtime":1718883230375,"results":"58","hashOfConfig":"39"},{"size":9416,"mtime":1718883230224,"results":"59","hashOfConfig":"39"},{"size":9291,"mtime":1718883014606,"results":"60","hashOfConfig":"39"},{"size":528,"mtime":1718883755139,"results":"61","hashOfConfig":"39"},{"size":7309,"mtime":1718883230203,"results":"62","hashOfConfig":"39"},{"size":7306,"mtime":1718883014760,"results":"63","hashOfConfig":"39"},{"size":9107,"mtime":1718883230449,"results":"64","hashOfConfig":"39"},{"size":9271,"mtime":1718883014627,"results":"65","hashOfConfig":"39"},{"size":9258,"mtime":1718883014824,"results":"66","hashOfConfig":"39"},{"size":9218,"mtime":1718883230316,"results":"67","hashOfConfig":"39"},{"size":9240,"mtime":1718883230339,"results":"68","hashOfConfig":"39"},{"size":9215,"mtime":1718883230431,"results":"69","hashOfConfig":"39"},{"size":9237,"mtime":1718883230357,"results":"70","hashOfConfig":"39"},{"size":15267,"mtime":1718883230467,"results":"71","hashOfConfig":"39"},{"size":4021,"mtime":1718872485504,"results":"72","hashOfConfig":"39"},{"size":4665,"mtime":1700557703499,"results":"73","hashOfConfig":"39"},{"size":937,"mtime":1718873454683,"results":"74","hashOfConfig":"39"},{"size":9107,"mtime":1718883478077,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"79"},"bul8ze",{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"79"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"79"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179"},"C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\index.js",["180"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter, MemoryRouter as Router,} from 'react-router-dom';\r\n\r\nimport reportWebVitals from \"./../src/main/webapp/reportWebVitals\";\r\nimport SimpleReactLightbox from \"simple-react-lightbox\";\r\nimport  ThemeContext  from \"./../src/main/webapp/context/ThemeContext\"; \r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\r\n            <SimpleReactLightbox>\r\n                <BrowserRouter basename='/'>\r\n                    <ThemeContext>\r\n                        <App />\r\n                    </ThemeContext>  \r\n                </BrowserRouter>\r\n            </SimpleReactLightbox>\r\n\r\n\t</React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\nreportWebVitals();\r\n",["181","182"],"C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\App.js",[],"C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\reportWebVitals.js",[],"C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\context\\ThemeContext.js",[],"C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\context\\ThemeDemo.js",[],"C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Home.js",[],"C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Visualisation\\Index.js",["183","184","185","186","187"],"import React, { useState } from \"react\";\r\nimport {Card,CardBody,} from \"reactstrap\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {  Icon, Button, Breadcrumb} from 'semantic-ui-react';\r\nimport {Form,Row,Col,FormGroup,Label,Input, FormFeedback} from 'reactstrap';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    root: {\r\n        '& > *': {\r\n          margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}))\r\n\r\nconst GenerateCharts = (props) => {\r\n    const classes = useStyles()\r\n    const [loading, setLoading] = useState(false)\r\n\r\n\r\n  return (\r\n    <div >\r\n        <Card >\r\n         <CardBody>\r\n\r\n                 <Row style={{ marginTop: '20px'}}>\r\n  \r\n                    <Col md=\"3\">\r\n                    <FormGroup>\r\n                        <Label>Data Category </Label>\r\n                            <Input\r\n                                type=\"select\"\r\n                                name=\"category\"\r\n                                id=\"category\"\r\n                              \r\n                            >\r\n                                <option value=\"\"></option>\r\n                                <option value=\"indicator\"> Indicator </option>\r\n\r\n                            </Input>\r\n\r\n                    </FormGroup>\r\n                    </Col>\r\n                    <Col md=\"3\">\r\n                    <FormGroup>\r\n                        <Label>Chart Type </Label>\r\n                            <Input\r\n                                type=\"select\"\r\n                                name=\"chart_type\"\r\n                                id=\"chart_type\"\r\n                               \r\n                            >\r\n                                <option value=\"\"></option>\r\n                                <option value=\"column\"> Pie Chart</option>\r\n                                <option value=\"column\"> Bar Chart</option>\r\n                                <option value=\"column\"> Column Chart </option>\r\n                                <option value=\"column\"> Line Chart</option>\r\n                                <option value=\"column\"> Area Chart </option>\r\n                            </Input>\r\n\r\n                    </FormGroup>\r\n                    </Col>\r\n                    <Col md=\"3\">\r\n                    <FormGroup>\r\n                        <Label>Gender </Label>\r\n                            <Input\r\n                                type=\"select\"\r\n                                name=\"gender\"\r\n                                id=\"gender\"\r\n                              \r\n                            >\r\n                                <option value=\"\">All</option>\r\n                                <option value=\"Male\">Male </option>\r\n                                <option value=\"Female\"> Female </option>\r\n                               \r\n                            </Input>\r\n\r\n                    </FormGroup>\r\n                    </Col>\r\n                    <Col md=\"3\">\r\n                     <FormGroup>\r\n                            <Label for=\"exampleSelect\">Age Disaggregation</Label>\r\n                                <Input type=\"text\" name=\"age_disaggregation\" id=\"age_disaggregation\"  >\r\n                                    \r\n                                </Input>\r\n                                    <FormFeedback></FormFeedback>\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col md=\"3\">\r\n                    <FormGroup>\r\n                        <Label>Data Element </Label>\r\n                            <Input\r\n                                type=\"select\"\r\n                                name=\"data_element\"\r\n                                id=\"data_element\"\r\n                                \r\n                            >\r\n\r\n                                <option value=\"\"></option>\r\n                                <option value=\"TX_CURR\">TX_CURR </option>\r\n                                <option value=\"TX_NEW\">TX_NEW </option>\r\n                                <option value=\"PVLS_D\">PVLS_D </option>\r\n                                <option value=\"PVLS_N\">PVLS_N </option>\r\n                                <option value=\"HTS_POS\">HTS_POS </option>\r\n                                <option value=\"HTS\">HTS </option>\r\n\r\n                            </Input>\r\n\r\n                    </FormGroup>\r\n                    </Col>\r\n\r\n                    <Col md=\"3\">\r\n                    <FormGroup>\r\n                        <Label>Start Date </Label>\r\n                        <Input\r\n                            type=\"date\"\r\n                            name=\"data_element\"\r\n                            id=\"data_element\"                                \r\n                        />\r\n                    </FormGroup>\r\n                    </Col>\r\n                    <Col md=\"3\">\r\n                    <FormGroup>\r\n                        <Label>End Date </Label>\r\n                        <Input\r\n                            type=\"date\"\r\n                            name=\"data_element\"\r\n                            id=\"data_element\"                                \r\n                        /> \r\n                    </FormGroup>\r\n                    </Col>\r\n                   \r\n                    <Col style={{ marginTop: '20px'}}>\r\n                    <Button icon labelPosition='right' color='blue' >\r\n                        Generate Chart Report\r\n                    <Icon name='right arrow' />\r\n                    </Button>\r\n                    </Col>\r\n                    </Row>\r\n               \r\n                 \r\n            </CardBody>\r\n        </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GenerateCharts;\r\n\r\n\r\n\r\n","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\Index.js",["188","189","190","191","192","193","194"],"import React, { useState } from \"react\";\r\nimport { Card, CardBody } from \"reactstrap\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Icon, Menu, Dropdown } from \"semantic-ui-react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport PatientLineList from \"./PatientLineList\";\r\nimport Appointment from \"./Appointment\";\r\nimport Radet from \"./Radet\";\r\nimport BiometricReport from \"./BiometricReport\";\r\nimport PharmacyReport from \"./PharmacyReport\";\r\nimport LaboratoryReport from \"./LaboratoryReport\";\r\nimport HTSReport from \"./HTSReport\";\r\nimport HtsRegister from \"./HtsRegister\";\r\nimport PrepReport from \"./PrepReport\";\r\nimport ClinicData from \"./ClinicData\";\r\nimport ClientVerification from \"./ClientVerification\";\r\nimport TbReport from \"./TbReport\";\r\nimport IndexElicitation from \"./IndexElicitation\";\r\nimport PmtctHtsReport from \"./PmtctHtsReport\";\r\nimport PmtctMaternalCohortReport from \"./PmtctMaternalCohortReport\";\r\nimport NcdReport from \"./NcdReport\";\r\nimport EACReport from \"./EACReport\";\r\nimport AhdReport from \"./AhdReport\";\r\nimport PrepLongitudinalReport from \"./PrepLongitudinalReport\";\r\nimport MhpssReport from \"./MhpssReport\";\r\nimport KpPrevReport from \"./KpPrevReport\";\r\nimport HIVST from \"./HIVSTReport\";\r\nimport HTSIndexReport from \"./HTSIndexReport\";\r\nimport CustomReport from \"./CustomReport\";\r\nimport ADRReport from \"./ADRReport\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst Reports = (props) => {\r\n  const classes = useStyles();\r\n  const [saving, setSaving] = useState(false);\r\n  const [activeItem, setactiveItem] = useState(\"basic\");\r\n  const [completed, setCompleted] = useState([]);\r\n  const handleItemClick = (activeItem) => {\r\n    setactiveItem(activeItem);\r\n    //setCompleted({...completed, ...completedMenu})\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer autoClose={3000} hideProgressBar />\r\n      <Card>\r\n        <CardBody>\r\n          <div className=\"row\">\r\n            <form>\r\n              <br />\r\n              <br />\r\n              <div className=\"col-md-3 float-start\">\r\n                <Menu\r\n                  size=\"small\"\r\n                  vertical\r\n                  style={{ backgroundColor: \"#014D88\" }}\r\n                >\r\n                  <Menu.Item\r\n                    name=\"inbox\"\r\n                    active={activeItem === \"radet\"}\r\n                    onClick={() => handleItemClick(\"radet\")}\r\n                    style={{\r\n                      backgroundColor: activeItem === \"radet\" ? \"#000\" : \"\",\r\n                    }}\r\n                  >\r\n                    <span style={{ color: \"#fff\" }}> RADET </span>\r\n                  </Menu.Item>\r\n\r\n                  <Menu.Item\r\n                    name=\"spam\"\r\n                    active={activeItem === \"appointment\"}\r\n                    onClick={() => handleItemClick(\"appointment\")}\r\n                    style={{\r\n                      backgroundColor:\r\n                        activeItem === \"appointment\" ? \"#000\" : \"\",\r\n                    }}\r\n                  >\r\n                    {/* <Label>4</Label> */}\r\n                    <span style={{ color: \"#fff\" }}>APPOINTMENT </span>\r\n                  </Menu.Item>\r\n                  <Menu.Item\r\n                    name=\"spam\"\r\n                    active={activeItem === \"line-list\"}\r\n                    onClick={() => handleItemClick(\"line-list\")}\r\n                    style={{\r\n                      backgroundColor: activeItem === \"line-list\" ? \"#000\" : \"\",\r\n                    }}\r\n                  >\r\n                    {/* <Label>4</Label> */}\r\n                    <span style={{ color: \"#fff\" }}>PATIENT LINE LIST</span>\r\n                  </Menu.Item>\r\n                  <Menu.Item\r\n                    name=\"inbox\"\r\n                    active={activeItem === \"pharmacy-report\"}\r\n                    onClick={() => handleItemClick(\"pharmacy-report\")}\r\n                    style={{\r\n                      backgroundColor:\r\n                        activeItem === \"pharmacy-report\" ? \"#000\" : \"\",\r\n                    }}\r\n                  >\r\n                    <span style={{ color: \"#fff\" }}>PHARMACY DATA</span>\r\n\r\n                    {/* <Label color='teal'>5</Label> */}\r\n                  </Menu.Item>\r\n                  <Menu.Item\r\n                    name=\"inbox\"\r\n                    active={activeItem === \"biometric\"}\r\n                    onClick={() => handleItemClick(\"biometric\")}\r\n                    style={{\r\n                      backgroundColor: activeItem === \"biometric\" ? \"#000\" : \"\",\r\n                    }}\r\n                  >\r\n                    <span style={{ color: \"#fff\" }}>BIOMETRIC DATA</span>\r\n\r\n                    {/* <Label color='teal'>5</Label> */}\r\n                  </Menu.Item>\r\n                  <Menu.Item\r\n                    name=\"inbox\"\r\n                    active={activeItem === \"laboratory-report\"}\r\n                    onClick={() => handleItemClick(\"laboratory-report\")}\r\n                    style={{\r\n                      backgroundColor:\r\n                        activeItem === \"laboratory-report\" ? \"#000\" : \"\",\r\n                    }}\r\n                  >\r\n                    <span style={{ color: \"#fff\" }}>LABORATORY DATA</span>\r\n\r\n                    {/* <Label color='teal'>5</Label> */}\r\n                  </Menu.Item>\r\n                  <Menu.Item\r\n                    name=\"inbox\"\r\n                    active={activeItem === \"hts-report\"}\r\n                    onClick={() => handleItemClick(\"hts-report\")}\r\n                    style={{\r\n                      backgroundColor:\r\n                        activeItem === \"hts-report\" ? \"#000\" : \"\",\r\n                    }}\r\n                  >\r\n                    <span style={{ color: \"#fff\" }}>HTS REPORT</span>\r\n\r\n                    {/* <Label color='teal'>5</Label> */}\r\n                  </Menu.Item>\r\n                  <Menu.Item\r\n                    name=\"inbox\"\r\n                    active={activeItem === \"hts-register\"}\r\n                    onClick={() => handleItemClick(\"hts-register\")}\r\n                    style={{\r\n                      backgroundColor:\r\n                        activeItem === \"hts-register\" ? \"#000\" : \"\",\r\n                    }}\r\n                  >\r\n                    <span style={{ color: \"#fff\" }}>HTS REGISTER</span>\r\n\r\n                    {/* <Label color='teal'>5</Label> */}\r\n                  </Menu.Item>\r\n                  <Menu.Item\r\n                    name=\"inbox\"\r\n                    active={activeItem === \"prep-report\"}\r\n                    onClick={() => handleItemClick(\"prep-report\")}\r\n                    style={{\r\n                      backgroundColor:\r\n                        activeItem === \"prep-report\" ? \"#000\" : \"\",\r\n                    }}\r\n                  >\r\n                    <span style={{ color: \"#fff\" }}>Prep REPORT</span>\r\n\r\n                    {/* <Label color='teal'>5</Label> */}\r\n                  </Menu.Item>\r\n                  <Menu.Item\r\n                    name=\"inbox\"\r\n                    active={activeItem === \"prep-longitudinal-report\"}\r\n                    onClick={() => handleItemClick(\"prep-longitudinal-report\")}\r\n                    style={{\r\n                      backgroundColor:\r\n                        activeItem === \"prep-longitudinal-report\" ? \"#000\" : \"\",\r\n                    }}\r\n                  >\r\n                    <span style={{ color: \"#fff\" }}>PrEP LONGITUDINAL REPORT</span>\r\n\r\n                    {/* <Label color='teal'>5</Label> */}\r\n                  </Menu.Item>\r\n                  <Menu.Item\r\n                    name=\"inbox\"\r\n                    active={activeItem === \"clinic-data-report\"}\r\n                    onClick={() => handleItemClick(\"clinic-data-report\")}\r\n                    style={{\r\n                      backgroundColor:\r\n                        activeItem === \"clinic-data-report\" ? \"#000\" : \"\",\r\n                    }}\r\n                  >\r\n                    <span style={{ color: \"#fff\" }}>CLINIC DATA REPORT</span>\r\n\r\n                    {/* <Label color='teal'>5</Label> */}\r\n                  </Menu.Item>\r\n\r\n                  <Menu.Item\r\n                    name=\"inbox\"\r\n                    active={activeItem === \"client-verification\"}\r\n                    onClick={() => handleItemClick(\"client-verification\")}\r\n                    style={{\r\n                      backgroundColor:\r\n                        activeItem === \"client-verification\" ? \"#000\" : \"\",\r\n                    }}\r\n                  >\r\n                    <span style={{ color: \"#fff\" }}>CLIENT VERIFICATION</span>\r\n\r\n                    {/* <Label color='teal'>5</Label> */}\r\n                  </Menu.Item>\r\n\r\n                  <Menu.Item\r\n                    name=\"inbox\"\r\n                    active={activeItem === \"tb-report\"}\r\n                    onClick={() => handleItemClick(\"tb-report\")}\r\n                    style={{\r\n                      backgroundColor: activeItem === \"tb-report\" ? \"#000\" : \"\",\r\n                    }}\r\n                  >\r\n                    <span style={{ color: \"#fff\" }}>TB REPORT</span>\r\n\r\n                    {/* <Label color='teal'>5</Label> */}\r\n                  </Menu.Item>\r\n                  <Menu.Item\r\n                    name=\"inbox\"\r\n                    active={activeItem === \"ncd-report\"}\r\n                    onClick={() => handleItemClick(\"ncd-report\")}\r\n                    style={{\r\n                      backgroundColor:\r\n                        activeItem === \"ncd-report\" ? \"#000\" : \"\",\r\n                    }}\r\n                  >\r\n                    <span style={{ color: \"#fff\" }}>NCD Report</span>\r\n\r\n                    {/* <Label color='teal'>5</Label> */}\r\n                  </Menu.Item>\r\n                  <Menu.Item\r\n                    name=\"inbox\"\r\n                    active={activeItem === \"eac-report\"}\r\n                    onClick={() => handleItemClick(\"eac-report\")}\r\n                    style={{\r\n                      backgroundColor:\r\n                        activeItem === \"eac-report\" ? \"#000\" : \"\",\r\n                    }}\r\n                  >\r\n                    <span style={{ color: \"#fff\" }}>EAC Report</span>\r\n\r\n                    {/* <Label color='teal'>5</Label> */}\r\n                  </Menu.Item>\r\n\r\n\r\n                  <Menu.Item\r\n                    name=\"inbox\"\r\n                    active={activeItem === \"index-elicitation\"}\r\n                    onClick={() => handleItemClick(\"index-elicitation\")}\r\n                    style={{\r\n                      backgroundColor:\r\n                        activeItem === \"index-elicitation\" ? \"#000\" : \"\",\r\n                    }}\r\n                  >\r\n                    <span style={{ color: \"#fff\" }}>INDEX ELICITATION</span>\r\n\r\n                    {/* <Label color='teal'>5</Label> */}\r\n                  </Menu.Item>\r\n                  <Menu.Item\r\n                    name=\"inbox\"\r\n                    active={activeItem === \"pmtct-hts\"}\r\n                    onClick={() => handleItemClick(\"pmtct-hts\")}\r\n                    style={{\r\n                      backgroundColor: activeItem === \"pmtct-hts\" ? \"#000\" : \"\",\r\n                    }}\r\n                  >\r\n                    <span style={{ color: \"#fff\" }}>PMTCT HTS</span>\r\n\r\n                    {/* <Label color='teal'>5</Label> */}\r\n                  </Menu.Item>\r\n                  <Menu.Item\r\n                    name=\"inbox\"\r\n                    active={activeItem === \"pmtct-maternal-cohort\"}\r\n                    onClick={() => handleItemClick(\"pmtct-maternal-cohort\")}\r\n                    style={{\r\n                      backgroundColor:\r\n                        activeItem === \"pmtct-maternal-cohort\" ? \"#000\" : \"\",\r\n                    }}\r\n                  >\r\n                    <span style={{ color: \"#fff\" }}>PMTCT MATERNAL COHORT</span>\r\n\r\n                    {/* <Label color='teal'>5</Label> */}\r\n                  </Menu.Item>\r\n\r\n                  <Menu.Item\r\n                    name=\"inbox\"\r\n                    active={activeItem === \"ahd-report\"}\r\n                    onClick={() => handleItemClick(\"ahd-report\")}\r\n                    style={{\r\n                      backgroundColor: activeItem === \"ahd-report\" ? \"#000\" : \"\",\r\n                    }}\r\n                  >\r\n                    <span style={{ color: \"#fff\" }}>AHD REPORT</span>\r\n\r\n                    {/* <Label color='teal'>5</Label> */}\r\n                  </Menu.Item>\r\n                  <Menu.Item\r\n                    name=\"inbox\"\r\n                    active={activeItem === \"mhpss-report\"}\r\n                    onClick={() => handleItemClick(\"mhpss-report\")}\r\n                    style={{\r\n                      backgroundColor:\r\n                        activeItem === \"mhpss-report\" ? \"#000\" : \"\",\r\n                    }}\r\n                  >\r\n                    <span style={{ color: \"#fff\" }}>MHPSS Report</span>\r\n                    {/* <Label color='teal'>5</Label> */}\r\n                  </Menu.Item>\r\n                    <Menu.Item\r\n                      name=\"inbox\"\r\n                       active={activeItem === \"kp-prev-report\"}\r\n                       onClick={() => handleItemClick(\"kp-prev-report\")}\r\n                        style={{\r\n                        backgroundColor: activeItem === \"kp-prev-report\" ? \"#000\" : \"\",\r\n                         }}\r\n                     >\r\n                     <span style={{ color: \"#fff\" }}>KP PREV REPORT</span>\r\n                      {/* <Label color='teal'>5</Label> */}\r\n                      </Menu.Item>\r\n\r\n                      <Menu.Item\r\n                      name=\"inbox\"\r\n                       active={activeItem === \"hivst-report\"}\r\n                       onClick={() => handleItemClick(\"hivst-report\")}\r\n                        style={{\r\n                        backgroundColor: activeItem === \"hivst-report\" ? \"#000\" : \"\",\r\n                         }}\r\n                     >\r\n                     <span style={{ color: \"#fff\" }}>HIVST REPORT</span>\r\n                      {/* <Label color='teal'>5</Label> */}\r\n                      </Menu.Item>\r\n\r\n                     {/* <Menu.Item\r\n                      name=\"inbox\"\r\n                       active={activeItem === \"hts-index-report\"}\r\n                       onClick={() => handleItemClick(\"hts-index-report\")}\r\n                        style={{\r\n                        backgroundColor: activeItem === \"hts-index-report\" ? \"#000\" : \"\",\r\n                         }}\r\n                     >\r\n                     <span style={{ color: \"#fff\" }}>HTS INDEX REPORT</span>*/}\r\n                      {/* <Label color='teal'>5</Label> */}\r\n                     {/* </Menu.Item> */}\r\n                     <Menu.Item\r\n                     name=\"inbox\"\r\n                      active={activeItem === \"adr-report\"}\r\n                      onClick={() => handleItemClick(\"adr-report\")}\r\n                       style={{\r\n                       backgroundColor: activeItem === \"adr-report\" ? \"#000\" : \"\",\r\n                        }}\r\n                    >\r\n                    <span style={{ color: \"#fff\" }}>ADR REPORT</span>\r\n                     {/* <Label color='teal'>5</Label> */}\r\n                     </Menu.Item>\r\n\r\n                      <Menu.Item\r\n                      name=\"inbox\"\r\n                       active={activeItem === \"custom-report\"}\r\n                       onClick={() => handleItemClick(\"custom-report\")}\r\n                        style={{\r\n                        backgroundColor: activeItem === \"custom-report\" ? \"#000\" : \"\",\r\n                         }}\r\n                     >\r\n                     <span style={{ color: \"#fff\" }}>CUSTOM REPORT</span> \r\n                      {/* <Label color='teal'>5</Label> */}\r\n                     </Menu.Item>\r\n\r\n\r\n                </Menu>\r\n              </div>\r\n              <div\r\n                className=\"col-md-9 float-end\"\r\n                style={{ backgroundColor: \"#fff\" }}\r\n              >\r\n                {activeItem === \"line-list\" && (\r\n                  <PatientLineList\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                  />\r\n                )}\r\n                {activeItem === \"appointment\" && (\r\n                  <Appointment\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                  />\r\n                )}\r\n                {activeItem === \"radet\" && (\r\n                  <Radet\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                  />\r\n                )}\r\n                {activeItem === \"biometric\" && (\r\n                  <BiometricReport\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                  />\r\n                )}\r\n                {activeItem === \"pharmacy-report\" && (\r\n                  <PharmacyReport\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                  />\r\n                )}\r\n                {activeItem === \"laboratory-report\" && (\r\n                  <LaboratoryReport\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                  />\r\n                )}\r\n\r\n                {activeItem === \"tb-report\" && (\r\n                  <TbReport\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                  />\r\n                )}\r\n                {activeItem === \"ncd-report\" && (\r\n                  <NcdReport\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                  />\r\n                )}\r\n\r\n                {activeItem === \"eac-report\" && (\r\n                  <EACReport\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                  />\r\n                )}\r\n\r\n                {activeItem === \"hts-report\" && (\r\n                  <HTSReport\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                  />\r\n                )}\r\n                {activeItem === \"hts-register\" && (\r\n                  <HtsRegister\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                  />\r\n                )}\r\n                {activeItem === \"prep-report\" && (\r\n                  <PrepReport\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                  />\r\n                )}\r\n                {activeItem === \"prep-longitudinal-report\" && (\r\n                  <PrepLongitudinalReport\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                  />\r\n                )}\r\n                {activeItem === \"clinic-data-report\" && (\r\n                  <ClinicData\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                  />\r\n                )}\r\n\r\n                {activeItem === \"client-verification\" && (\r\n                  <ClientVerification\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                  />\r\n                )}\r\n                {activeItem === \"index-elicitation\" && (\r\n                  <IndexElicitation\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                  />\r\n                )}\r\n                {activeItem === \"pmtct-hts\" && (\r\n                  <PmtctHtsReport\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                  />\r\n                )}\r\n                {activeItem === \"pmtct-maternal-cohort\" && (\r\n                  <PmtctMaternalCohortReport\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                  />\r\n                )}\r\n                {activeItem === \"ahd-report\" && (\r\n                  <AhdReport\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                  />\r\n                )}\r\n                {activeItem === \"mhpss-report\" && (\r\n                  <MhpssReport\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                  />\r\n                )\r\n                }\r\n                {activeItem === \"kp-prev-report\" && (\r\n                  <KpPrevReport\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                  />\r\n                )}\r\n                {activeItem === \"hivst-report\" && (\r\n                  <HIVST\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                  />\r\n                )}\r\n                {/* {activeItem === \"hts-index-report\" && (\r\n                  <HTSIndexReport\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                  />\r\n                )} */}\r\n                {activeItem === \"adr-report\" && (\r\n                  <ADRReport\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                  />\r\n                )}\r\n                {activeItem === \"custom-report\" && (\r\n                  <CustomReport\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                  />\r\n                )}\r\n\r\n\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Reports;\r\n","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\PatientLineList.js",["195","196","197","198","199"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card} from \"@material-ui/core\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { Button} from 'semantic-ui-react'\r\nimport { toast} from \"react-toastify\";\r\nimport FileSaver from \"file-saver\";\r\nimport { Message, Icon } from 'semantic-ui-react'\r\nimport ProgressComponent from \"./ProgressComponent\"\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst PatientLineList = (props) => {\r\n    let currentDate = new Date().toISOString().split('T')[0]\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false)\r\n    const [facilitiesUpdate, setFacilities] = useState([]);\r\n    const [objValues, setObjValues]=useState({       \r\n        organisationUnitId:\"\",\r\n        organisationUnitName:\"\",\r\n    })\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        setLoading(true)\r\n        axios.post(`${baseUrl}reporting/patient-line-list?facilityId=${objValues.organisationUnitId}`,objValues.organisationUnitId,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}, responseType: 'blob'},\r\n          )\r\n              .then(response => {\r\n                setLoading(false)\r\n                const fileName = `${objValues.organisationUnitName} Patient Line List ${currentDate}`\r\n                const responseData = response.data\r\n                let blob = new Blob([responseData], {type: \"application/octet-stream\"});\r\n                FileSaver.saveAs(blob, `${fileName}.xlsx`);\r\n                toast.success(\" Report generated successful\");\r\n                  //toast.success(\" Save successful\");\r\n                  //props.setActiveContent('recent-history')\r\n\r\n              })\r\n              .catch(error => {\r\n                setLoading(false)\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n              });\r\n            \r\n\r\n    }\r\n    const handleInputChange = e => {\r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value, organisationUnitName: e.target.innerText});\r\n    }\r\n    useEffect(() => {\r\n        Facilities()\r\n      }, []);\r\n    //Get list of WhoStaging\r\n    const Facilities =()=>{\r\n    axios\r\n        .get(`${baseUrl}account`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            console.log(response.data);\r\n            setFacilities(response.data.applicationUserOrganisationUnits);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });\r\n    \r\n    }\r\nconsole.log(facilitiesUpdate)\r\n    return (\r\n        <>\r\n            \r\n            <Card >\r\n                <CardBody>\r\n    \r\n                <h2 style={{color:'#000'}}>PATIENT LINE LIST</h2>\r\n                <br/>\r\n                    <form >\r\n                        <div className=\"row\">\r\n\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Facility*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"organisationUnitId\"\r\n                                        id=\"organisationUnitId\"\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {facilitiesUpdate.map((value) => (\r\n                                            <option key={value.id} value={value.organisationUnitId}>\r\n                                                {value.organisationUnitName}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                            <Button type=\"submit\" content='Generate Report' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit} disabled={objValues.organisationUnitId===\"\" ? true : false}/>\r\n                            </div>\r\n                            </div>\r\n\r\n                            {loading && (\r\n                                <Message icon>\r\n                                                  <Message.Content>\r\n                                                        <ProgressComponent/>\r\n                                                  </Message.Content>\r\n                                                </Message>\r\n                            )}\r\n                        </div>\r\n                    </form>\r\n\r\n                </CardBody>\r\n            </Card>                                 \r\n        </>\r\n    );\r\n};\r\n\r\nexport default PatientLineList","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\LaboratoryReport.js",["200","201","202","203","204"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card} from \"@material-ui/core\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { Button} from 'semantic-ui-react'\r\nimport { toast} from \"react-toastify\";\r\nimport FileSaver from \"file-saver\";\r\nimport { Message, Icon } from 'semantic-ui-react'\r\nimport ProgressComponent from \"./ProgressComponent\"\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst LaboratoryReport = (props) => {\r\n    let currentDate = new Date().toISOString().split('T')[0]\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false)\r\n    const [facilities, setFacilities] = useState([]);\r\n    const [objValues, setObjValues]=useState({       \r\n        organisationUnitId:\"\",\r\n        organisationUnitName:\"\"\r\n    })\r\n    useEffect(() => {\r\n        Facilities()\r\n      }, []);\r\n    //Get list of WhoStaging\r\n    const Facilities =()=>{\r\n    axios\r\n        .get(`${baseUrl}account`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setFacilities(response.data.applicationUserOrganisationUnits);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });\r\n    \r\n    }\r\n    const handleInputChange = e => {\r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value, organisationUnitName: e.target.innerText});\r\n    }\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        setLoading(true)\r\n        axios.get(`${baseUrl}reporting/laboratory/${objValues.organisationUnitId}`,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}, responseType: 'blob'},\r\n          \r\n          )\r\n              .then(response => {\r\n                setLoading(false)\r\n                const fileName = `${objValues.organisationUnitName} Laboratory ${currentDate}`\r\n                const responseData = response.data\r\n                let blob = new Blob([responseData], {type: \"application/octet-stream\"});\r\n                FileSaver.saveAs(blob, `${fileName}.xlsx`);\r\n                  //toast.success(\" Save successful\");\r\n                  //props.setActiveContent('recent-history')\r\n\r\n              })\r\n              .catch(error => {\r\n                setLoading(false)\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n              });\r\n            \r\n\r\n    }\r\n    \r\n    \r\n\r\n    return (\r\n        <>\r\n            \r\n            <Card >\r\n                <CardBody>\r\n    \r\n                <h2 style={{color:'#000'}}>LABORATORY REPORT</h2>\r\n                <br/>\r\n                    <form >\r\n                        <div className=\"row\">\r\n                        \r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>Facility*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"organisationUnitId\"\r\n                                        id=\"organisationUnitId\"\r\n                                        value={objValues.organisationUnitId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {facilities.map((value) => (\r\n                                            <option key={value.id} value={value.organisationUnitId}>\r\n                                                {value.organisationUnitName}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                            <Button type=\"submit\" content='Generate Report' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit} disabled={objValues.organisationUnitId===\"\" ? true : false}/>\r\n                            </div>\r\n                            </div>\r\n\r\n                            {loading && (\r\n                                <Message icon>\r\n                                                  <Message.Content>\r\n                                                        <ProgressComponent/>\r\n                                                  </Message.Content>\r\n                                                </Message>\r\n                            )}\r\n                        </div>\r\n                    </form>\r\n\r\n                </CardBody>\r\n            </Card>                                 \r\n        </>\r\n    );\r\n};\r\n\r\nexport default LaboratoryReport","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\Radet.js",["205","206","207","208"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { FormGroup, Label, CardBody, Spinner, Input, Form } from \"reactstrap\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card } from \"@material-ui/core\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport { token, url as baseUrl } from \"../../../api\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport { toast } from \"react-toastify\";\r\nimport FileSaver from \"file-saver\";\r\nimport { Message, Icon } from \"semantic-ui-react\";\r\nimport ProgressComponent from \"./ProgressComponent\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n    maxWidth: 752,\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n}));\r\n\r\nconst PatientLineList = (props) => {\r\n  let currentDate = new Date().toISOString().split(\"T\")[0];\r\n  const classes = useStyles();\r\n  const [loading, setLoading] = useState(false);\r\n  const [facilities, setFacilities] = useState([]);\r\n  const [status, setStatus] = useState(true);\r\n  const [objValues, setObjValues] = useState({\r\n    organisationUnitId: \"\",\r\n    organisationUnitName: \"\",\r\n    startDate: \"\",\r\n    endDate: \"\",\r\n  });\r\n  useEffect(() => {\r\n    Facilities();\r\n  }, []);\r\n  //Get list of WhoStaging\r\n  const Facilities = () => {\r\n    axios\r\n      .get(`${baseUrl}account`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setFacilities(response.data.applicationUserOrganisationUnits);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    //1980-01-01\r\n    console.log(e.target.innerText, e.target.name, e.target.name);\r\n    if (e.target.name === \"organisationUnitId\") {\r\n      localStorage.setItem(\"facility\", JSON.stringify(e.target.innerText));\r\n    } else {\r\n      setObjValues({\r\n        ...objValues,\r\n        [e.target.name]: e.target.value,\r\n        organisationUnitName: e.target.innerText,\r\n      });\r\n    }\r\n    setObjValues({\r\n      ...objValues,\r\n      [e.target.name]: e.target.value,\r\n      organisationUnitName: e.target.innerText,\r\n    });\r\n  };\r\n\r\n  const handleValueChange = () => {\r\n    setStatus(!status);\r\n\r\n    if (status === true) {\r\n      setObjValues({\r\n        ...objValues,\r\n        startDate: \"1980-01-01\",\r\n        endDate: currentDate,\r\n      });\r\n    } else {\r\n      setObjValues({ ...objValues, startDate: \"\", endDate: currentDate });\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n\r\n    console.log(objValues);\r\n\r\n    axios\r\n      .get(\r\n        `${baseUrl}reporting/radet?facilityId=${objValues.organisationUnitId}&startDate=${objValues.startDate}&endDate=${objValues.endDate}`,\r\n        { headers: { Authorization: `Bearer ${token}` }, responseType: \"blob\" }\r\n      )\r\n      .then((response) => {\r\n        setLoading(false);\r\n        const facilityName = JSON.parse(localStorage.getItem(\"facility\"));\r\n        // console.log(facilityName);\r\n        const fileName = `${facilityName} Radet ${currentDate}`;\r\n        const responseData = response.data;\r\n        let blob = new Blob([responseData], {\r\n          type: \"application/octet-stream\",\r\n        });\r\n\r\n        FileSaver.saveAs(blob, `${fileName}.xlsx`);\r\n        toast.success(\"Radet Report generated successful\");\r\n        //props.setActiveContent('recent-history')\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n        if (error.response && error.response.data) {\r\n          let errorMessage =\r\n            error.response.data.apierror &&\r\n            error.response.data.apierror.message !== \"\"\r\n              ? error.response.data.apierror.message\r\n              : \"Something went wrong, please try again\";\r\n          toast.error(errorMessage);\r\n        } else {\r\n          toast.error(\"Something went wrong. Please try again...\");\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardBody>\r\n          <h2 style={{ color: \"#000\" }}>RADET REPORT</h2>\r\n          <br />\r\n          <form>\r\n            <div className=\"row\">\r\n              <div className=\"form-group  col-md-6\">\r\n                <FormGroup>\r\n                  <Label>From *</Label>\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control\"\r\n                    name=\"startDate\"\r\n                    id=\"startDate\"\r\n                    min={\"1980-01-01\"}\r\n                    max={currentDate}\r\n                    value={objValues.startDate}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-6\">\r\n                <FormGroup>\r\n                  <Label>To *</Label>\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control\"\r\n                    name=\"endDate\"\r\n                    id=\"endDate\"\r\n                    min={\"1980-01-01\"}\r\n                    max={currentDate}\r\n                    //min={objValues.startDate}\r\n                    value={objValues.endDate}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-6\">\r\n                <FormGroup check>\r\n                  <Label check>\r\n                    <Input type=\"checkbox\" onChange={handleValueChange} />{\" \"}\r\n                    &nbsp;&nbsp;<span> As at Today.</span>\r\n                  </Label>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-6\">\r\n                <FormGroup>\r\n                  <Label>Facility*</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"organisationUnitId\"\r\n                    id=\"organisationUnitId\"\r\n                    value={objValues.organisationUnitId}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    {facilities.map((value) => (\r\n                      <option key={value.id} value={value.organisationUnitId}>\r\n                        {value.organisationUnitName}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <br />\r\n              <div className=\"row\">\r\n\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                  <Button\r\n                    type=\"submit\"\r\n                    content=\"Generate Report\"\r\n                    icon=\"right arrow\"\r\n                    labelPosition=\"right\"\r\n                    style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n                    onClick={handleSubmit}\r\n                    disabled={\r\n                      objValues.organisationUnitId === \"\" ? true : false\r\n                    }\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              {loading && (\r\n                <Message icon>\r\n                  <Message.Content>\r\n                        <ProgressComponent/>\r\n                  </Message.Content>\r\n                </Message>\r\n              )}\r\n            </div>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PatientLineList;\r\n","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\PrepReport.js",["209","210","211","212"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card} from \"@material-ui/core\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { Button} from 'semantic-ui-react'\r\nimport { toast} from \"react-toastify\";\r\nimport FileSaver from \"file-saver\";\r\nimport { Message, Icon } from 'semantic-ui-react'\r\nimport ProgressComponent from \"./ProgressComponent\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\nconst PrepReport = (props) => {\r\n    let currentDate = new Date().toISOString().split('T')[0]\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false)\r\n    const [facilities, setFacilities] = useState([]);\r\n    const [status, setStatus] = useState(true);\r\n    const [objValues, setObjValues]=useState({\r\n        organisationUnitId:\"\",\r\n        organisationUnitName:\"\",\r\n        startDate:\"\",\r\n        endDate: \"\"\r\n    })\r\n    useEffect(() => {\r\n        Facilities()\r\n      }, []);\r\n    //Get list of WhoStaging\r\n    const Facilities =()=>{\r\n    axios\r\n        .get(`${baseUrl}account`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            console.log(response.data);\r\n            setFacilities(response.data.applicationUserOrganisationUnits);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });\r\n    }\r\n\r\n    const handleInputChange = e => {\r\n        //1980-01-01\r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value, organisationUnitName: e.target.innerText});\r\n    }\r\n\r\n    const handleValueChange = () => {\r\n        setStatus(!status)\r\n\r\n        if (status === true) {\r\n          setObjValues ({...objValues,  startDate: \"1980-01-01\", endDate: currentDate});\r\n        } else {\r\n          setObjValues ({...objValues,  startDate: \"\", endDate: currentDate});\r\n        }\r\n\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true)\r\n        //console.log(token);\r\n\r\n        axios.post(`${baseUrl}prep-reporting?facilityId=${objValues.organisationUnitId}&startDate=${objValues.startDate}&endDate=${objValues.endDate}`,objValues.organisationUnitId,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}, responseType: 'blob'},\r\n        )\r\n          .then(response => {\r\n            setLoading(false)\r\n            const fileName =`${objValues.organisationUnitName} Prep ${currentDate}`\r\n            const responseData = response.data\r\n            let blob = new Blob([responseData], {type: \"application/octet-stream\"});\r\n\r\n            FileSaver.saveAs(blob, `${fileName}.xlsx`);\r\n            toast.success(\"Prep Report generated successfully\");\r\n          })\r\n          .catch(error => {\r\n            setLoading(false)\r\n            if(error.response && error.response.data){\r\n                let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                toast.error(errorMessage);\r\n              }\r\n              else{\r\n                toast.error(\"Something went wrong. Please try again...\");\r\n              }\r\n          });\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <Card >\r\n                <CardBody>\r\n\r\n                <h2 style={{color:'#000'}}>Prep REPORT</h2>\r\n                <br/>\r\n                    <form >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>From *</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"startDate\"\r\n                                        id=\"startDate\"\r\n                                        min={\"1980-01-01\"}\r\n                                        max={currentDate}\r\n                                        value={objValues.startDate}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>To *</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"endDate\"\r\n                                        id=\"endDate\"\r\n                                        min={\"1980-01-01\"}\r\n                                        max={currentDate}\r\n                                        //min={objValues.startDate}\r\n                                        value={objValues.endDate}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                 <FormGroup check>\r\n                                  <Label check>\r\n                                    <Input type=\"checkbox\" onChange={handleValueChange}/>\r\n                                     {' '} &nbsp;&nbsp;<span> As at Today.</span>\r\n                                  </Label>\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>Facility*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"organisationUnitId\"\r\n                                        id=\"organisationUnitId\"\r\n                                        value={objValues.organisationUnitId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {facilities.map((value) => (\r\n                                            <option key={value.id} value={value.organisationUnitId}>\r\n                                                {value.organisationUnitName}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n\r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                            <Button type=\"submit\" content='Generate Report' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit} disabled={objValues.organisationUnitId===\"\" ? true : false}/>\r\n                            </div>\r\n                            </div>\r\n\r\n                            {loading && (\r\n                               <Message icon>\r\n                                                 <Message.Content>\r\n                                                       <ProgressComponent/>\r\n                                                 </Message.Content>\r\n                                               </Message>\r\n                            )}\r\n                        </div>\r\n                    </form>\r\n\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PrepReport","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\Appointment.js",["213","214","215","216","217"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card} from \"@material-ui/core\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { Button} from 'semantic-ui-react'\r\nimport MaterialTable from 'material-table';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { forwardRef } from 'react';\r\nimport { toast} from \"react-toastify\";\r\nimport { Message, Icon } from 'semantic-ui-react'\r\nimport ProgressComponent from \"./ProgressComponent\"\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n    };\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst Appointment = (props) => {\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false)\r\n    const [showContent, setShowContent] = useState(false)\r\n    const [appointmentReport, setAppointmentReport]= useState([])\r\n    const [facilities, setFacilities] = useState([]);\r\n    const [tableTitle, setTableTitle]= useState(\"\");\r\n    const [showNoRecord, setShowNoRecord]= useState(false)\r\n    const [objValues, setObjValues]=useState({       \r\n        facilityId:\"\", startDate:\"\", endDate:\"\", type:\"\"\r\n    })\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        setLoading(true)\r\n        axios.get(`${baseUrl}reporting/${objValues.type}?facilityId=${objValues.facilityId}&startDate=${objValues.startDate}&endDate=${objValues.endDate} `,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {                \r\n                setLoading(false)\r\n                setShowContent(true)\r\n                if(objValues.type==='miss-refill'){\r\n                    setTableTitle(`Missed Refill Appointment  -  From :${objValues.startDate}  - To: ${objValues.endDate}`)\r\n                }else if(objValues.type==='miss-clinic'){\r\n                    setTableTitle(`Missed Clinic Appointment   -  From :${objValues.startDate}  - To: ${objValues.endDate}`)\r\n                }else if(objValues.type==='clinic-appointment'){\r\n                    setTableTitle(`Clinic Appointment   -  From :${objValues.startDate}  - To: ${objValues.endDate}`)\r\n                }else if(objValues.type==='refill-appointment'){\r\n                    setTableTitle(`Refill Appointment   -  From :${objValues.startDate}  - To: ${objValues.endDate}`)\r\n                }else{\r\n                    setTableTitle('')\r\n                }\r\n                setAppointmentReport(response.data)\r\n                if(response.data.length <=0){\r\n                    setShowNoRecord(true)\r\n                }else{\r\n                    setShowNoRecord(false)\r\n                }\r\n              })\r\n              .catch(error => {\r\n                setLoading(false)\r\n                setShowContent(false)\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n              });\r\n            \r\n\r\n    }\r\n    const handleInputChange = e => {\r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n    }\r\n    useEffect(() => {\r\n        Facilities()\r\n      }, []);\r\n    //Get list of WhoStaging\r\n    const Facilities =()=>{\r\n    axios\r\n        .get(`${baseUrl}account`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setFacilities(response.data.applicationUserOrganisationUnits);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });\r\n    \r\n    }\r\n\r\n    return (\r\n        <>\r\n            \r\n            <Card >\r\n                <CardBody>\r\n    \r\n                <h2 style={{color:'#000'}}>APPOINTMENT REPORT</h2>\r\n                <br/>\r\n                    <form >\r\n                        <div className=\"row\">\r\n\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>Start Date*</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"startDate\"\r\n                                        id=\"startDate\"\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>End Date*</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"endDate\"\r\n                                        id=\"endDate\"\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n                                     \r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>Facility*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"facilityId\"\r\n                                        id=\"facilityId\"\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {facilities.map((value) => (\r\n                                            <option key={value.id} value={value.organisationUnitId}>\r\n                                                {value.organisationUnitName}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>Type*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"type\"\r\n                                        id=\"type\"\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"miss-refill\">Missed Refill Appointment</option>\r\n                                        <option value=\"miss-clinic\">Missed Clinic Appointment </option>\r\n                                        <option value=\"clinic-appointment\">Scheduled Clinic Visit(Clinic Appointment)</option>\r\n                                        <option value=\"refill-appointment\">Scheduled Refill Visit(Refill Appointment)</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                            <Button type=\"submit\" content='Generate Report' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit}\r\n                                disabled={objValues.facilityId===\"\" || objValues.startDate===\"\" || objValues.endDate===\"\"  || objValues.type===\"\" ? true : false}\r\n                            />\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n\r\n                    <br/>\r\n                    {loading && (\r\n                       <Message icon>\r\n                          <Message.Content>\r\n                                <ProgressComponent/>\r\n                          </Message.Content>\r\n                        </Message>\r\n                    )}\r\n                    {showNoRecord && (\r\n                        <Message info>\r\n                            <Message.Content>\r\n                            {/* <Message.Header>Just one second</Message.Header> */}\r\n                            <b>No Record Found</b>\r\n                            </Message.Content>\r\n                        </Message>\r\n                    )}\r\n                    {showContent &&(\r\n                        <MaterialTable\r\n                            icons={tableIcons}\r\n                            title= {tableTitle}\r\n                            columns={[\r\n                                { title: \"Name\", field: \"name\" },\r\n                                { title: \"Hospital Num\", field: \"hospitalNum\" },\r\n                                { title: \"Patient Id\", field: \"patientId\" },                                \r\n                                { title: \"DOB\", field: \"dateBirth\" },\r\n                                { title: \"Age\", field: \"age\" },\r\n                                { title: \"phone\", field: \"phone\" },\r\n                                { title: \"Art Start Date\", field: \"artStartDate\" },\r\n                                { title: \"Date Of LastVisit\", field: \"dateOfLastVisit\" },\r\n                                { title: \"Date Of NextVisit\", field: \"dateOfNextVisit\" },\r\n                                { title: \"Current Status\", field: \"currentStatus\" },\r\n                                { title: \"Case Manager\", field: \"caseManager\" },\r\n                                { title: \"Facility Name\", field: \"facilityName\" },\r\n                                { title: \"lga\", field: \"lga\" },\r\n                                { title: \"Lga Of Residence\", field: \"lgaOfResidence\" },\r\n                                { title: \"state\", field: \"state\" },\r\n                                { title: \"State Of Residence\", field: \"stateOfResidence\" },\r\n\r\n                            ]}\r\n                            isLoading={loading}\r\n                            data={appointmentReport.map((row) => ({\r\n                                name: row.name,\r\n                                hospitalNum: row.hospitalNum,\r\n                                patientId:row.patientId,\r\n                                dateBirth: row.dateBirth,\r\n                                age: row.age,\r\n                                phone: row.phone,\r\n                                artStartDate: row.artStartDate,\r\n                                dateOfLastVisit: row.dateOfLastVisit,\r\n                                dateOfNextVisit:row.dateOfNextVisit,\r\n                                currentStatus: row.currentStatus,\r\n                                caseManager: row.caseManager,\r\n                                facilityName: row.facilityName,\r\n                                lga:row.lga,\r\n                                lgaOfResidence: row.lgaOfResidence,\r\n                                state: row.state,\r\n                                stateOfResidence:row.stateOfResidence,\r\n                                \r\n                                }))}\r\n                            \r\n                                        options={{\r\n                                        headerStyle: {\r\n                                            backgroundColor: \"#014d88\",\r\n                                            color: \"#fff\",\r\n                                        },\r\n                                        searchFieldStyle: {\r\n                                            width : '100%',\r\n                                            margingLeft: '250px',\r\n                                        },\r\n                                        filtering: false,\r\n                                        exportButton: true,\r\n                                        searchFieldAlignment: 'left',\r\n                                        pageSizeOptions:[10,20,100, 500,1000,2000,3000],\r\n                                        pageSize:10,\r\n                                        debounceInterval: 400\r\n                            }}\r\n                        />\r\n                    )}\r\n                </CardBody>\r\n            </Card>                                 \r\n        </>\r\n    );\r\n};\r\n\r\nexport default Appointment","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\PharmacyReport.js",["218","219","220","221","222"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card} from \"@material-ui/core\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { Button} from 'semantic-ui-react'\r\nimport { toast} from \"react-toastify\";\r\nimport FileSaver from \"file-saver\";\r\nimport { Message, Icon } from 'semantic-ui-react'\r\nimport ProgressComponent from \"./ProgressComponent\"\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst PharmacyReport = (props) => {\r\n    let currentDate = new Date().toISOString().split('T')[0]\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false)\r\n    const [facilities, setFacilities] = useState([]);\r\n    const [objValues, setObjValues]=useState({       \r\n        organisationUnitId:\"\",\r\n        organisationUnitName:\"\"\r\n    })\r\n    useEffect(() => {\r\n        Facilities()\r\n      }, []);\r\n    //Get list of WhoStaging\r\n    const Facilities =()=>{\r\n    axios\r\n        .get(`${baseUrl}account`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setFacilities(response.data.applicationUserOrganisationUnits);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });\r\n    \r\n    }\r\n    const handleInputChange = e => {\r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value, organisationUnitName: e.target.innerText});\r\n    }\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        setLoading(true)\r\n        axios.get(`${baseUrl}reporting/pharmacy/${objValues.organisationUnitId}`,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}, responseType: 'blob'},\r\n          \r\n          )\r\n              .then(response => {\r\n                setLoading(false)\r\n                const fileName = `${objValues.organisationUnitName} Pharmacy ${currentDate}`\r\n                const responseData = response.data\r\n                let blob = new Blob([responseData], {type: \"application/octet-stream\"});\r\n                FileSaver.saveAs(blob, `${fileName}.xlsx`);\r\n                  //toast.success(\" Save successful\");\r\n                  //props.setActiveContent('recent-history')\r\n\r\n              })\r\n              .catch(error => {\r\n                setLoading(false)\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n              });\r\n            \r\n\r\n    }\r\n    \r\n    \r\n\r\n    return (\r\n        <>\r\n            \r\n            <Card >\r\n                <CardBody>\r\n    \r\n                <h2 style={{color:'#000'}}>PHARMACY REPORT</h2>\r\n                <br/>\r\n                    <form >\r\n                        <div className=\"row\">\r\n                        \r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>Facility*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"organisationUnitId\"\r\n                                        id=\"organisationUnitId\"\r\n                                        value={objValues.organisationUnitId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {facilities.map((value) => (\r\n                                            <option key={value.id} value={value.organisationUnitId}>\r\n                                                {value.organisationUnitName}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                            <Button type=\"submit\" content='Generate Report' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit} disabled={objValues.organisationUnitId===\"\" ? true : false}/>\r\n                            </div>\r\n                            </div>\r\n\r\n                            {loading && (\r\n                                <Message icon>\r\n                                                  <Message.Content>\r\n                                                        <ProgressComponent/>\r\n                                                  </Message.Content>\r\n                                                </Message>\r\n                            )}\r\n                        </div>\r\n                    </form>\r\n\r\n                </CardBody>\r\n            </Card>                                 \r\n        </>\r\n    );\r\n};\r\n\r\nexport default PharmacyReport","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\HTSReport.js",["223","224","225","226"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card} from \"@material-ui/core\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { Button} from 'semantic-ui-react'\r\nimport { toast} from \"react-toastify\";\r\nimport FileSaver from \"file-saver\";\r\nimport { Message, Icon } from 'semantic-ui-react'\r\nimport ProgressComponent from \"./ProgressComponent\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\nconst HTSReport = (props) => {\r\n    let currentDate = new Date().toISOString().split('T')[0]\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false)\r\n    const [facilities, setFacilities] = useState([]);\r\n    const [status, setStatus] = useState(true);\r\n    const [objValues, setObjValues]=useState({\r\n        organisationUnitId:\"\",\r\n        organisationUnitName:\"\",\r\n        startDate:\"\",\r\n        endDate: \"\"\r\n    })\r\n    useEffect(() => {\r\n        Facilities()\r\n      }, []);\r\n    //Get list of WhoStaging\r\n    const Facilities =()=>{\r\n    axios\r\n        .get(`${baseUrl}account`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n        console.log(response.data);\r\n            setFacilities(response.data.applicationUserOrganisationUnits);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });\r\n\r\n    }\r\n\r\n    const handleInputChange = e => {\r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value, organisationUnitName: e.target.innerText});\r\n    }\r\n\r\n    const handleValueChange = () => {\r\n        setStatus(!status)\r\n\r\n        if (status === true) {\r\n          setObjValues ({...objValues,  startDate: \"1980-01-01\", endDate: currentDate});\r\n        } else {\r\n          setObjValues ({...objValues,  startDate: \"\", endDate: currentDate});\r\n        }\r\n\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true)\r\n        console.log(token);\r\n\r\n        axios.post(`${baseUrl}hts-reporting?facilityId=${objValues.organisationUnitId}&startDate=${objValues.startDate}&endDate=${objValues.endDate}`,objValues.organisationUnitId,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}, responseType: 'blob'},\r\n        )\r\n          .then(response => {\r\n            setLoading(false)\r\n            const fileName = `${objValues.organisationUnitName} HTS ${currentDate}`\r\n            const responseData = response.data\r\n            let blob = new Blob([responseData], {type: \"application/octet-stream\"});\r\n\r\n            FileSaver.saveAs(blob, `${fileName}.xlsx`);\r\n            toast.success(\"HTS Report generated successfully\");\r\n          })\r\n          .catch(error => {\r\n            setLoading(false)\r\n            if(error.response && error.response.data){\r\n                let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                toast.error(errorMessage);\r\n              }\r\n              else{\r\n                toast.error(\"Something went wrong. Please try again...\");\r\n              }\r\n          });\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <Card >\r\n                <CardBody>\r\n\r\n                <h2 style={{color:'#000'}}>HTS REPORT</h2>\r\n                <br/>\r\n                    <form >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>From *</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"startDate\"\r\n                                        id=\"startDate\"\r\n                                        min={\"1980-01-01\"}\r\n                                        max={currentDate}\r\n                                        value={objValues.startDate}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>To *</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"endDate\"\r\n                                        id=\"endDate\"\r\n                                        min={\"1980-01-01\"}\r\n                                        max={currentDate}\r\n                                        //min={objValues.startDate}\r\n                                        value={objValues.endDate}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                 <FormGroup check>\r\n                                  <Label check>\r\n                                    <Input type=\"checkbox\" onChange={handleValueChange}/>\r\n                                     {' '} &nbsp;&nbsp;<span> As at Today.</span>\r\n                                  </Label>\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>Facility*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"organisationUnitId\"\r\n                                        id=\"organisationUnitId\"\r\n                                        value={objValues.organisationUnitId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {facilities.map((value) => (\r\n                                            <option key={value.id} value={value.organisationUnitId}>\r\n                                                {value.organisationUnitName}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n\r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                            <Button type=\"submit\" content='Generate Report' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit} disabled={objValues.organisationUnitId===\"\" ? true : false}/>\r\n                            </div>\r\n                            </div>\r\n\r\n                            {loading && (\r\n                                <Message icon>\r\n                                                  <Message.Content>\r\n                                                        <ProgressComponent/>\r\n                                                  </Message.Content>\r\n                                                </Message>\r\n                            )}\r\n                        </div>\r\n                    </form>\r\n\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default HTSReport","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\ClinicData.js",["227","228","229","230","231","232"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { FormGroup, Label, CardBody, Spinner, Input, Form } from \"reactstrap\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card } from \"@material-ui/core\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport { token, url as baseUrl } from \"../../../api\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport { toast } from \"react-toastify\";\r\nimport FileSaver from \"file-saver\";\r\nimport { Message, Icon } from \"semantic-ui-react\";\r\nimport ProgressComponent from \"./ProgressComponent\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n    maxWidth: 752,\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n}));\r\n\r\nconst ClinicData = (props) => {\r\n  let currentDate = new Date().toISOString().split(\"T\")[0];\r\n  const classes = useStyles();\r\n  const [loading, setLoading] = useState(false);\r\n  const [facilities, setFacilities] = useState([]);\r\n  const [status, setStatus] = useState(true);\r\n  const [objValues, setObjValues] = useState({\r\n    organisationUnitId: \"\",\r\n    organisationUnitName: \"\",\r\n    startDate: \"\",\r\n    endDate: \"\",\r\n  });\r\n  useEffect(() => {\r\n    Facilities();\r\n  }, []);\r\n  //Get list of WhoStaging\r\n  const Facilities = () => {\r\n    axios\r\n      .get(`${baseUrl}account`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setFacilities(response.data.applicationUserOrganisationUnits);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    //1980-01-01\r\n    setObjValues({\r\n      ...objValues,\r\n      [e.target.name]: e.target.value,\r\n      organisationUnitName: e.target.innerText,\r\n    });\r\n  };\r\n\r\n  const handleValueChange = () => {\r\n    setStatus(!status);\r\n\r\n    if (status === true) {\r\n      setObjValues({\r\n        ...objValues,\r\n        startDate: \"1980-01-01\",\r\n        endDate: currentDate,\r\n      });\r\n    } else {\r\n      setObjValues({ ...objValues, startDate: \"\", endDate: currentDate });\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    //console.log(token);\r\n\r\n    axios\r\n      .get(`${baseUrl}reporting/clinic-data/${objValues.organisationUnitId}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n        responseType: \"blob\",\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n        setLoading(false);\r\n        const fileName = `${objValues.organisationUnitName} Clinic Data ${currentDate}`;\r\n        const responseData = response.data;\r\n        let blob = new Blob([responseData], {\r\n          type: \"application/octet-stream\",\r\n        });\r\n\r\n        FileSaver.saveAs(blob, `${fileName}.xlsx`);\r\n        toast.success(\"Clinic data generated successfully\");\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n        if (error.response && error.response.data) {\r\n          let errorMessage =\r\n            error.response.data.apierror &&\r\n            error.response.data.apierror.message !== \"\"\r\n              ? error.response.data.apierror.message\r\n              : \"Something went wrong, please try again\";\r\n          toast.error(errorMessage);\r\n        } else {\r\n          toast.error(\"Something went wrong. Please try again...\");\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardBody>\r\n          <h2 style={{ color: \"#000\" }}>CLINIC DATA REPORT</h2>\r\n          <br />\r\n          <form>\r\n            <div className=\"row\">\r\n              {/* <div className=\"form-group  col-md-6\">\r\n                <FormGroup>\r\n                  <Label>From *</Label>\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control\"\r\n                    name=\"startDate\"\r\n                    id=\"startDate\"\r\n                    min={\"1980-01-01\"}\r\n                    max={currentDate}\r\n                    value={objValues.startDate}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-6\">\r\n                <FormGroup>\r\n                  <Label>To *</Label>\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control\"\r\n                    name=\"endDate\"\r\n                    id=\"endDate\"\r\n                    min={\"1980-01-01\"}\r\n                    max={currentDate}\r\n                    //min={objValues.startDate}\r\n                    value={objValues.endDate}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-6\">\r\n                <FormGroup check>\r\n                  <Label check>\r\n                    <Input type=\"checkbox\" onChange={handleValueChange} />{\" \"}\r\n                    &nbsp;&nbsp;<span> As at Today.</span>\r\n                  </Label>\r\n                </FormGroup>\r\n              </div> */}\r\n              <div className=\"form-group  col-md-6\">\r\n                <FormGroup>\r\n                  <Label>Facility*</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"organisationUnitId\"\r\n                    id=\"organisationUnitId\"\r\n                    value={objValues.organisationUnitId}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    {facilities.map((value) => (\r\n                      <option key={value.id} value={value.organisationUnitId}>\r\n                        {value.organisationUnitName}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <br />\r\n              <div className=\"row\">\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                  <Button\r\n                    type=\"submit\"\r\n                    content=\"Generate Report\"\r\n                    icon=\"right arrow\"\r\n                    labelPosition=\"right\"\r\n                    style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n                    onClick={handleSubmit}\r\n                    disabled={\r\n                      objValues.organisationUnitId === \"\" ? true : false\r\n                    }\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              {loading && (\r\n                <Message icon>\r\n                                  <Message.Content>\r\n                                        <ProgressComponent/>\r\n                                  </Message.Content>\r\n                                </Message>\r\n              )}\r\n            </div>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ClinicData;\r\n","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\ClientVerification.js",["233","234","235","236","237"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { FormGroup, Label, CardBody, Spinner, Input, Form } from \"reactstrap\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card } from \"@material-ui/core\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport { token, url as baseUrl } from \"../../../api\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport { toast } from \"react-toastify\";\r\nimport FileSaver from \"file-saver\";\r\nimport { Message, Icon } from \"semantic-ui-react\";\r\nimport ProgressComponent from \"./ProgressComponent\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n    maxWidth: 752,\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n}));\r\n\r\nconst ClientVerification = (props) => {\r\n  let currentDate = new Date().toISOString().split(\"T\")[0];\r\n  const classes = useStyles();\r\n  const [loading, setLoading] = useState(false);\r\n  const [facilities, setFacilities] = useState([]);\r\n  const [objValues, setObjValues] = useState({\r\n    organisationUnitId: \"\",\r\n    organisationUnitName: \"\",\r\n  });\r\n  useEffect(() => {\r\n    Facilities();\r\n  }, []);\r\n  //Get list of WhoStaging\r\n  const Facilities = () => {\r\n    axios\r\n      .get(`${baseUrl}account`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setFacilities(response.data.applicationUserOrganisationUnits);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const handleInputChange = (e) => {\r\n    setObjValues({\r\n      ...objValues,\r\n      [e.target.name]: e.target.value,\r\n        organisationUnitName: e.target.innerText,\r\n    \r\n    });\r\n      \r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n      setLoading(true);\r\n      \r\n    axios\r\n      .get(`${baseUrl}reporting/client-service-list/${objValues.organisationUnitId}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n        responseType: \"blob\",\r\n      })\r\n      .then((response) => {\r\n        setLoading(false);\r\n        const fileName = `${objValues.organisationUnitName}Client Verification${currentDate}`;\r\n        const responseData = response.data;\r\n        let blob = new Blob([responseData], {\r\n          type: \"application/octet-stream\",\r\n        });\r\n        FileSaver.saveAs(blob, `${fileName}.xlsx`);\r\n        //toast.success(\" Save successful\");\r\n        //props.setActiveContent('recent-history')\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n        if (error.response && error.response.data) {\r\n          let errorMessage =\r\n            error.response.data.apierror &&\r\n            error.response.data.apierror.message !== \"\"\r\n              ? error.response.data.apierror.message\r\n              : \"Something went wrong, please try again\";\r\n          toast.error(errorMessage);\r\n        } else {\r\n          toast.error(\"Something went wrong. Please try again...\");\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardBody>\r\n          <h2 style={{ color: \"#000\" }}>CLIENT VERIFICATION REPORT</h2>\r\n          <br />\r\n          <form>\r\n            <div className=\"row\">\r\n              <div className=\"form-group  col-md-6\">\r\n                <FormGroup>\r\n                  <Label>Facility*</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"organisationUnitId\"\r\n                    id=\"organisationUnitId\"\r\n                    value={objValues.organisationUnitId}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    {facilities.map((value) => (\r\n                      <option key={value.id} value={value.organisationUnitId}>\r\n                        {value.organisationUnitName}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <br />\r\n              <div className=\"row\">\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                  <Button\r\n                    type=\"submit\"\r\n                    content=\"Generate Report\"\r\n                    icon=\"right arrow\"\r\n                    labelPosition=\"right\"\r\n                    style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n                    onClick={handleSubmit}\r\n                    disabled={\r\n                      objValues.organisationUnitId === \"\" ? true : false\r\n                    }\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              {loading && (\r\n                <Message icon>\r\n                                  <Message.Content>\r\n                                        <ProgressComponent/>\r\n                                  </Message.Content>\r\n                                </Message>\r\n              )}\r\n            </div>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ClientVerification;\r\n","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\TbReport.js",["238","239","240","241","242"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { FormGroup, Label, CardBody, Spinner, Input, Form } from \"reactstrap\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card } from \"@material-ui/core\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport { token, url as baseUrl } from \"../../../api\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport { toast } from \"react-toastify\";\r\nimport FileSaver from \"file-saver\";\r\nimport { Message, Icon } from \"semantic-ui-react\";\r\nimport ProgressComponent from \"./ProgressComponent\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n    maxWidth: 752,\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n}));\r\n\r\nconst TbReport = (props) => {\r\n  let currentDate = new Date().toISOString().split(\"T\")[0];\r\n  const classes = useStyles();\r\n  const [loading, setLoading] = useState(false);\r\n  const [facilities, setFacilities] = useState([]);\r\n  const [objValues, setObjValues] = useState({\r\n    organisationUnitId: \"\",\r\n    organisationUnitName: \"\",\r\n    startDate: \"\",\r\n    endDate: \"\",\r\n  });\r\n  useEffect(() => {\r\n    Facilities();\r\n  }, []);\r\n  //Get list of WhoStaging\r\n  const Facilities = () => {\r\n    axios\r\n      .get(`${baseUrl}account`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setFacilities(response.data.applicationUserOrganisationUnits);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const handleInputChange = (e) => {\r\n    setObjValues({\r\n      ...objValues,\r\n      [e.target.name]: e.target.value,\r\n      organisationUnitName: e.target.innerText,\r\n    });\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n   \r\n    axios\r\n      .get(\r\n        `${baseUrl}reporting/tb-report?facilityId=${objValues.organisationUnitId}&start=${objValues.startDate}&end=${objValues.endDate}`,\r\n        { headers: { Authorization: `Bearer ${token}` }, responseType: \"blob\" }\r\n      )\r\n      .then((response) => {\r\n        setLoading(false);\r\n        const fileName = `${objValues.organisationUnitName} TB-Report ${currentDate}`;\r\n        const responseData = response.data;\r\n        let blob = new Blob([responseData], {\r\n          type: \"application/octet-stream\",\r\n        });\r\n        FileSaver.saveAs(blob, `${fileName}.xlsx`);\r\n        toast.success(\" Report generated successful\");\r\n        //toast.success(\" Save successful\");\r\n        //props.setActiveContent('recent-history')\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n        if (error.response && error.response.data) {\r\n          let errorMessage =\r\n            error.response.data.apierror &&\r\n            error.response.data.apierror.message !== \"\"\r\n              ? error.response.data.apierror.message\r\n              : \"Something went wrong, please try again\";\r\n          toast.error(errorMessage);\r\n        } else {\r\n          toast.error(\"Something went wrong. Please try again...\");\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardBody>\r\n          <h2 style={{ color: \"#000\" }}>TB REPORT</h2>\r\n          <br />\r\n          <form>\r\n            <div className=\"row\">\r\n              <div className=\"form-group  col-md-6\">\r\n                <FormGroup>\r\n                  <Label>Start Date*</Label>\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control\"\r\n                    name=\"startDate\"\r\n                    id=\"startDate\"\r\n                    value={objValues.startDate}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-6\">\r\n                <FormGroup>\r\n                  <Label>End Date*</Label>\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control\"\r\n                    name=\"endDate\"\r\n                    id=\"endDate\"\r\n                    min={objValues.startDate}\r\n                    max={currentDate}\r\n                    value={objValues.endDate}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-6\">\r\n                <FormGroup>\r\n                  <Label>Facility*</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"organisationUnitId\"\r\n                    id=\"organisationUnitId\"\r\n                    value={objValues.organisationUnitId}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    {facilities.map((value) => (\r\n                      <option key={value.id} value={value.organisationUnitId}>\r\n                        {value.organisationUnitName}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <br />\r\n              <div className=\"row\">\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                  <Button\r\n                    type=\"submit\"\r\n                    content=\"Generate Report\"\r\n                    icon=\"right arrow\"\r\n                    labelPosition=\"right\"\r\n                    style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n                    onClick={handleSubmit}\r\n                    disabled={\r\n                      objValues.organisationUnitId === \"\" ? true : false\r\n                    }\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              {loading && (\r\n                <Message icon>\r\n                                  <Message.Content>\r\n                                        <ProgressComponent/>\r\n                                  </Message.Content>\r\n                                </Message>\r\n              )}\r\n            </div>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TbReport;\r\n","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\PmtctHtsReport.js",["243","244","245","246"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card} from \"@material-ui/core\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { Button} from 'semantic-ui-react'\r\nimport { toast} from \"react-toastify\";\r\nimport FileSaver from \"file-saver\";\r\nimport { Message, Icon } from 'semantic-ui-react'\r\nimport ProgressComponent from \"./ProgressComponent\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\nconst PmtctHtsReport = (props) => {\r\n    let currentDate = new Date().toISOString().split('T')[0]\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false)\r\n    const [facilities, setFacilities] = useState([]);\r\n    const [status, setStatus] = useState(true);\r\n    const [objValues, setObjValues]=useState({\r\n        organisationUnitId:\"\",\r\n        organisationUnitName:\"\",\r\n        startDate:\"\",\r\n        endDate: \"\"\r\n    })\r\n    useEffect(() => {\r\n        Facilities()\r\n      }, []);\r\n    //Get list of WhoStaging\r\n    const Facilities =()=>{\r\n    axios\r\n        .get(`${baseUrl}account`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n        console.log(response.data);\r\n            setFacilities(response.data.applicationUserOrganisationUnits);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });\r\n\r\n    }\r\n\r\n    const handleInputChange = e => {\r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value, organisationUnitName: e.target.innerText});\r\n    }\r\n\r\n    const handleValueChange = () => {\r\n        setStatus(!status)\r\n\r\n        if (status === true) {\r\n          setObjValues ({...objValues,  startDate: \"1980-01-01\", endDate: currentDate});\r\n        } else {\r\n          setObjValues ({...objValues,  startDate: \"\", endDate: currentDate});\r\n        }\r\n\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true)\r\n        console.log(token);\r\n\r\n        axios.post(`${baseUrl}reporting?reportId=82d80564-6d3e-433e-8441-25db7fe1f2af&facilityId=${objValues.organisationUnitId}&startDate=${objValues.startDate}&endDate=${objValues.endDate}`,objValues.organisationUnitId,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}, responseType: 'blob'},\r\n        )\r\n          .then(response => {\r\n            setLoading(false)\r\n            const fileName = `${objValues.organisationUnitName} PMTCT HTS ${currentDate}`\r\n            const responseData = response.data\r\n            let blob = new Blob([responseData], {type: \"application/octet-stream\"});\r\n\r\n            FileSaver.saveAs(blob, `${fileName}.xlsx`);\r\n            toast.success(\"PMTCT Report generated successfully\");\r\n          })\r\n          .catch(error => {\r\n            setLoading(false)\r\n            if(error.response && error.response.data){\r\n                let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                toast.error(errorMessage);\r\n              }\r\n              else{\r\n                toast.error(\"Something went wrong. Please try again...\");\r\n              }\r\n          });\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <Card >\r\n                <CardBody>\r\n\r\n                <h2 style={{color:'#000'}}>PMTCT - HTS REPORT</h2>\r\n                <br/>\r\n                    <form >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>From *</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"startDate\"\r\n                                        id=\"startDate\"\r\n                                        min={\"1980-01-01\"}\r\n                                        max={currentDate}\r\n                                        value={objValues.startDate}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>To *</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"endDate\"\r\n                                        id=\"endDate\"\r\n                                        min={\"1980-01-01\"}\r\n                                        max={currentDate}\r\n                                        //min={objValues.startDate}\r\n                                        value={objValues.endDate}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                 <FormGroup check>\r\n                                  <Label check>\r\n                                    <Input type=\"checkbox\" onChange={handleValueChange}/>\r\n                                     {' '} &nbsp;&nbsp;<span> As at Today.</span>\r\n                                  </Label>\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>Facility*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"organisationUnitId\"\r\n                                        id=\"organisationUnitId\"\r\n                                        value={objValues.organisationUnitId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {facilities.map((value) => (\r\n                                            <option key={value.id} value={value.organisationUnitId}>\r\n                                                {value.organisationUnitName}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n\r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                            <Button type=\"submit\" content='Generate Report' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit} disabled={objValues.organisationUnitId===\"\" ? true : false}/>\r\n                            </div>\r\n                            </div>\r\n\r\n                            {loading && (\r\n                                <Message icon>\r\n                                                  <Message.Content>\r\n                                                        <ProgressComponent/>\r\n                                                  </Message.Content>\r\n                                                </Message>\r\n                            )}\r\n                        </div>\r\n                    </form>\r\n\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PmtctHtsReport","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\BiometricReport.js",["247","248","249","250","251"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card} from \"@material-ui/core\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { Button} from 'semantic-ui-react'\r\nimport { toast} from \"react-toastify\";\r\nimport FileSaver from \"file-saver\";\r\nimport { Message, Icon } from 'semantic-ui-react'\r\nimport ProgressComponent from \"./ProgressComponent\"\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst BiometricReport = (props) => {\r\n    let currentDate = new Date().toISOString().split('T')[0]\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false)\r\n    const [facilities, setFacilities] = useState([]);\r\n    const [objValues, setObjValues]=useState({       \r\n        organisationUnitId:\"\",\r\n        organisationUnitName:\"\",\r\n        startDate:\"\",\r\n        endDate:\"\"\r\n    })\r\n    useEffect(() => {\r\n        Facilities()\r\n      }, []);\r\n    //Get list of WhoStaging\r\n    const Facilities =()=>{\r\n    axios\r\n        .get(`${baseUrl}account`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setFacilities(response.data.applicationUserOrganisationUnits);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });\r\n    \r\n    }\r\n    const handleInputChange = e => {\r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value, organisationUnitName: e.target.innerText});\r\n    }\r\n    const handleSubmit = (e) => {      \r\n        e.preventDefault();\r\n        setLoading(true)\r\n        axios.get(`${baseUrl}reporting/biometric?facilityId=${objValues.organisationUnitId}&startDate=${objValues.startDate}&endDate=${objValues.endDate}`,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}, responseType: 'blob'},\r\n          \r\n          )\r\n              .then(response => {\r\n                setLoading(false)\r\n                const fileName = `${objValues.organisationUnitName} Biometric-Report ${currentDate}`\r\n                const responseData = response.data\r\n                let blob = new Blob([responseData], {type: \"application/octet-stream\"});\r\n                FileSaver.saveAs(blob, `${fileName}.xlsx`);\r\n                toast.success(\" Report generated successful\");\r\n                  //toast.success(\" Save successful\");\r\n                  //props.setActiveContent('recent-history')\r\n\r\n              })\r\n              .catch(error => {\r\n                setLoading(false)\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n              });\r\n            \r\n\r\n    }\r\n    \r\n    \r\n\r\n    return (\r\n      <>\r\n        <Card>\r\n          <CardBody>\r\n            <h2 style={{ color: \"#000\" }}>BIOMETRIC REPORT</h2>\r\n            <br />\r\n            <form>\r\n              <div className=\"row\">\r\n                <div className=\"form-group  col-md-6\">\r\n                  <FormGroup>\r\n                    <Label>Start Date*</Label>\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control\"\r\n                      name=\"startDate\"\r\n                      id=\"startDate\"\r\n                      value={objValues.startDate}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                    />\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group  col-md-6\">\r\n                  <FormGroup>\r\n                    <Label>End Date*</Label>\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control\"\r\n                      name=\"endDate\"\r\n                      id=\"endDate\"\r\n                      min={objValues.startDate}\r\n                      max={currentDate}\r\n                      value={objValues.endDate}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                    />\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group  col-md-6\">\r\n                  <FormGroup>\r\n                    <Label>Facility*</Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"organisationUnitId\"\r\n                      id=\"organisationUnitId\"\r\n                      value={objValues.organisationUnitId}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                    >\r\n                      <option value={\"\"}></option>\r\n                      {facilities.map((value) => (\r\n                        <option key={value.id} value={value.organisationUnitId}>\r\n                          {value.organisationUnitName}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <br />\r\n                <div className=\"row\">\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <Button\r\n                      type=\"submit\"\r\n                      content=\"Generate Report\"\r\n                      icon=\"right arrow\"\r\n                      labelPosition=\"right\"\r\n                      style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n                      onClick={handleSubmit}\r\n                      disabled={\r\n                        objValues.organisationUnitId === \"\" ? true : false\r\n                      }\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                {loading && (\r\n                  <Message icon>\r\n                                    <Message.Content>\r\n                                          <ProgressComponent/>\r\n                                    </Message.Content>\r\n                                  </Message>\r\n\r\n                )}\r\n              </div>\r\n            </form>\r\n          </CardBody>\r\n        </Card>\r\n      </>\r\n    );\r\n};\r\n\r\nexport default BiometricReport","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\IndexElicitation.js",["252","253","254","255"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card} from \"@material-ui/core\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { Button} from 'semantic-ui-react'\r\nimport { toast} from \"react-toastify\";\r\nimport FileSaver from \"file-saver\";\r\nimport { Message, Icon } from 'semantic-ui-react'\r\nimport ProgressComponent from \"./ProgressComponent\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\nconst IndexElicitationReport = (props) => {\r\n    let currentDate = new Date().toISOString().split('T')[0]\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false)\r\n    const [facilities, setFacilities] = useState([]);\r\n    const [status, setStatus] = useState(true);\r\n    const [objValues, setObjValues]=useState({\r\n        organisationUnitId:\"\",\r\n        organisationUnitName:\"\",\r\n        startDate:\"\",\r\n        endDate: \"\"\r\n    })\r\n    useEffect(() => {\r\n        Facilities()\r\n    }, []);\r\n    //Get list of WhoStaging\r\n    const Facilities =()=>{\r\n        axios\r\n            .get(`${baseUrl}account`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                console.log(response.data);\r\n                setFacilities(response.data.applicationUserOrganisationUnits);\r\n            })\r\n            .catch((error) => {\r\n                //console.log(error);\r\n            });\r\n\r\n    }\r\n\r\n    const handleInputChange = e => {\r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value, organisationUnitName: e.target.innerText});\r\n    }\r\n\r\n    const handleValueChange = () => {\r\n        setStatus(!status)\r\n\r\n        if (status === true) {\r\n            setObjValues ({...objValues,  startDate: \"1980-01-01\", endDate: currentDate});\r\n        } else {\r\n            setObjValues ({...objValues,  startDate: \"\", endDate: currentDate});\r\n        }\r\n\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true)\r\n        console.log(token);\r\n\r\n        axios.post(`${baseUrl}index-elicitation-reporting?facilityId=${objValues.organisationUnitId}&startDate=${objValues.startDate}&endDate=${objValues.endDate}`,objValues.organisationUnitId,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}, responseType: 'blob'},\r\n        )\r\n            .then(response => {\r\n                setLoading(false)\r\n                const fileName = `${objValues.organisationUnitName} Index Elicitation ${currentDate}`\r\n                const responseData = response.data\r\n                let blob = new Blob([responseData], {type: \"application/octet-stream\"});\r\n\r\n                FileSaver.saveAs(blob, `${fileName}.xlsx`);\r\n                toast.success(\"Index Elicitation Report generated successfully\");\r\n            })\r\n            .catch(error => {\r\n                setLoading(false)\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                }\r\n                else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                }\r\n            });\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <Card >\r\n                <CardBody>\r\n\r\n                    <h2 style={{color:'#000'}}>INDEX ELICITATION REPORT</h2>\r\n                    <br/>\r\n                    <form >\r\n                        <div className=\"row\">\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>From *</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"startDate\"\r\n                                        id=\"startDate\"\r\n                                        min={\"1980-01-01\"}\r\n                                        max={currentDate}\r\n                                        value={objValues.startDate}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>To *</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"endDate\"\r\n                                        id=\"endDate\"\r\n                                        min={\"1980-01-01\"}\r\n                                        max={currentDate}\r\n                                        //min={objValues.startDate}\r\n                                        value={objValues.endDate}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup check>\r\n                                    <Label check>\r\n                                        <Input type=\"checkbox\" onChange={handleValueChange}/>\r\n                                        {' '} &nbsp;&nbsp;<span> As at Today.</span>\r\n                                    </Label>\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>Facility*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"organisationUnitId\"\r\n                                        id=\"organisationUnitId\"\r\n                                        value={objValues.organisationUnitId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {facilities.map((value) => (\r\n                                            <option key={value.id} value={value.organisationUnitId}>\r\n                                                {value.organisationUnitName}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n\r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <br />\r\n                            <div className=\"row\">\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <Button type=\"submit\" content='Generate Report' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit} disabled={objValues.organisationUnitId===\"\" ? true : false}/>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {loading && (\r\n                                <Message icon>\r\n                                                  <Message.Content>\r\n                                                        <ProgressComponent/>\r\n                                                  </Message.Content>\r\n                                                </Message>\r\n                            )}\r\n                        </div>\r\n                    </form>\r\n\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    );\r\n\r\n};\r\n\r\nexport default IndexElicitationReport","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\PmtctMaternalCohortReport.js",["256","257","258","259"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card} from \"@material-ui/core\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { Button} from 'semantic-ui-react'\r\nimport { toast} from \"react-toastify\";\r\nimport FileSaver from \"file-saver\";\r\nimport { Message, Icon } from 'semantic-ui-react'\r\nimport ProgressComponent from \"./ProgressComponent\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\nconst PmtctMaternalCohortReport = (props) => {\r\n    let currentDate = new Date().toISOString().split('T')[0]\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false)\r\n    const [facilities, setFacilities] = useState([]);\r\n    const [status, setStatus] = useState(true);\r\n    const [objValues, setObjValues]=useState({\r\n        organisationUnitId:\"\",\r\n        organisationUnitName:\"\",\r\n        startDate:\"\",\r\n        endDate: \"\"\r\n    })\r\n    useEffect(() => {\r\n        Facilities()\r\n      }, []);\r\n    //Get list of WhoStaging\r\n    const Facilities =()=>{\r\n    axios\r\n        .get(`${baseUrl}account`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n        console.log(response.data);\r\n            setFacilities(response.data.applicationUserOrganisationUnits);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });\r\n\r\n    }\r\n\r\n    const handleInputChange = e => {\r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value, organisationUnitName: e.target.innerText});\r\n    }\r\n\r\n    const handleValueChange = () => {\r\n        setStatus(!status)\r\n\r\n        if (status === true) {\r\n          setObjValues ({...objValues,  startDate: \"1980-01-01\", endDate: currentDate});\r\n        } else {\r\n          setObjValues ({...objValues,  startDate: \"\", endDate: currentDate});\r\n        }\r\n\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true)\r\n        console.log(token);\r\n\r\n        axios.post(`${baseUrl}reporting?reportId=2b6fe1b9-9af0-4af7-9f59-b9cfcb906158&facilityId=${objValues.organisationUnitId}&startDate=${objValues.startDate}&endDate=${objValues.endDate}`,objValues.organisationUnitId,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}, responseType: 'blob'},\r\n        )\r\n          .then(response => {\r\n            setLoading(false)\r\n            const fileName = `${objValues.organisationUnitName} PMTCT Prematernal Cohort ${currentDate}`\r\n            const responseData = response.data\r\n            let blob = new Blob([responseData], {type: \"application/octet-stream\"});\r\n\r\n            FileSaver.saveAs(blob, `${fileName}.xlsx`);\r\n            toast.success(\"PMTCT Report generated successfully\");\r\n          })\r\n          .catch(error => {\r\n            setLoading(false)\r\n            if(error.response && error.response.data){\r\n                let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                toast.error(errorMessage);\r\n              }\r\n              else{\r\n                toast.error(\"Something went wrong. Please try again...\");\r\n              }\r\n          });\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <Card >\r\n                <CardBody>\r\n\r\n                <h2 style={{color:'#000'}}>PMTCT - Maternal Cohort REPORT</h2>\r\n                <br/>\r\n                    <form >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>From *</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"startDate\"\r\n                                        id=\"startDate\"\r\n                                        min={\"1980-01-01\"}\r\n                                        max={currentDate}\r\n                                        value={objValues.startDate}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>To *</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"endDate\"\r\n                                        id=\"endDate\"\r\n                                        min={\"1980-01-01\"}\r\n                                        max={currentDate}\r\n                                        //min={objValues.startDate}\r\n                                        value={objValues.endDate}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                 <FormGroup check>\r\n                                  <Label check>\r\n                                    <Input type=\"checkbox\" onChange={handleValueChange}/>\r\n                                     {' '} &nbsp;&nbsp;<span> As at Today.</span>\r\n                                  </Label>\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>Facility*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"organisationUnitId\"\r\n                                        id=\"organisationUnitId\"\r\n                                        value={objValues.organisationUnitId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {facilities.map((value) => (\r\n                                            <option key={value.id} value={value.organisationUnitId}>\r\n                                                {value.organisationUnitName}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n\r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                            <Button type=\"submit\" content='Generate Report' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit} disabled={objValues.organisationUnitId===\"\" ? true : false}/>\r\n                            </div>\r\n                            </div>\r\n\r\n                            {loading && (\r\n                                <Message icon>\r\n                                                  <Message.Content>\r\n                                                        <ProgressComponent/>\r\n                                                  </Message.Content>\r\n                                                </Message>\r\n                            )}\r\n                        </div>\r\n                    </form>\r\n\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PmtctMaternalCohortReport","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\api.js",[],"C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\EACReport.js",["260","261","262","263","264"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { FormGroup, Label, CardBody, Spinner, Input, Form } from \"reactstrap\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card } from \"@material-ui/core\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport { token, url as baseUrl } from \"../../../api\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport { toast } from \"react-toastify\";\r\nimport FileSaver from \"file-saver\";\r\nimport { Message, Icon } from \"semantic-ui-react\";\r\nimport ProgressComponent from \"./ProgressComponent\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n    maxWidth: 752,\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n}));\r\n\r\nconst EACReport = (props) => {\r\n  let currentDate = new Date().toISOString().split(\"T\")[0];\r\n  const classes = useStyles();\r\n  const [loading, setLoading] = useState(false);\r\n  const [facilities, setFacilities] = useState([]);\r\n  const [objValues, setObjValues] = useState({\r\n    organisationUnitId: \"\",\r\n    organisationUnitName: \"\",\r\n    startDate: \"\",\r\n    endDate: \"\",\r\n  });\r\n  useEffect(() => {\r\n    Facilities();\r\n  }, []);\r\n  //Get list of WhoStaging\r\n  const Facilities = () => {\r\n    axios\r\n      .get(`${baseUrl}account`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setFacilities(response.data.applicationUserOrganisationUnits);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const handleInputChange = (e) => {\r\n    setObjValues({\r\n      ...objValues,\r\n      [e.target.name]: e.target.value,\r\n      organisationUnitName: e.target.innerText,\r\n    });\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n\r\n    axios\r\n      .get(\r\n        `${baseUrl}reporting/eac-report?facilityId=${objValues.organisationUnitId}&start=${objValues.startDate}&end=${objValues.endDate}`,\r\n        { headers: { Authorization: `Bearer ${token}` }, responseType: \"blob\" }\r\n      )\r\n      .then((response) => {\r\n        setLoading(false);\r\n        const fileName = `${objValues.organisationUnitName} EAC-Report ${currentDate}`;\r\n        const responseData = response.data;\r\n        let blob = new Blob([responseData], {\r\n          type: \"application/octet-stream\",\r\n        });\r\n        FileSaver.saveAs(blob, `${fileName}.xlsx`);\r\n        toast.success(\" Report generated successful\");\r\n        //toast.success(\" Save successful\");\r\n        //props.setActiveContent('recent-history')\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n        if (error.response && error.response.data) {\r\n          let errorMessage =\r\n            error.response.data.apierror &&\r\n            error.response.data.apierror.message !== \"\"\r\n              ? error.response.data.apierror.message\r\n              : \"Something went wrong, please try again\";\r\n          toast.error(errorMessage);\r\n        } else {\r\n          toast.error(\"Something went wrong. Please try again...\");\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardBody>\r\n          <h2 style={{ color: \"#000\" }}>EAC REPORT</h2>\r\n          <br />\r\n          <form>\r\n            <div className=\"row\">\r\n              <div className=\"form-group  col-md-6\">\r\n                <FormGroup>\r\n                  <Label>Start Date*</Label>\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control\"\r\n                    name=\"startDate\"\r\n                    id=\"startDate\"\r\n                    value={objValues.startDate}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-6\">\r\n                <FormGroup>\r\n                  <Label>End Date*</Label>\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control\"\r\n                    name=\"endDate\"\r\n                    id=\"endDate\"\r\n                    min={objValues.startDate}\r\n                    max={currentDate}\r\n                    value={objValues.endDate}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-6\">\r\n                <FormGroup>\r\n                  <Label>Facility*</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"organisationUnitId\"\r\n                    id=\"organisationUnitId\"\r\n                    value={objValues.organisationUnitId}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    {facilities.map((value) => (\r\n                      <option key={value.id} value={value.organisationUnitId}>\r\n                        {value.organisationUnitName}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <br />\r\n              <div className=\"row\">\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                  <Button\r\n                    type=\"submit\"\r\n                    content=\"Generate Report\"\r\n                    icon=\"right arrow\"\r\n                    labelPosition=\"right\"\r\n                    style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n                    onClick={handleSubmit}\r\n                    disabled={\r\n                      objValues.organisationUnitId === \"\" ? true : false\r\n                    }\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              {loading && (\r\n                <Message icon>\r\n                                  <Message.Content>\r\n                                        <ProgressComponent/>\r\n                                  </Message.Content>\r\n                                </Message>\r\n              )}\r\n            </div>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EACReport;\r\n","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\NcdReport.js",["265","266","267","268","269"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { FormGroup, Label, CardBody, Spinner, Input, Form } from \"reactstrap\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card } from \"@material-ui/core\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport { token, url as baseUrl } from \"../../../api\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport { toast } from \"react-toastify\";\r\nimport FileSaver from \"file-saver\";\r\nimport { Message, Icon } from \"semantic-ui-react\";\r\nimport ProgressComponent from \"./ProgressComponent\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n    maxWidth: 752,\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n}));\r\n\r\nconst NcdReport = (props) => {\r\n  let currentDate = new Date().toISOString().split(\"T\")[0];\r\n  const classes = useStyles();\r\n  const [loading, setLoading] = useState(false);\r\n  const [facilities, setFacilities] = useState([]);\r\n  const [objValues, setObjValues] = useState({\r\n    organisationUnitId: \"\",\r\n    organisationUnitName: \"\",\r\n    startDate: \"\",\r\n    endDate: \"\",\r\n  });\r\n  useEffect(() => {\r\n    Facilities();\r\n  }, []);\r\n  //Get list of WhoStaging\r\n  const Facilities = () => {\r\n    axios\r\n      .get(`${baseUrl}account`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setFacilities(response.data.applicationUserOrganisationUnits);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const handleInputChange = (e) => {\r\n    setObjValues({\r\n      ...objValues,\r\n      [e.target.name]: e.target.value,\r\n      organisationUnitName: e.target.innerText,\r\n    });\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n\r\n    axios\r\n      .get(\r\n        `${baseUrl}reporting/ncd-report?facilityId=${objValues.organisationUnitId}&start=${objValues.startDate}&end=${objValues.endDate}`,\r\n        { headers: { Authorization: `Bearer ${token}` }, responseType: \"blob\" }\r\n      )\r\n      .then((response) => {\r\n        setLoading(false);\r\n        const fileName = `${objValues.organisationUnitName} NCD-Report ${currentDate}`;\r\n        const responseData = response.data;\r\n        let blob = new Blob([responseData], {\r\n          type: \"application/octet-stream\",\r\n        });\r\n        FileSaver.saveAs(blob, `${fileName}.xlsx`);\r\n        toast.success(\" Report generated successful\");\r\n        //toast.success(\" Save successful\");\r\n        //props.setActiveContent('recent-history')\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n        if (error.response && error.response.data) {\r\n          let errorMessage =\r\n            error.response.data.apierror &&\r\n            error.response.data.apierror.message !== \"\"\r\n              ? error.response.data.apierror.message\r\n              : \"Something went wrong, please try again\";\r\n          toast.error(errorMessage);\r\n        } else {\r\n          toast.error(\"Something went wrong. Please try again...\");\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardBody>\r\n          <h2 style={{ color: \"#000\" }}>NCD REPORT</h2>\r\n          <br />\r\n          <form>\r\n            <div className=\"row\">\r\n              <div className=\"form-group  col-md-6\">\r\n                <FormGroup>\r\n                  <Label>Start Date*</Label>\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control\"\r\n                    name=\"startDate\"\r\n                    id=\"startDate\"\r\n                    value={objValues.startDate}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-6\">\r\n                <FormGroup>\r\n                  <Label>End Date*</Label>\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control\"\r\n                    name=\"endDate\"\r\n                    id=\"endDate\"\r\n                    min={objValues.startDate}\r\n                    max={currentDate}\r\n                    value={objValues.endDate}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-6\">\r\n                <FormGroup>\r\n                  <Label>Facility*</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"organisationUnitId\"\r\n                    id=\"organisationUnitId\"\r\n                    value={objValues.organisationUnitId}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    {facilities.map((value) => (\r\n                      <option key={value.id} value={value.organisationUnitId}>\r\n                        {value.organisationUnitName}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <br />\r\n              <div className=\"row\">\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                  <Button\r\n                    type=\"submit\"\r\n                    content=\"Generate Report\"\r\n                    icon=\"right arrow\"\r\n                    labelPosition=\"right\"\r\n                    style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n                    onClick={handleSubmit}\r\n                    disabled={\r\n                      objValues.organisationUnitId === \"\" ? true : false\r\n                    }\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              {loading && (\r\n                <Message icon>\r\n                                  <Message.Content>\r\n                                        <ProgressComponent/>\r\n                                  </Message.Content>\r\n                                </Message>\r\n              )}\r\n            </div>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NcdReport;","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\AhdReport.js",["270","271","272","273"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card} from \"@material-ui/core\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { Button} from 'semantic-ui-react'\r\nimport { toast} from \"react-toastify\";\r\nimport FileSaver from \"file-saver\";\r\nimport { Message, Icon } from 'semantic-ui-react'\r\nimport ProgressComponent from \"./ProgressComponent\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\nconst AhdReport = (props) => {\r\n    let currentDate = new Date().toISOString().split('T')[0]\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false)\r\n    const [facilities, setFacilities] = useState([]);\r\n    const [status, setStatus] = useState(true);\r\n    const [objValues, setObjValues]=useState({\r\n        organisationUnitId:\"\",\r\n        organisationUnitName:\"\",\r\n        startDate:\"\",\r\n        endDate: \"\"\r\n    })\r\n    useEffect(() => {\r\n        Facilities()\r\n      }, []);\r\n    //Get list of WhoStaging\r\n    const Facilities =()=>{\r\n    axios\r\n        .get(`${baseUrl}account`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n        console.log(response.data);\r\n            setFacilities(response.data.applicationUserOrganisationUnits);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });\r\n\r\n    }\r\n\r\n    const handleInputChange = e => {\r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value, organisationUnitName: e.target.innerText});\r\n    }\r\n\r\n    const handleValueChange = () => {\r\n        setStatus(!status)\r\n\r\n        if (status === true) {\r\n          setObjValues ({...objValues,  startDate: \"1980-01-01\", endDate: currentDate});\r\n        } else {\r\n          setObjValues ({...objValues,  startDate: \"\", endDate: currentDate});\r\n        }\r\n\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true)\r\n        console.log(token);\r\n\r\n        axios.post(`${baseUrl}ahd-reporting?&facilityId=${objValues.organisationUnitId}&startDate=${objValues.startDate}&endDate=${objValues.endDate}`,objValues.organisationUnitId,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}, responseType: 'blob'},\r\n        )\r\n          .then(response => {\r\n            setLoading(false)\r\n            const fileName = `${objValues.organisationUnitName} AHD ${currentDate}`\r\n            const responseData = response.data\r\n            let blob = new Blob([responseData], {type: \"application/octet-stream\"});\r\n\r\n            FileSaver.saveAs(blob, `${fileName}.xlsx`);\r\n            toast.success(\"AHD Report generated successfully\");\r\n          })\r\n          .catch(error => {\r\n            setLoading(false)\r\n            if(error.response && error.response.data){\r\n                let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                toast.error(errorMessage);\r\n              }\r\n              else{\r\n                toast.error(\"Something went wrong. Please try again...\");\r\n              }\r\n          });\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <Card >\r\n                <CardBody>\r\n\r\n                <h2 style={{color:'#000'}}>AHD REPORT</h2>\r\n                <br/>\r\n                    <form >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>From *</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"startDate\"\r\n                                        id=\"startDate\"\r\n                                        min={\"1980-01-01\"}\r\n                                        max={currentDate}\r\n                                        value={objValues.startDate}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>To *</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"endDate\"\r\n                                        id=\"endDate\"\r\n                                        min={\"1980-01-01\"}\r\n                                        max={currentDate}\r\n                                        //min={objValues.startDate}\r\n                                        value={objValues.endDate}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                 <FormGroup check>\r\n                                  <Label check>\r\n                                    <Input type=\"checkbox\" onChange={handleValueChange}/>\r\n                                     {' '} &nbsp;&nbsp;<span> As at Today.</span>\r\n                                  </Label>\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>Facility*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"organisationUnitId\"\r\n                                        id=\"organisationUnitId\"\r\n                                        value={objValues.organisationUnitId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {facilities.map((value) => (\r\n                                            <option key={value.id} value={value.organisationUnitId}>\r\n                                                {value.organisationUnitName}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n\r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                            <Button type=\"submit\" content='Generate Report' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit} disabled={objValues.organisationUnitId===\"\" ? true : false}/>\r\n                            </div>\r\n                            </div>\r\n\r\n                            {loading && (\r\n                                <Message icon>\r\n                                 <Message.Content>\r\n                                       <ProgressComponent/>\r\n                                 </Message.Content>\r\n                               </Message>\r\n                            )}\r\n                        </div>\r\n                    </form>\r\n\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AhdReport","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\PrepLongitudinalReport.js",["274","275","276","277"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card} from \"@material-ui/core\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { Button} from 'semantic-ui-react'\r\nimport { toast} from \"react-toastify\";\r\nimport FileSaver from \"file-saver\";\r\nimport { Message, Icon } from 'semantic-ui-react'\r\nimport ProgressComponent from \"./ProgressComponent\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\nconst PrepLongitudinalReport = (props) => {\r\n    let currentDate = new Date().toISOString().split('T')[0]\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false)\r\n    const [facilities, setFacilities] = useState([]);\r\n    const [status, setStatus] = useState(true);\r\n    const [objValues, setObjValues]=useState({\r\n        organisationUnitId:\"\",\r\n        organisationUnitName:\"\",\r\n        startDate:\"\",\r\n        endDate: \"\"\r\n    })\r\n    useEffect(() => {\r\n        Facilities()\r\n      }, []);\r\n    //Get list of WhoStaging\r\n    const Facilities =()=>{\r\n    axios\r\n        .get(`${baseUrl}account`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            console.log(response.data);\r\n            setFacilities(response.data.applicationUserOrganisationUnits);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });\r\n    }\r\n\r\n    const handleInputChange = e => {\r\n        //1980-01-01\r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value, organisationUnitName: e.target.innerText});\r\n    }\r\n\r\n    const handleValueChange = () => {\r\n        setStatus(!status)\r\n\r\n        if (status === true) {\r\n          setObjValues ({...objValues,  startDate: \"1980-01-01\", endDate: currentDate});\r\n        } else {\r\n          setObjValues ({...objValues,  startDate: \"\", endDate: currentDate});\r\n        }\r\n\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true)\r\n        //console.log(token);\r\n\r\n        axios.post(`${baseUrl}longitudinal-prep?facilityId=${objValues.organisationUnitId}&startDate=${objValues.startDate}&endDate=${objValues.endDate}`,objValues.organisationUnitId,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}, responseType: 'blob'},\r\n        )\r\n          .then(response => {\r\n            setLoading(false)\r\n            const fileName =`${objValues.organisationUnitName} Longitudinal Prep ${currentDate}`\r\n            const responseData = response.data\r\n            let blob = new Blob([responseData], {type: \"application/octet-stream\"});\r\n\r\n            FileSaver.saveAs(blob, `${fileName}.xlsx`);\r\n            toast.success(\"Prep Longitudinal Report generated successfully\");\r\n          })\r\n          .catch(error => {\r\n            setLoading(false)\r\n            if(error.response && error.response.data){\r\n                let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                toast.error(errorMessage);\r\n              }\r\n              else{\r\n                toast.error(\"Something went wrong. Please try again...\");\r\n              }\r\n          });\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <Card >\r\n                <CardBody>\r\n\r\n                <h2 style={{color:'#000'}}>Prep-Longitudinal REPORT</h2>\r\n                <br/>\r\n                    <form >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>From *</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"startDate\"\r\n                                        id=\"startDate\"\r\n                                        min={\"1980-01-01\"}\r\n                                        max={currentDate}\r\n                                        value={objValues.startDate}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>To *</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"endDate\"\r\n                                        id=\"endDate\"\r\n                                        min={\"1980-01-01\"}\r\n                                        max={currentDate}\r\n                                        //min={objValues.startDate}\r\n                                        value={objValues.endDate}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                 <FormGroup check>\r\n                                  <Label check>\r\n                                    <Input type=\"checkbox\" onChange={handleValueChange}/>\r\n                                     {' '} &nbsp;&nbsp;<span> As at Today.</span>\r\n                                  </Label>\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>Facility*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"organisationUnitId\"\r\n                                        id=\"organisationUnitId\"\r\n                                        value={objValues.organisationUnitId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {facilities.map((value) => (\r\n                                            <option key={value.id} value={value.organisationUnitId}>\r\n                                                {value.organisationUnitName}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n\r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                            <Button type=\"submit\" content='Generate Report' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit} disabled={objValues.organisationUnitId===\"\" ? true : false}/>\r\n                            </div>\r\n                            </div>\r\n\r\n                            {loading && (\r\n                                <Message icon>\r\n                                                  <Message.Content>\r\n                                                        <ProgressComponent/>\r\n                                                  </Message.Content>\r\n                                                </Message>\r\n                            )}\r\n                        </div>\r\n                    </form>\r\n\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PrepLongitudinalReport","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\MhpssReport.js",["278","279","280","281"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card} from \"@material-ui/core\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { Button} from 'semantic-ui-react'\r\nimport { toast} from \"react-toastify\";\r\nimport FileSaver from \"file-saver\";\r\nimport { Message, Icon } from 'semantic-ui-react'\r\nimport ProgressComponent from \"./ProgressComponent\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\nconst MhpssReport = (props) => {\r\n    let currentDate = new Date().toISOString().split('T')[0]\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false)\r\n    const [facilities, setFacilities] = useState([]);\r\n    const [status, setStatus] = useState(true);\r\n    const [objValues, setObjValues]=useState({\r\n        organisationUnitId:\"\",\r\n        organisationUnitName:\"\",\r\n        startDate:\"\",\r\n        endDate: \"\"\r\n    })\r\n    useEffect(() => {\r\n        Facilities()\r\n      }, []);\r\n    //Get list of WhoStaging\r\n    const Facilities =()=>{\r\n    axios\r\n        .get(`${baseUrl}account`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            console.log(response.data);\r\n            setFacilities(response.data.applicationUserOrganisationUnits);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });\r\n    }\r\n\r\n    const handleInputChange = e => {\r\n        //1980-01-01\r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value, organisationUnitName: e.target.innerText});\r\n    }\r\n\r\n    const handleValueChange = () => {\r\n        setStatus(!status)\r\n\r\n        if (status === true) {\r\n          setObjValues ({...objValues,  startDate: \"1980-01-01\", endDate: currentDate});\r\n        } else {\r\n          setObjValues ({...objValues,  startDate: \"\", endDate: currentDate});\r\n        }\r\n\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true)\r\n        //console.log(token);\r\n\r\n        axios.post(`${baseUrl}reporting?reportId=e5f5685b-d355-498f-bc71-191b4037726c&facilityId=${objValues.organisationUnitId}&startDate=${objValues.startDate}&endDate=${objValues.endDate}`,objValues.organisationUnitId,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}, responseType: 'blob'},\r\n        )\r\n          .then(response => {\r\n            setLoading(false)\r\n            const fileName =`${objValues.organisationUnitName} Mhpss Report ${currentDate}`\r\n            const responseData = response.data\r\n            let blob = new Blob([responseData], {type: \"application/octet-stream\"});\r\n\r\n            FileSaver.saveAs(blob, `${fileName}.xlsx`);\r\n            toast.success(\"MHPSS Report generated successfully\");\r\n          })\r\n          .catch(error => {\r\n            setLoading(false)\r\n            if(error.response && error.response.data){\r\n                let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                toast.error(errorMessage);\r\n              }\r\n              else{\r\n                toast.error(\"Something went wrong. Please try again...\");\r\n              }\r\n          });\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <Card >\r\n                <CardBody>\r\n\r\n                <h2 style={{color:'#000'}}>MHPSS REPORT</h2>\r\n                <br/>\r\n                    <form >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>From *</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"startDate\"\r\n                                        id=\"startDate\"\r\n                                        min={\"1980-01-01\"}\r\n                                        max={currentDate}\r\n                                        value={objValues.startDate}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>To *</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"endDate\"\r\n                                        id=\"endDate\"\r\n                                        min={\"1980-01-01\"}\r\n                                        max={currentDate}\r\n                                        //min={objValues.startDate}\r\n                                        value={objValues.endDate}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                 <FormGroup check>\r\n                                  <Label check>\r\n                                    <Input type=\"checkbox\" onChange={handleValueChange}/>\r\n                                     {' '} &nbsp;&nbsp;<span> As at Today.</span>\r\n                                  </Label>\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>Facility*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"organisationUnitId\"\r\n                                        id=\"organisationUnitId\"\r\n                                        value={objValues.organisationUnitId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {facilities.map((value) => (\r\n                                            <option key={value.id} value={value.organisationUnitId}>\r\n                                                {value.organisationUnitName}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n\r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                            <Button type=\"submit\" content='Generate Report' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit} disabled={objValues.organisationUnitId===\"\" ? true : false}/>\r\n                            </div>\r\n                            </div>\r\n\r\n                            {loading && (\r\n                                <Message icon>\r\n                                                  <Message.Content>\r\n                                                        <ProgressComponent/>\r\n                                                  </Message.Content>\r\n                                                </Message>\r\n                            )}\r\n                        </div>\r\n                    </form>\r\n\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MhpssReport","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\KpPrevReport.js",["282","283","284","285"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card} from \"@material-ui/core\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { Button} from 'semantic-ui-react'\r\nimport { toast} from \"react-toastify\";\r\nimport FileSaver from \"file-saver\";\r\nimport { Message, Icon } from 'semantic-ui-react'\r\nimport ProgressComponent from \"./ProgressComponent\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\nconst KpPrevReport = (props) => {\r\n    let currentDate = new Date().toISOString().split('T')[0]\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false)\r\n    const [facilities, setFacilities] = useState([]);\r\n    const [status, setStatus] = useState(true);\r\n    const [objValues, setObjValues]=useState({\r\n        organisationUnitId:\"\",\r\n        organisationUnitName:\"\",\r\n        startDate:\"\",\r\n        endDate: \"\"\r\n    })\r\n    useEffect(() => {\r\n        Facilities()\r\n      }, []);\r\n    //Get list of WhoStaging\r\n    const Facilities =()=>{\r\n    axios\r\n        .get(`${baseUrl}account`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            console.log(response.data);\r\n            setFacilities(response.data.applicationUserOrganisationUnits);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });\r\n    }\r\n\r\n    const handleInputChange = e => {\r\n        //1980-01-01\r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value, organisationUnitName: e.target.innerText});\r\n    }\r\n\r\n    const handleValueChange = () => {\r\n        setStatus(!status)\r\n\r\n        if (status === true) {\r\n          setObjValues ({...objValues,  startDate: \"1980-01-01\", endDate: currentDate});\r\n        } else {\r\n          setObjValues ({...objValues,  startDate: \"\", endDate: currentDate});\r\n        }\r\n\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true)\r\n        //console.log(token);\r\n\r\n        axios.post(`${baseUrl}kp-prev-report?facilityId=${objValues.organisationUnitId}&startDate=${objValues.startDate}&endDate=${objValues.endDate}`,objValues.organisationUnitId,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}, responseType: 'blob'},\r\n        )\r\n          .then(response => {\r\n            setLoading(false)\r\n            const fileName =`${objValues.organisationUnitName} Kp_Prev ${currentDate}`\r\n            const responseData = response.data\r\n            let blob = new Blob([responseData], {type: \"application/octet-stream\"});\r\n\r\n            FileSaver.saveAs(blob, `${fileName}.xlsx`);\r\n            toast.success(\"Kp Prev Report generated successfully\");\r\n          })\r\n          .catch(error => {\r\n            setLoading(false)\r\n            if(error.response && error.response.data){\r\n                let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                toast.error(errorMessage);\r\n              }\r\n              else{\r\n                toast.error(\"Something went wrong. Please try again...\");\r\n              }\r\n          });\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <Card >\r\n                <CardBody>\r\n\r\n                <h2 style={{color:'#000'}}>Kp Prev REPORT</h2>\r\n                <br/>\r\n                    <form >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>From *</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"startDate\"\r\n                                        id=\"startDate\"\r\n                                        min={\"1980-01-01\"}\r\n                                        max={currentDate}\r\n                                        value={objValues.startDate}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>To *</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"endDate\"\r\n                                        id=\"endDate\"\r\n                                        min={\"1980-01-01\"}\r\n                                        max={currentDate}\r\n                                        //min={objValues.startDate}\r\n                                        value={objValues.endDate}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                 <FormGroup check>\r\n                                  <Label check>\r\n                                    <Input type=\"checkbox\" onChange={handleValueChange}/>\r\n                                     {' '} &nbsp;&nbsp;<span> As at Today.</span>\r\n                                  </Label>\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>Facility*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"organisationUnitId\"\r\n                                        id=\"organisationUnitId\"\r\n                                        value={objValues.organisationUnitId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {facilities.map((value) => (\r\n                                            <option key={value.id} value={value.organisationUnitId}>\r\n                                                {value.organisationUnitName}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n\r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                            <Button type=\"submit\" content='Generate Report' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit} disabled={objValues.organisationUnitId===\"\" ? true : false}/>\r\n                            </div>\r\n                            </div>\r\n\r\n                            {loading && (\r\n                                <Message icon>\r\n                                                  <Message.Content>\r\n                                                        <ProgressComponent/>\r\n                                                  </Message.Content>\r\n                                                </Message>\r\n                            )}\r\n                        </div>\r\n                    </form>\r\n\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default KpPrevReport","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\HtsRegister.js",["286","287","288","289"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card} from \"@material-ui/core\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { Button} from 'semantic-ui-react'\r\nimport { toast} from \"react-toastify\";\r\nimport FileSaver from \"file-saver\";\r\nimport { Message, Icon } from 'semantic-ui-react'\r\nimport ProgressComponent from \"./ProgressComponent\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\nconst PrepLongitudinalReport = (props) => {\r\n    let currentDate = new Date().toISOString().split('T')[0]\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false)\r\n    const [facilities, setFacilities] = useState([]);\r\n    const [status, setStatus] = useState(true);\r\n    const [objValues, setObjValues]=useState({\r\n        organisationUnitId:\"\",\r\n        organisationUnitName:\"\",\r\n        startDate:\"\",\r\n        endDate: \"\"\r\n    })\r\n    useEffect(() => {\r\n        Facilities()\r\n      }, []);\r\n    //Get list of WhoStaging\r\n    const Facilities =()=>{\r\n    axios\r\n        .get(`${baseUrl}account`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            // console.log(response.data);\r\n            setFacilities(response.data.applicationUserOrganisationUnits);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });\r\n    }\r\n\r\n    const handleInputChange = e => {\r\n        //1980-01-01\r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value, organisationUnitName: e.target.innerText});\r\n    }\r\n\r\n    const handleValueChange = () => {\r\n        setStatus(!status)\r\n\r\n        if (status === true) {\r\n          setObjValues ({...objValues,  startDate: \"1980-01-01\", endDate: currentDate});\r\n        } else {\r\n          setObjValues ({...objValues,  startDate: \"\", endDate: currentDate});\r\n        }\r\n\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true)\r\n        //console.log(token);\r\n\r\n        axios.post(`${baseUrl}hts-register?facilityId=${objValues.organisationUnitId}&startDate=${objValues.startDate}&endDate=${objValues.endDate}`,objValues.organisationUnitId,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}, responseType: 'blob'},\r\n        )\r\n          .then(response => {\r\n            setLoading(false)\r\n            const fileName =`${objValues.organisationUnitName} HTS Register ${currentDate}`\r\n            const responseData = response.data\r\n            let blob = new Blob([responseData], {type: \"application/octet-stream\"});\r\n\r\n            FileSaver.saveAs(blob, `${fileName}.xlsx`);\r\n            toast.success(\"HTS Register generated successfully\");\r\n          })\r\n          .catch(error => {\r\n            setLoading(false)\r\n            if(error.response && error.response.data){\r\n                let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                toast.error(errorMessage);\r\n              }\r\n              else{\r\n                toast.error(\"Something went wrong. Please try again...\");\r\n              }\r\n          });\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <Card >\r\n                <CardBody>\r\n\r\n                <h2 style={{color:'#000'}}>HTS REGISTER</h2>\r\n                <br/>\r\n                    <form >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>From *</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"startDate\"\r\n                                        id=\"startDate\"\r\n                                        min={\"1980-01-01\"}\r\n                                        max={currentDate}\r\n                                        value={objValues.startDate}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>To *</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"endDate\"\r\n                                        id=\"endDate\"\r\n                                        min={\"1980-01-01\"}\r\n                                        max={currentDate}\r\n                                        //min={objValues.startDate}\r\n                                        value={objValues.endDate}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                 <FormGroup check>\r\n                                  <Label check>\r\n                                    <Input type=\"checkbox\" onChange={handleValueChange}/>\r\n                                     {' '} &nbsp;&nbsp;<span> As at Today.</span>\r\n                                  </Label>\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>Facility*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"organisationUnitId\"\r\n                                        id=\"organisationUnitId\"\r\n                                        value={objValues.organisationUnitId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {facilities.map((value) => (\r\n                                            <option key={value.id} value={value.organisationUnitId}>\r\n                                                {value.organisationUnitName}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n\r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                            <Button type=\"submit\" content='Generate Report' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit} disabled={objValues.organisationUnitId===\"\" ? true : false}/>\r\n                            </div>\r\n                            </div>\r\n\r\n                            {loading && (\r\n                                <Message icon>\r\n                                                  <Message.Content>\r\n                                                        <ProgressComponent/>\r\n                                                  </Message.Content>\r\n                                                </Message>\r\n                            )}\r\n                        </div>\r\n                    </form>\r\n\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PrepLongitudinalReport","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\HIVSTReport.js",["290","291","292","293"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card} from \"@material-ui/core\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { Button} from 'semantic-ui-react'\r\nimport { toast} from \"react-toastify\";\r\nimport FileSaver from \"file-saver\";\r\nimport { Message, Icon } from 'semantic-ui-react'\r\nimport ProgressComponent from \"./ProgressComponent\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\nconst HIVSTReport = (props) => {\r\n    let currentDate = new Date().toISOString().split('T')[0]\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false)\r\n    const [facilities, setFacilities] = useState([]);\r\n    const [status, setStatus] = useState(true);\r\n    const [objValues, setObjValues]=useState({\r\n        organisationUnitId:\"\",\r\n        organisationUnitName:\"\",\r\n        startDate:\"\",\r\n        endDate: \"\"\r\n    })\r\n    useEffect(() => {\r\n        Facilities()\r\n      }, []);\r\n    //Get list of WhoStaging\r\n    const Facilities =()=>{\r\n    axios\r\n        .get(`${baseUrl}account`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            console.log(response.data);\r\n            setFacilities(response.data.applicationUserOrganisationUnits);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });\r\n    }\r\n\r\n    const handleInputChange = e => {\r\n        //1980-01-01\r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value, organisationUnitName: e.target.innerText});\r\n    }\r\n\r\n    const handleValueChange = () => {\r\n        setStatus(!status)\r\n\r\n        if (status === true) {\r\n          setObjValues ({...objValues,  startDate: \"1980-01-01\", endDate: currentDate});\r\n        } else {\r\n          setObjValues ({...objValues,  startDate: \"\", endDate: currentDate});\r\n        }\r\n\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true)\r\n        //console.log(token);\r\n\r\n        axios.post(`${baseUrl}hivst-report?facilityId=${objValues.organisationUnitId}&startDate=${objValues.startDate}&endDate=${objValues.endDate}`,objValues.organisationUnitId,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}, responseType: 'blob'},\r\n        )\r\n          .then(response => {\r\n            setLoading(false)\r\n            const fileName =`${objValues.organisationUnitName} HIVST Report ${currentDate}`\r\n            const responseData = response.data\r\n            let blob = new Blob([responseData], {type: \"application/octet-stream\"});\r\n\r\n            FileSaver.saveAs(blob, `${fileName}.xlsx`);\r\n            toast.success(\"HIVST Report generated successfully\");\r\n          })\r\n          .catch(error => {\r\n            setLoading(false)\r\n            if(error.response && error.response.data){\r\n                let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                toast.error(errorMessage);\r\n              }\r\n              else{\r\n                toast.error(\"Something went wrong. Please try again...\");\r\n              }\r\n          });\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <Card >\r\n                <CardBody>\r\n\r\n                <h2 style={{color:'#000'}}>HIVST REPORT</h2>\r\n                <br/>\r\n                    <form >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>From *</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"startDate\"\r\n                                        id=\"startDate\"\r\n                                        min={\"1980-01-01\"}\r\n                                        max={currentDate}\r\n                                        value={objValues.startDate}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>To *</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"endDate\"\r\n                                        id=\"endDate\"\r\n                                        min={\"1980-01-01\"}\r\n                                        max={currentDate}\r\n                                        //min={objValues.startDate}\r\n                                        value={objValues.endDate}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                 <FormGroup check>\r\n                                  <Label check>\r\n                                    <Input type=\"checkbox\" onChange={handleValueChange}/>\r\n                                     {' '} &nbsp;&nbsp;<span> As at Today.</span>\r\n                                  </Label>\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>Facility*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"organisationUnitId\"\r\n                                        id=\"organisationUnitId\"\r\n                                        value={objValues.organisationUnitId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {facilities.map((value) => (\r\n                                            <option key={value.id} value={value.organisationUnitId}>\r\n                                                {value.organisationUnitName}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n\r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                            <Button type=\"submit\" content='Generate Report' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit} disabled={objValues.organisationUnitId===\"\" ? true : false}/>\r\n                            </div>\r\n                            </div>\r\n\r\n                            {loading && (\r\n                                <Message icon>\r\n                                                  <Message.Content>\r\n                                                        <ProgressComponent/>\r\n                                                  </Message.Content>\r\n                                                </Message>\r\n                            )}\r\n                        </div>\r\n                    </form>\r\n\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default HIVSTReport","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\HTSIndexReport.js",["294","295","296","297"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card} from \"@material-ui/core\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { Button} from 'semantic-ui-react'\r\nimport { toast} from \"react-toastify\";\r\nimport FileSaver from \"file-saver\";\r\nimport { Message, Icon } from 'semantic-ui-react'\r\nimport ProgressComponent from \"./ProgressComponent\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\nconst HTSIndexReport = (props) => {\r\n    let currentDate = new Date().toISOString().split('T')[0]\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false)\r\n    const [facilities, setFacilities] = useState([]);\r\n    const [status, setStatus] = useState(true);\r\n    const [objValues, setObjValues]=useState({\r\n        organisationUnitId:\"\",\r\n        organisationUnitName:\"\",\r\n        startDate:\"\",\r\n        endDate: \"\"\r\n    })\r\n    useEffect(() => {\r\n        Facilities()\r\n      }, []);\r\n    //Get list of WhoStaging\r\n    const Facilities =()=>{\r\n    axios\r\n        .get(`${baseUrl}account`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            console.log(response.data);\r\n            setFacilities(response.data.applicationUserOrganisationUnits);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });\r\n    }\r\n\r\n    const handleInputChange = e => {\r\n        //1980-01-01\r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value, organisationUnitName: e.target.innerText});\r\n    }\r\n\r\n    const handleValueChange = () => {\r\n        setStatus(!status)\r\n\r\n        if (status === true) {\r\n          setObjValues ({...objValues,  startDate: \"1980-01-01\", endDate: currentDate});\r\n        } else {\r\n          setObjValues ({...objValues,  startDate: \"\", endDate: currentDate});\r\n        }\r\n\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true)\r\n        //console.log(token);\r\n\r\n        axios.post(`${baseUrl}hts-index-report?facilityId=${objValues.organisationUnitId}&startDate=${objValues.startDate}&endDate=${objValues.endDate}`,objValues.organisationUnitId,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}, responseType: 'blob'},\r\n        )\r\n          .then(response => {\r\n            setLoading(false)\r\n            const fileName =`${objValues.organisationUnitName} HTS Index Report ${currentDate}`\r\n            const responseData = response.data\r\n            let blob = new Blob([responseData], {type: \"application/octet-stream\"});\r\n\r\n            FileSaver.saveAs(blob, `${fileName}.xlsx`);\r\n            toast.success(\"HTS Index Report generated successfully\");\r\n          })\r\n          .catch(error => {\r\n            setLoading(false)\r\n            if(error.response && error.response.data){\r\n                let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                toast.error(errorMessage);\r\n              }\r\n              else{\r\n                toast.error(\"Something went wrong. Please try again...\");\r\n              }\r\n          });\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <Card >\r\n                <CardBody>\r\n\r\n                <h2 style={{color:'#000'}}>HTS Index REPORT</h2>\r\n                <br/>\r\n                    <form >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>From *</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"startDate\"\r\n                                        id=\"startDate\"\r\n                                        min={\"1980-01-01\"}\r\n                                        max={currentDate}\r\n                                        value={objValues.startDate}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>To *</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"endDate\"\r\n                                        id=\"endDate\"\r\n                                        min={\"1980-01-01\"}\r\n                                        max={currentDate}\r\n                                        //min={objValues.startDate}\r\n                                        value={objValues.endDate}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                 <FormGroup check>\r\n                                  <Label check>\r\n                                    <Input type=\"checkbox\" onChange={handleValueChange}/>\r\n                                     {' '} &nbsp;&nbsp;<span> As at Today.</span>\r\n                                  </Label>\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>Facility*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"organisationUnitId\"\r\n                                        id=\"organisationUnitId\"\r\n                                        value={objValues.organisationUnitId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {facilities.map((value) => (\r\n                                            <option key={value.id} value={value.organisationUnitId}>\r\n                                                {value.organisationUnitName}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n\r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                            <Button type=\"submit\" content='Generate Report' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit} disabled={objValues.organisationUnitId===\"\" ? true : false}/>\r\n                            </div>\r\n                            </div>\r\n\r\n                            {loading && (\r\n                                <Message icon>\r\n                                                  <Message.Content>\r\n                                                        <ProgressComponent/>\r\n                                                  </Message.Content>\r\n                                                </Message>\r\n                            )}\r\n                        </div>\r\n                    </form>\r\n\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default HTSIndexReport","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\CustomReport.js",["298","299","300","301","302","303","304","305","306","307","308","309"],"import React, {useCallback, useEffect, useState, forwardRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport { FormGroup, Label, CardBody, Spinner, Input, Form } from \"reactstrap\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card } from \"@material-ui/core\";\r\nimport { token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { Button } from 'semantic-ui-react'\r\nimport { toast } from \"react-toastify\";\r\nimport FileSaver from \"file-saver\";\r\nimport { Message, Icon, TextArea, Dropdown } from 'semantic-ui-react'\r\nimport ScrollableDiv from \"../Shared/Scrollable\"\r\nimport ProgressComponent from \"./ProgressComponent\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error: {\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\nconst CustomReport = (props) => {\r\n    let currentDate = new Date().toISOString().split('T')[0]\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false)\r\n    const [listOfParams, setListOfParams] = useState([]);\r\n    const [facilities, setFacilities] = useState([]);\r\n    const [listOfReport, setListOfReport] = useState([]);\r\n    const [selectedReport, setSelectedReport] = useState(\"\")\r\n    const [customQuery, setCustomQuery] = useState(\"\")\r\n    const [customDataFields, setCustomDataFields] = useState({});\r\n    const [objValues, setObjValues] = useState({\r\n        query: \"\",\r\n        reportName: \"\",\r\n        organisationUnitId: \"\",\r\n        organisationUnitName: \"\",\r\n        currentDate: currentDate\r\n    })\r\n    // const [objValues, setObjValues] = useState({\r\n    //     query: \"\",\r\n    //     reportName: \"\"\r\n    // })\r\n    const [formData, setFormData] = useState(objValues)\r\n\r\n    const loadFacilities = useCallback(async () => {\r\n        try{\r\n            const response = await axios.get(\r\n                `${baseUrl}account`,\r\n                {headers: { \"Authorization\": `Bearer ${token}` }}\r\n            );\r\n            setFacilities(response.data.applicationUserOrganisationUnits);\r\n        }catch(e){\r\n            console.log(e);\r\n        }\r\n    }, []);\r\n\r\n    const onData = (data) => {\r\n        setCustomDataFields(data);\r\n    }\r\n\r\n    const containsTemplateStrings = (obj) => {\r\n        return Object.values(obj).some((value) => {\r\n            return typeof value === 'string' && value.includes('{{');\r\n        });\r\n    };\r\n\r\n    const handleInputChange = e => {\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n    }\r\n\r\n\r\n    function extractPatterns(e) {\r\n        var arr = []\r\n        const pattern = /\\{\\{([^}]+)\\}\\}/g;\r\n        let match;\r\n        while ((match = pattern.exec(e)) !== null) {\r\n            const obj = {\r\n                [match[1]]: \"\"\r\n            }\r\n            arr.push(obj)\r\n\r\n        }\r\n        setListOfParams(arr)\r\n    }\r\n\r\n    const handleAnalyze = (e) => {\r\n        e.preventDefault();\r\n        const objValuesWithTemplateStrings = containsTemplateStrings(objValues?.query);\r\n        const text = extractPatterns(objValues?.query)\r\n    }\r\n\r\n    const handleCancel = (e) => {\r\n        e.preventDefault();\r\n        // const objValuesWithTemplateStrings = containsTemplateStrings(objValues?.queryBody);\r\n        // const text = extractPatterns(objValues?.queryBody)\r\n    }\r\n\r\n    const handleDryRun = (e) => {\r\n        e.preventDefault();\r\n        var customQuery = objValues?.query;\r\n        customQuery = replaceValues(customQuery, customDataFields);\r\n        customQuery = customQuery.trim().concat(\" LIMIT 5\");\r\n        setCustomQuery(customQuery);\r\n        console.log(customQuery);\r\n\r\n        axios.post(\r\n            `${baseUrl}customized-reports/generate-report`,\r\n            {},\r\n            {\r\n              params: {\r\n                query: customQuery,\r\n                reportName: objValues.reportName,\r\n              },\r\n              headers: {\r\n                Authorization: `Bearer ${token}`,\r\n              },\r\n              responseType: 'blob',\r\n            }\r\n          )\r\n            .then((response) => {\r\n              console.log(\"Here ******\" + response.data);\r\n              setLoading(false);\r\n              const fileName = `${objValues.organisationUnitName} ${objValues.reportName} Report ${currentDate}`;\r\n              const responseData = response.data;\r\n              let blob = new Blob([responseData], { type: \"application/octet-stream\" });\r\n              FileSaver.saveAs(blob, `${fileName}.xlsx`);\r\n              toast.success(\"Custom Report generated successfully\");\r\n            })\r\n            .catch((error) => {\r\n              setLoading(false);\r\n              if (error.response && error.response.data) {\r\n                let errorMessage = error.response.data.apierror && error.response.data.apierror.message !== \"\" ? error.response.data.apierror.message : \"Something went wrong, please try again\";\r\n                toast.error(errorMessage);\r\n              } else {\r\n                toast.error(\"Something went wrong. Please try again...\");\r\n              }\r\n            });\r\n    }   \r\n\r\n    function replaceValues(query, customDataFields) {\r\n        return query.replace(/{{\\s*([^}]+)\\s*}}/g, (match, key) => {\r\n            const normalizedKey = key.trim().toLowerCase().replace(' ', '_');\r\n            return customDataFields[normalizedKey] !== undefined ? customDataFields[normalizedKey] : match;\r\n        });\r\n    }\r\n\r\n    const handleSaveCustomReport = (e) => {\r\n        e.preventDefault()\r\n        axios\r\n            .post(`${baseUrl}customized-reports`, objValues, { headers: { \"Authorization\": `Bearer ${token}` } })\r\n            .then(response => {\r\n                getCustomReports();\r\n                toast.success(\"Custom report successfully saved...\")\r\n                \r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            }\r\n\r\n            );\r\n    }\r\n\r\n    async function getCustomReports() {\r\n        axios\r\n            .get(`${baseUrl}customized-reports`, { headers: { \"Authorization\": `Bearer ${token}` } })\r\n            .then((response) => {\r\n                setListOfReport(\r\n                    Object.entries(response.data).map(([key, value]) => ({\r\n                        key: value.query,\r\n                        text: value.reportName,\r\n                        value: value.id,\r\n                    }))\r\n                );\r\n            })\r\n            .catch((error) => { });\r\n    }\r\n    \r\n    useEffect(() => {\r\n        getCustomReports();\r\n        loadFacilities();\r\n    }, []);\r\n\r\n    const handleChange = (e, data) => {\r\n        e.preventDefault();\r\n        setSelectedReport(data.value)\r\n        //api call here\r\n        axios\r\n            .get(`${baseUrl}customized-reports/${data.value}`, { headers: { \"Authorization\": `Bearer ${token}` } })\r\n            .then((response) => {\r\n\r\n                setObjValues(response.data)\r\n                // setObjValues(objValues?.reportName, objValues?.query)\r\n            })\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        var customQuery = objValues?.query;\r\n        customQuery = replaceValues(customQuery, customDataFields);\r\n        // customQuery = customQuery.trim().concat(\" LIMIT 5\");\r\n        setCustomQuery(customQuery);\r\n        axios.post(\r\n          `${baseUrl}customized-reports/generate-report`,\r\n          {},\r\n          {\r\n            params: {\r\n              query: customQuery,\r\n              reportName: objValues.reportName,\r\n            },\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n            responseType: 'blob',\r\n          }\r\n        )\r\n          .then((response) => {\r\n            setLoading(false);\r\n            const fileName = `${objValues.organisationUnitName} ${objValues.reportName} Report ${currentDate}`;\r\n            const responseData = response.data;\r\n            let blob = new Blob([responseData], { type: \"application/octet-stream\" });\r\n            FileSaver.saveAs(blob, `${fileName}.xlsx`);\r\n            toast.success(\"Custom Report generated successfully\");\r\n          })\r\n          .catch((error) => {\r\n            setLoading(false);\r\n            if (error.response && error.response.data) {\r\n              let errorMessage = error.response.data.apierror && error.response.data.apierror.message !== \"\" ? error.response.data.apierror.message : \"Something went wrong, please try again\";\r\n              toast.error(errorMessage);\r\n            } else {\r\n              toast.error(\"Something went wrong. Please try again...\");\r\n            }\r\n          });\r\n      };\r\n      \r\n    \r\n    return (\r\n        <>\r\n\r\n            <Card >\r\n                <CardBody>\r\n\r\n                    <h2 style={{ color: '#000' }}>CUSTOM REPORT</h2>\r\n                    <br />\r\n                    <FormGroup>\r\n                        <Label style={{ color: '#014d88', fontWeight: 'bolder' }}>List of Reports <span style={{ cursor: \"pointer\", color: \"blue\" }}\r\n                        >\r\n                        </span></Label>\r\n                        <Dropdown\r\n                            placeholder='Select Report'\r\n                            fluid\r\n                            search\r\n                            selection\r\n                            name=\"reports\"\r\n                            id=\"reports\"\r\n                            value={selectedReport}\r\n                            onChange={handleChange}\r\n                            options={listOfReport}\r\n                        />\r\n                    </FormGroup>\r\n                    <form >\r\n                        <div className=\"row\">\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>Query Name*</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        name=\"reportName\"\r\n                                        id=\"reportName\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues?.reportName}\r\n                                        style={{ border: \"1px solid #014D88\", borderRadius: \"0.2rem\" }}\r\n                                    />\r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"form-group  col-md-6\">\r\n                                    <FormGroup>\r\n                                        <Label>Custom Query*</Label>\r\n                                        <TextArea\r\n                                            id=\"query\"\r\n                                            name=\"query\"\r\n                                            multiline=\"multiline\"\r\n                                            rows={20}\r\n                                            onChange={handleInputChange}\r\n                                            style={{ border: \"1px solid #014D88\", borderRadius: \"0.2rem\", width: \"100%\" }}\r\n                                            value={objValues?.query}\r\n                                            className=\"w-100\"\r\n                                            width={100}\r\n\r\n                                        />\r\n                                    </FormGroup>\r\n                                </div>\r\n\r\n                                <div className=\"form-group  col-md-6\">\r\n                                    <FormGroup>\r\n                                        <Label>Query Parameters *</Label>\r\n                                        <ScrollableDiv listOfParams={listOfParams} objValues={objValues} facilityData={facilities} onData={onData}\r\n\r\n                                        />\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <br />\r\n                                <div className=\"row\">\r\n                                    {/* <div className=\"mb-3 col-md-2\">\r\n                                        <Button type=\"submit\" content='Cancel' icon='right arrow' labelPosition='right' style={{ backgroundColor: \"#FF0000\", color: '#fff' }} onClick={handleCancel} />\r\n                                    </div> */}\r\n                                    <div className=\"mb-3 col-md-2\">\r\n                                        <Button type=\"submit\" content='Analyze' icon='up arrow' labelPosition='right' style={{ backgroundColor: \"#014d88\", color: '#fff' }} onClick={handleAnalyze} />\r\n                                    </div>\r\n                                    <div className=\"mb-3 col-md-2\">\r\n                                        <Button type=\"submit\" content='Dry Run' icon='up down' labelPosition='right' style={{ backgroundColor: \"black\", color: '#fff' }} onClick={handleDryRun} />\r\n                                    </div>\r\n                                    <div className=\"mb-3 col-md-3\">\r\n                                        <Button type=\"submit\" content='Save Query' icon='up arrow' labelPosition='right' style={{ backgroundColor: \"blue\", color: '#fff' }} onClick={handleSaveCustomReport} />\r\n                                    </div>\r\n\r\n                                    <div className=\"mb-3 col-md-2\" >\r\n                                        {/* <Button type=\"submit\" content='Generate' icon='right arrow' labelPosition='right' style={{ backgroundColor: \"#008000\", color: '#fff' }} onClick={handleSubmit} hidden={objValues.organisationUnitId === \"\" ? true : false} /> */}\r\n\r\n                                        <Button type=\"submit\" content='Generate' icon='right arrow' labelPosition='right' style={{ backgroundColor: \"#008000\", color: '#fff' }} onClick={handleSubmit} />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {loading && (\r\n                                    <Message icon>\r\n                                                      <Message.Content>\r\n                                                            <ProgressComponent/>\r\n                                                      </Message.Content>\r\n                                                    </Message>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CustomReport","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Shared\\Scrollable.js",["310","311","312"],"import React, {useState} from 'react';\r\nimport {FormGroup, Label, Input} from \"reactstrap\";\r\n// import { Input } from '@material-ui/core';\r\n\r\nconst ScrollableDiv = (props) => {\r\n  const items = Array.from({ length: 50 }, (_, index) => `Item ${index + 1}`);\r\n  const [parameterFormFields, setParameterFormFields] = useState({});\r\n\r\n  props.onData(parameterFormFields);\r\n  const handleChange =(e) => {\r\n    const {name, value} = e.target;\r\n    setParameterFormFields({\r\n      ...parameterFormFields,\r\n      [name]: value,\r\n    });\r\n    props.onData(parameterFormFields);\r\n  };\r\n\r\n  const handleParameterSubmission =(e) => {\r\n    e.preventDefault();\r\n    props.onData(parameterFormFields);\r\n  };\r\n\r\n  function extractPatterns(e) {\r\n    const pattern = /\\{\\{([^}]+)\\}\\}/g;\r\n    let match;\r\n    while ((match = pattern.exec(e)) !== null) {\r\n      console.log(match[1]);\r\n    }\r\n  }\r\n\r\n  function formatComponentName(value){\r\n    return value.toLowerCase().replace(\" \", \"_\");\r\n  }\r\n\r\n  const containerStyle = {\r\n    width: 'auto',\r\n    margin: '0 auto'\r\n  };\r\n\r\n  const scrollableDivStyle = {\r\n    height: '325px',\r\n    overflowY: 'auto',\r\n    border: '1px solid #ccc',\r\n    padding: '10px',\r\n    boxSizing: 'border-box'\r\n  };\r\n\r\n  const itemStyle = {\r\n    padding: '2px',\r\n    // borderBottom: '1px solid #ddd'\r\n  };\r\n\r\n  return (\r\n    <div style={containerStyle}>\r\n      <div style={scrollableDivStyle}>\r\n        {props.listOfParams?.map((match, index) => (\r\n          <div key={index} style={{...itemStyle}}>\r\n            <form id=\"parameterForm\" onSubmit={handleParameterSubmission}>\r\n              <div class=\"row col-md-12\">\r\n                <div class=\"mb-2 col-md-4\">\r\n                  <Label>{Object.keys(match)[0]}</Label>\r\n                </div>\r\n                <div class=\"mb-2 col-md-8\">\r\n                {Object.keys(match)[0].includes(\"Facility\") ?\r\n                  <select\r\n                      className=\"form-control\"\r\n                      name={formatComponentName(Object.keys(match)[0])}\r\n                      id={formatComponentName(Object.keys(match)[0])}\r\n                      value={parameterFormFields[formatComponentName(Object.keys(match)[0])]}\r\n                      style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                      onChange={handleChange}>\r\n                        <option value={\"0\"}>Select a Facility</option>\r\n                          {props.facilityData.map((value) => (\r\n                              <option key={value.id} value={value.organisationUnitId}>\r\n                                  {value.organisationUnitName}\r\n                              </option>\r\n                          ))}\r\n                  </select> \r\n                  : (Object.keys(match)[0].includes(\"Date\") ?\r\n                  <Input\r\n                    type=\"date\"\r\n                    className=\"form-control\"\r\n                    name={formatComponentName(Object.keys(match)[0])}\r\n                    id={formatComponentName(Object.keys(match)[0])}\r\n                    min={\"1980-01-01\"}\r\n                    max={props.objValues?.currentDate}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                    value={parameterFormFields[formatComponentName(Object.keys(match)[0])]}\r\n                    onChange={handleChange}\r\n                  /> :\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name={formatComponentName(Object.keys(match)[0])}\r\n                    id={formatComponentName(Object.keys(match)[0])}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                    value={parameterFormFields[formatComponentName(Object.keys(match)[0])]}\r\n                    onChange={handleChange}\r\n                  />\r\n                )}\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ScrollableDiv;\r\n","C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\SplitActionButton.js",["313","314","315","316","317"],"C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\ProgressComponent.js",[],"C:\\Users\\joshua.gabriel\\data.fi\\projects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\ADRReport.js",["318","319","320","321"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card} from \"@material-ui/core\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { Button} from 'semantic-ui-react'\r\nimport { toast} from \"react-toastify\";\r\nimport FileSaver from \"file-saver\";\r\nimport { Message, Icon } from 'semantic-ui-react'\r\nimport ProgressComponent from \"./ProgressComponent\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\nconst ADRReport = (props) => {\r\n    let currentDate = new Date().toISOString().split('T')[0]\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false)\r\n    const [facilities, setFacilities] = useState([]);\r\n    const [status, setStatus] = useState(true);\r\n    const [objValues, setObjValues]=useState({\r\n        organisationUnitId:\"\",\r\n        organisationUnitName:\"\",\r\n        startDate:\"\",\r\n        endDate: \"\"\r\n    })\r\n    useEffect(() => {\r\n        Facilities()\r\n      }, []);\r\n    //Get list of WhoStaging\r\n    const Facilities =()=>{\r\n    axios\r\n        .get(`${baseUrl}account`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n        console.log(response.data);\r\n            setFacilities(response.data.applicationUserOrganisationUnits);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });\r\n\r\n    }\r\n\r\n    const handleInputChange = e => {\r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value, organisationUnitName: e.target.innerText});\r\n    }\r\n\r\n    const handleValueChange = () => {\r\n        setStatus(!status)\r\n\r\n        if (status === true) {\r\n          setObjValues ({...objValues,  startDate: \"1980-01-01\", endDate: currentDate});\r\n        } else {\r\n          setObjValues ({...objValues,  startDate: \"\", endDate: currentDate});\r\n        }\r\n\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true)\r\n        console.log(token);\r\n\r\n        axios.post(`${baseUrl}adr-reporting?&facilityId=${objValues.organisationUnitId}&startDate=${objValues.startDate}&endDate=${objValues.endDate}`,objValues.organisationUnitId,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}, responseType: 'blob'},\r\n        )\r\n          .then(response => {\r\n            setLoading(false)\r\n            const fileName = `${objValues.organisationUnitName} ADR ${currentDate}`\r\n            const responseData = response.data\r\n            let blob = new Blob([responseData], {type: \"application/octet-stream\"});\r\n\r\n            FileSaver.saveAs(blob, `${fileName}.xlsx`);\r\n            toast.success(\"ADR Report generated successfully\");\r\n          })\r\n          .catch(error => {\r\n            setLoading(false)\r\n            if(error.response && error.response.data){\r\n                let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                toast.error(errorMessage);\r\n              }\r\n              else{\r\n                toast.error(\"Something went wrong. Please try again...\");\r\n              }\r\n          });\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <Card >\r\n                <CardBody>\r\n\r\n                <h2 style={{color:'#000'}}>ADR REPORT</h2>\r\n                <br/>\r\n                    <form >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>From *</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"startDate\"\r\n                                        id=\"startDate\"\r\n                                        min={\"1980-01-01\"}\r\n                                        max={currentDate}\r\n                                        value={objValues.startDate}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>To *</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"endDate\"\r\n                                        id=\"endDate\"\r\n                                        min={\"1980-01-01\"}\r\n                                        max={currentDate}\r\n                                        //min={objValues.startDate}\r\n                                        value={objValues.endDate}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                 <FormGroup check>\r\n                                  <Label check>\r\n                                    <Input type=\"checkbox\" onChange={handleValueChange}/>\r\n                                     {' '} &nbsp;&nbsp;<span> As at Today.</span>\r\n                                  </Label>\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>Facility*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"organisationUnitId\"\r\n                                        id=\"organisationUnitId\"\r\n                                        value={objValues.organisationUnitId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {facilities.map((value) => (\r\n                                            <option key={value.id} value={value.organisationUnitId}>\r\n                                                {value.organisationUnitName}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n\r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                            <Button type=\"submit\" content='Generate Report' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit} disabled={objValues.organisationUnitId===\"\" ? true : false}/>\r\n                            </div>\r\n                            </div>\r\n\r\n                            {loading && (\r\n                                <Message icon>\r\n                                 <Message.Content>\r\n                                       <ProgressComponent/>\r\n                                 </Message.Content>\r\n                               </Message>\r\n                            )}\r\n                        </div>\r\n                    </form>\r\n\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ADRReport",{"ruleId":"322","severity":1,"message":"323","line":4,"column":41,"nodeType":"324","messageId":"325","endLine":4,"endColumn":47},{"ruleId":"326","replacedBy":"327"},{"ruleId":"328","replacedBy":"329"},{"ruleId":"322","severity":1,"message":"330","line":4,"column":25,"nodeType":"324","messageId":"325","endLine":4,"endColumn":35},{"ruleId":"322","severity":1,"message":"331","line":5,"column":9,"nodeType":"324","messageId":"325","endLine":5,"endColumn":13},{"ruleId":"322","severity":1,"message":"332","line":48,"column":11,"nodeType":"324","messageId":"325","endLine":48,"endColumn":18},{"ruleId":"322","severity":1,"message":"333","line":49,"column":12,"nodeType":"324","messageId":"325","endLine":49,"endColumn":19},{"ruleId":"322","severity":1,"message":"334","line":49,"column":21,"nodeType":"324","messageId":"325","endLine":49,"endColumn":31},{"ruleId":"322","severity":1,"message":"335","line":4,"column":26,"nodeType":"324","messageId":"325","endLine":4,"endColumn":31},{"ruleId":"322","severity":1,"message":"336","line":8,"column":10,"nodeType":"324","messageId":"325","endLine":8,"endColumn":14},{"ruleId":"322","severity":1,"message":"337","line":8,"column":22,"nodeType":"324","messageId":"325","endLine":8,"endColumn":30},{"ruleId":"322","severity":1,"message":"338","line":32,"column":8,"nodeType":"324","messageId":"325","endLine":32,"endColumn":22},{"ruleId":"322","severity":1,"message":"332","line":48,"column":9,"nodeType":"324","messageId":"325","endLine":48,"endColumn":16},{"ruleId":"322","severity":1,"message":"339","line":49,"column":10,"nodeType":"324","messageId":"325","endLine":49,"endColumn":16},{"ruleId":"322","severity":1,"message":"340","line":49,"column":18,"nodeType":"324","messageId":"325","endLine":49,"endColumn":27},{"ruleId":"322","severity":1,"message":"341","line":3,"column":38,"nodeType":"324","messageId":"325","endLine":3,"endColumn":45},{"ruleId":"322","severity":1,"message":"342","line":3,"column":46,"nodeType":"324","messageId":"325","endLine":3,"endColumn":51},{"ruleId":"322","severity":1,"message":"331","line":3,"column":52,"nodeType":"324","messageId":"325","endLine":3,"endColumn":56},{"ruleId":"322","severity":1,"message":"336","line":13,"column":19,"nodeType":"324","messageId":"325","endLine":13,"endColumn":23},{"ruleId":"322","severity":1,"message":"332","line":60,"column":11,"nodeType":"324","messageId":"325","endLine":60,"endColumn":18},{"ruleId":"322","severity":1,"message":"341","line":3,"column":38,"nodeType":"324","messageId":"325","endLine":3,"endColumn":45},{"ruleId":"322","severity":1,"message":"342","line":3,"column":46,"nodeType":"324","messageId":"325","endLine":3,"endColumn":51},{"ruleId":"322","severity":1,"message":"331","line":3,"column":52,"nodeType":"324","messageId":"325","endLine":3,"endColumn":56},{"ruleId":"322","severity":1,"message":"336","line":13,"column":19,"nodeType":"324","messageId":"325","endLine":13,"endColumn":23},{"ruleId":"322","severity":1,"message":"332","line":60,"column":11,"nodeType":"324","messageId":"325","endLine":60,"endColumn":18},{"ruleId":"322","severity":1,"message":"341","line":3,"column":38,"nodeType":"324","messageId":"325","endLine":3,"endColumn":45},{"ruleId":"322","severity":1,"message":"331","line":3,"column":54,"nodeType":"324","messageId":"325","endLine":3,"endColumn":58},{"ruleId":"322","severity":1,"message":"336","line":13,"column":19,"nodeType":"324","messageId":"325","endLine":13,"endColumn":23},{"ruleId":"322","severity":1,"message":"332","line":58,"column":9,"nodeType":"324","messageId":"325","endLine":58,"endColumn":16},{"ruleId":"322","severity":1,"message":"341","line":3,"column":38,"nodeType":"324","messageId":"325","endLine":3,"endColumn":45},{"ruleId":"322","severity":1,"message":"331","line":3,"column":52,"nodeType":"324","messageId":"325","endLine":3,"endColumn":56},{"ruleId":"322","severity":1,"message":"336","line":13,"column":19,"nodeType":"324","messageId":"325","endLine":13,"endColumn":23},{"ruleId":"322","severity":1,"message":"332","line":58,"column":11,"nodeType":"324","messageId":"325","endLine":58,"endColumn":18},{"ruleId":"322","severity":1,"message":"341","line":3,"column":38,"nodeType":"324","messageId":"325","endLine":3,"endColumn":45},{"ruleId":"322","severity":1,"message":"342","line":3,"column":46,"nodeType":"324","messageId":"325","endLine":3,"endColumn":51},{"ruleId":"322","severity":1,"message":"331","line":3,"column":52,"nodeType":"324","messageId":"325","endLine":3,"endColumn":56},{"ruleId":"322","severity":1,"message":"336","line":31,"column":19,"nodeType":"324","messageId":"325","endLine":31,"endColumn":23},{"ruleId":"322","severity":1,"message":"332","line":95,"column":11,"nodeType":"324","messageId":"325","endLine":95,"endColumn":18},{"ruleId":"322","severity":1,"message":"341","line":3,"column":38,"nodeType":"324","messageId":"325","endLine":3,"endColumn":45},{"ruleId":"322","severity":1,"message":"342","line":3,"column":46,"nodeType":"324","messageId":"325","endLine":3,"endColumn":51},{"ruleId":"322","severity":1,"message":"331","line":3,"column":52,"nodeType":"324","messageId":"325","endLine":3,"endColumn":56},{"ruleId":"322","severity":1,"message":"336","line":13,"column":19,"nodeType":"324","messageId":"325","endLine":13,"endColumn":23},{"ruleId":"322","severity":1,"message":"332","line":60,"column":11,"nodeType":"324","messageId":"325","endLine":60,"endColumn":18},{"ruleId":"322","severity":1,"message":"341","line":3,"column":38,"nodeType":"324","messageId":"325","endLine":3,"endColumn":45},{"ruleId":"322","severity":1,"message":"331","line":3,"column":52,"nodeType":"324","messageId":"325","endLine":3,"endColumn":56},{"ruleId":"322","severity":1,"message":"336","line":13,"column":19,"nodeType":"324","messageId":"325","endLine":13,"endColumn":23},{"ruleId":"322","severity":1,"message":"332","line":58,"column":11,"nodeType":"324","messageId":"325","endLine":58,"endColumn":18},{"ruleId":"322","severity":1,"message":"341","line":3,"column":38,"nodeType":"324","messageId":"325","endLine":3,"endColumn":45},{"ruleId":"322","severity":1,"message":"342","line":3,"column":47,"nodeType":"324","messageId":"325","endLine":3,"endColumn":52},{"ruleId":"322","severity":1,"message":"331","line":3,"column":54,"nodeType":"324","messageId":"325","endLine":3,"endColumn":58},{"ruleId":"322","severity":1,"message":"336","line":13,"column":19,"nodeType":"324","messageId":"325","endLine":13,"endColumn":23},{"ruleId":"322","severity":1,"message":"332","line":58,"column":9,"nodeType":"324","messageId":"325","endLine":58,"endColumn":16},{"ruleId":"322","severity":1,"message":"343","line":95,"column":9,"nodeType":"324","messageId":"325","endLine":95,"endColumn":26},{"ruleId":"322","severity":1,"message":"341","line":3,"column":38,"nodeType":"324","messageId":"325","endLine":3,"endColumn":45},{"ruleId":"322","severity":1,"message":"342","line":3,"column":47,"nodeType":"324","messageId":"325","endLine":3,"endColumn":52},{"ruleId":"322","severity":1,"message":"331","line":3,"column":54,"nodeType":"324","messageId":"325","endLine":3,"endColumn":58},{"ruleId":"322","severity":1,"message":"336","line":13,"column":19,"nodeType":"324","messageId":"325","endLine":13,"endColumn":23},{"ruleId":"322","severity":1,"message":"332","line":58,"column":9,"nodeType":"324","messageId":"325","endLine":58,"endColumn":16},{"ruleId":"322","severity":1,"message":"341","line":3,"column":38,"nodeType":"324","messageId":"325","endLine":3,"endColumn":45},{"ruleId":"322","severity":1,"message":"342","line":3,"column":47,"nodeType":"324","messageId":"325","endLine":3,"endColumn":52},{"ruleId":"322","severity":1,"message":"331","line":3,"column":54,"nodeType":"324","messageId":"325","endLine":3,"endColumn":58},{"ruleId":"322","severity":1,"message":"336","line":13,"column":19,"nodeType":"324","messageId":"325","endLine":13,"endColumn":23},{"ruleId":"322","severity":1,"message":"332","line":58,"column":9,"nodeType":"324","messageId":"325","endLine":58,"endColumn":16},{"ruleId":"322","severity":1,"message":"341","line":3,"column":38,"nodeType":"324","messageId":"325","endLine":3,"endColumn":45},{"ruleId":"322","severity":1,"message":"331","line":3,"column":52,"nodeType":"324","messageId":"325","endLine":3,"endColumn":56},{"ruleId":"322","severity":1,"message":"336","line":13,"column":19,"nodeType":"324","messageId":"325","endLine":13,"endColumn":23},{"ruleId":"322","severity":1,"message":"332","line":58,"column":11,"nodeType":"324","messageId":"325","endLine":58,"endColumn":18},{"ruleId":"322","severity":1,"message":"341","line":3,"column":38,"nodeType":"324","messageId":"325","endLine":3,"endColumn":45},{"ruleId":"322","severity":1,"message":"342","line":3,"column":46,"nodeType":"324","messageId":"325","endLine":3,"endColumn":51},{"ruleId":"322","severity":1,"message":"331","line":3,"column":52,"nodeType":"324","messageId":"325","endLine":3,"endColumn":56},{"ruleId":"322","severity":1,"message":"336","line":13,"column":19,"nodeType":"324","messageId":"325","endLine":13,"endColumn":23},{"ruleId":"322","severity":1,"message":"332","line":60,"column":11,"nodeType":"324","messageId":"325","endLine":60,"endColumn":18},{"ruleId":"322","severity":1,"message":"341","line":3,"column":38,"nodeType":"324","messageId":"325","endLine":3,"endColumn":45},{"ruleId":"322","severity":1,"message":"331","line":3,"column":52,"nodeType":"324","messageId":"325","endLine":3,"endColumn":56},{"ruleId":"322","severity":1,"message":"336","line":13,"column":19,"nodeType":"324","messageId":"325","endLine":13,"endColumn":23},{"ruleId":"322","severity":1,"message":"332","line":58,"column":11,"nodeType":"324","messageId":"325","endLine":58,"endColumn":18},{"ruleId":"322","severity":1,"message":"341","line":3,"column":38,"nodeType":"324","messageId":"325","endLine":3,"endColumn":45},{"ruleId":"322","severity":1,"message":"331","line":3,"column":52,"nodeType":"324","messageId":"325","endLine":3,"endColumn":56},{"ruleId":"322","severity":1,"message":"336","line":13,"column":19,"nodeType":"324","messageId":"325","endLine":13,"endColumn":23},{"ruleId":"322","severity":1,"message":"332","line":58,"column":11,"nodeType":"324","messageId":"325","endLine":58,"endColumn":18},{"ruleId":"322","severity":1,"message":"341","line":3,"column":38,"nodeType":"324","messageId":"325","endLine":3,"endColumn":45},{"ruleId":"322","severity":1,"message":"342","line":3,"column":47,"nodeType":"324","messageId":"325","endLine":3,"endColumn":52},{"ruleId":"322","severity":1,"message":"331","line":3,"column":54,"nodeType":"324","messageId":"325","endLine":3,"endColumn":58},{"ruleId":"322","severity":1,"message":"336","line":13,"column":19,"nodeType":"324","messageId":"325","endLine":13,"endColumn":23},{"ruleId":"322","severity":1,"message":"332","line":58,"column":9,"nodeType":"324","messageId":"325","endLine":58,"endColumn":16},{"ruleId":"322","severity":1,"message":"341","line":3,"column":38,"nodeType":"324","messageId":"325","endLine":3,"endColumn":45},{"ruleId":"322","severity":1,"message":"342","line":3,"column":47,"nodeType":"324","messageId":"325","endLine":3,"endColumn":52},{"ruleId":"322","severity":1,"message":"331","line":3,"column":54,"nodeType":"324","messageId":"325","endLine":3,"endColumn":58},{"ruleId":"322","severity":1,"message":"336","line":13,"column":19,"nodeType":"324","messageId":"325","endLine":13,"endColumn":23},{"ruleId":"322","severity":1,"message":"332","line":58,"column":9,"nodeType":"324","messageId":"325","endLine":58,"endColumn":16},{"ruleId":"322","severity":1,"message":"341","line":3,"column":38,"nodeType":"324","messageId":"325","endLine":3,"endColumn":45},{"ruleId":"322","severity":1,"message":"331","line":3,"column":52,"nodeType":"324","messageId":"325","endLine":3,"endColumn":56},{"ruleId":"322","severity":1,"message":"336","line":13,"column":19,"nodeType":"324","messageId":"325","endLine":13,"endColumn":23},{"ruleId":"322","severity":1,"message":"332","line":58,"column":11,"nodeType":"324","messageId":"325","endLine":58,"endColumn":18},{"ruleId":"322","severity":1,"message":"341","line":3,"column":38,"nodeType":"324","messageId":"325","endLine":3,"endColumn":45},{"ruleId":"322","severity":1,"message":"331","line":3,"column":52,"nodeType":"324","messageId":"325","endLine":3,"endColumn":56},{"ruleId":"322","severity":1,"message":"336","line":13,"column":19,"nodeType":"324","messageId":"325","endLine":13,"endColumn":23},{"ruleId":"322","severity":1,"message":"332","line":58,"column":11,"nodeType":"324","messageId":"325","endLine":58,"endColumn":18},{"ruleId":"322","severity":1,"message":"341","line":3,"column":38,"nodeType":"324","messageId":"325","endLine":3,"endColumn":45},{"ruleId":"322","severity":1,"message":"331","line":3,"column":52,"nodeType":"324","messageId":"325","endLine":3,"endColumn":56},{"ruleId":"322","severity":1,"message":"336","line":13,"column":19,"nodeType":"324","messageId":"325","endLine":13,"endColumn":23},{"ruleId":"322","severity":1,"message":"332","line":58,"column":11,"nodeType":"324","messageId":"325","endLine":58,"endColumn":18},{"ruleId":"322","severity":1,"message":"341","line":3,"column":38,"nodeType":"324","messageId":"325","endLine":3,"endColumn":45},{"ruleId":"322","severity":1,"message":"331","line":3,"column":52,"nodeType":"324","messageId":"325","endLine":3,"endColumn":56},{"ruleId":"322","severity":1,"message":"336","line":13,"column":19,"nodeType":"324","messageId":"325","endLine":13,"endColumn":23},{"ruleId":"322","severity":1,"message":"332","line":58,"column":11,"nodeType":"324","messageId":"325","endLine":58,"endColumn":18},{"ruleId":"322","severity":1,"message":"341","line":3,"column":38,"nodeType":"324","messageId":"325","endLine":3,"endColumn":45},{"ruleId":"322","severity":1,"message":"331","line":3,"column":52,"nodeType":"324","messageId":"325","endLine":3,"endColumn":56},{"ruleId":"322","severity":1,"message":"336","line":13,"column":19,"nodeType":"324","messageId":"325","endLine":13,"endColumn":23},{"ruleId":"322","severity":1,"message":"332","line":58,"column":11,"nodeType":"324","messageId":"325","endLine":58,"endColumn":18},{"ruleId":"322","severity":1,"message":"341","line":3,"column":38,"nodeType":"324","messageId":"325","endLine":3,"endColumn":45},{"ruleId":"322","severity":1,"message":"331","line":3,"column":52,"nodeType":"324","messageId":"325","endLine":3,"endColumn":56},{"ruleId":"322","severity":1,"message":"336","line":13,"column":19,"nodeType":"324","messageId":"325","endLine":13,"endColumn":23},{"ruleId":"322","severity":1,"message":"332","line":58,"column":11,"nodeType":"324","messageId":"325","endLine":58,"endColumn":18},{"ruleId":"322","severity":1,"message":"341","line":3,"column":38,"nodeType":"324","messageId":"325","endLine":3,"endColumn":45},{"ruleId":"322","severity":1,"message":"331","line":3,"column":52,"nodeType":"324","messageId":"325","endLine":3,"endColumn":56},{"ruleId":"322","severity":1,"message":"336","line":13,"column":19,"nodeType":"324","messageId":"325","endLine":13,"endColumn":23},{"ruleId":"322","severity":1,"message":"332","line":58,"column":11,"nodeType":"324","messageId":"325","endLine":58,"endColumn":18},{"ruleId":"322","severity":1,"message":"344","line":1,"column":50,"nodeType":"324","messageId":"325","endLine":1,"endColumn":60},{"ruleId":"322","severity":1,"message":"341","line":3,"column":38,"nodeType":"324","messageId":"325","endLine":3,"endColumn":45},{"ruleId":"322","severity":1,"message":"331","line":3,"column":54,"nodeType":"324","messageId":"325","endLine":3,"endColumn":58},{"ruleId":"322","severity":1,"message":"336","line":11,"column":19,"nodeType":"324","messageId":"325","endLine":11,"endColumn":23},{"ruleId":"322","severity":1,"message":"332","line":57,"column":11,"nodeType":"324","messageId":"325","endLine":57,"endColumn":18},{"ruleId":"322","severity":1,"message":"345","line":63,"column":12,"nodeType":"324","messageId":"325","endLine":63,"endColumn":23},{"ruleId":"322","severity":1,"message":"346","line":76,"column":12,"nodeType":"324","messageId":"325","endLine":76,"endColumn":20},{"ruleId":"322","severity":1,"message":"347","line":76,"column":22,"nodeType":"324","messageId":"325","endLine":76,"endColumn":33},{"ruleId":"322","severity":1,"message":"348","line":121,"column":15,"nodeType":"324","messageId":"325","endLine":121,"endColumn":43},{"ruleId":"322","severity":1,"message":"349","line":122,"column":15,"nodeType":"324","messageId":"325","endLine":122,"endColumn":19},{"ruleId":"322","severity":1,"message":"350","line":125,"column":11,"nodeType":"324","messageId":"325","endLine":125,"endColumn":23},{"ruleId":"351","severity":1,"message":"352","line":214,"column":8,"nodeType":"353","endLine":214,"endColumn":10,"suggestions":"354"},{"ruleId":"322","severity":1,"message":"355","line":2,"column":9,"nodeType":"324","messageId":"325","endLine":2,"endColumn":18},{"ruleId":"322","severity":1,"message":"356","line":6,"column":9,"nodeType":"324","messageId":"325","endLine":6,"endColumn":14},{"ruleId":"322","severity":1,"message":"357","line":24,"column":12,"nodeType":"324","messageId":"325","endLine":24,"endColumn":27},{"ruleId":"322","severity":1,"message":"358","line":11,"column":9,"nodeType":"324","messageId":"325","endLine":11,"endColumn":14},{"ruleId":"322","severity":1,"message":"359","line":18,"column":7,"nodeType":"324","messageId":"325","endLine":18,"endColumn":14},{"ruleId":"322","severity":1,"message":"360","line":25,"column":12,"nodeType":"324","messageId":"325","endLine":25,"endColumn":25},{"ruleId":"322","severity":1,"message":"361","line":25,"column":27,"nodeType":"324","messageId":"325","endLine":25,"endColumn":43},{"ruleId":"322","severity":1,"message":"362","line":31,"column":11,"nodeType":"324","messageId":"325","endLine":31,"endColumn":30},{"ruleId":"322","severity":1,"message":"341","line":3,"column":38,"nodeType":"324","messageId":"325","endLine":3,"endColumn":45},{"ruleId":"322","severity":1,"message":"331","line":3,"column":52,"nodeType":"324","messageId":"325","endLine":3,"endColumn":56},{"ruleId":"322","severity":1,"message":"336","line":13,"column":19,"nodeType":"324","messageId":"325","endLine":13,"endColumn":23},{"ruleId":"322","severity":1,"message":"332","line":58,"column":11,"nodeType":"324","messageId":"325","endLine":58,"endColumn":18},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","no-native-reassign",["363"],"no-negated-in-lhs",["364"],"'Breadcrumb' is defined but never used.","'Form' is defined but never used.","'classes' is assigned a value but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'toast' is defined but never used.","'Icon' is defined but never used.","'Dropdown' is defined but never used.","'HTSIndexReport' is defined but never used.","'saving' is assigned a value but never used.","'setSaving' is assigned a value but never used.","'Spinner' is defined but never used.","'Input' is defined but never used.","'handleValueChange' is assigned a value but never used.","'forwardRef' is defined but never used.","'customQuery' is assigned a value but never used.","'formData' is assigned a value but never used.","'setFormData' is assigned a value but never used.","'objValuesWithTemplateStrings' is assigned a value but never used.","'text' is assigned a value but never used.","'handleCancel' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadFacilities'. Either include it or remove the dependency array.","ArrayExpression",["365"],"'FormGroup' is defined but never used.","'items' is assigned a value but never used.","'extractPatterns' is defined but never used.","'FaEye' is defined but never used.","'options' is assigned a value but never used.","'selectedIndex' is assigned a value but never used.","'setSelectedIndex' is assigned a value but never used.","'handleMenuItemClick' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"366","fix":"367"},"Update the dependencies array to be: [loadFacilities]",{"range":"368","text":"369"},[7195,7197],"[loadFacilities]"]