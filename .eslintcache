[{"C:\\Users\\gamaliel.dashua\\IdeaProjects\\Report-Module\\src\\index.js":"1","C:\\Users\\gamaliel.dashua\\IdeaProjects\\Report-Module\\src\\main\\webapp\\reportWebVitals.js":"2","C:\\Users\\gamaliel.dashua\\IdeaProjects\\Report-Module\\src\\App.js":"3","C:\\Users\\gamaliel.dashua\\IdeaProjects\\Report-Module\\src\\main\\webapp\\context\\ThemeContext.js":"4","C:\\Users\\gamaliel.dashua\\IdeaProjects\\Report-Module\\src\\main\\webapp\\context\\ThemeDemo.js":"5","C:\\Users\\gamaliel.dashua\\IdeaProjects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Home.js":"6","C:\\Users\\gamaliel.dashua\\IdeaProjects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Visualisation\\Index.js":"7","C:\\Users\\gamaliel.dashua\\IdeaProjects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\Index.js":"8","C:\\Users\\gamaliel.dashua\\IdeaProjects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\PharmacyReport.js":"9","C:\\Users\\gamaliel.dashua\\IdeaProjects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\LaboratoryReport.js":"10","C:\\Users\\gamaliel.dashua\\IdeaProjects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\BiometricReport.js":"11","C:\\Users\\gamaliel.dashua\\IdeaProjects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\ClientVerification.js":"12","C:\\Users\\gamaliel.dashua\\IdeaProjects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\PatientLineList.js":"13","C:\\Users\\gamaliel.dashua\\IdeaProjects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\Appointment.js":"14","C:\\Users\\gamaliel.dashua\\IdeaProjects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\Radet.js":"15","C:\\Users\\gamaliel.dashua\\IdeaProjects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\HtsRegister.js":"16","C:\\Users\\gamaliel.dashua\\IdeaProjects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\AhdReport.js":"17","C:\\Users\\gamaliel.dashua\\IdeaProjects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\HTSReport.js":"18","C:\\Users\\gamaliel.dashua\\IdeaProjects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\TbReport.js":"19","C:\\Users\\gamaliel.dashua\\IdeaProjects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\ClinicData.js":"20","C:\\Users\\gamaliel.dashua\\IdeaProjects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\PmtctHtsReport.js":"21","C:\\Users\\gamaliel.dashua\\IdeaProjects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\PrepReport.js":"22","C:\\Users\\gamaliel.dashua\\IdeaProjects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\PmtctMaternalCohortReport.js":"23","C:\\Users\\gamaliel.dashua\\IdeaProjects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\IndexElicitation.js":"24","C:\\Users\\gamaliel.dashua\\IdeaProjects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\PrepLongitudinalReport.js":"25","C:\\Users\\gamaliel.dashua\\IdeaProjects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\EACReport.js":"26","C:\\Users\\gamaliel.dashua\\IdeaProjects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\NcdReport.js":"27","C:\\Users\\gamaliel.dashua\\IdeaProjects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\KpPrevReport.js":"28","C:\\Users\\gamaliel.dashua\\IdeaProjects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\MhpssReport.js":"29","C:\\Users\\gamaliel.dashua\\IdeaProjects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\HTSIndexReport.js":"30","C:\\Users\\gamaliel.dashua\\IdeaProjects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\ADRReport.js":"31","C:\\Users\\gamaliel.dashua\\IdeaProjects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\HIVSTReport.js":"32","C:\\Users\\gamaliel.dashua\\IdeaProjects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\CustomReport.js":"33","C:\\Users\\gamaliel.dashua\\IdeaProjects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\PMTCTMonthlySummaryReport.js":"34","C:\\Users\\gamaliel.dashua\\IdeaProjects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\PrEPMSF.js":"35","C:\\Users\\gamaliel.dashua\\IdeaProjects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\ProgressComponent.js":"36","C:\\Users\\gamaliel.dashua\\IdeaProjects\\Report-Module\\src\\main\\webapp\\api.js":"37","C:\\Users\\gamaliel.dashua\\IdeaProjects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Shared\\Scrollable.js":"38"},{"size":753,"mtime":1743082131156,"results":"39","hashOfConfig":"40"},{"size":375,"mtime":1743082134558,"results":"41","hashOfConfig":"40"},{"size":847,"mtime":1743082131154,"results":"42","hashOfConfig":"40"},{"size":9235,"mtime":1743082131279,"results":"43","hashOfConfig":"40"},{"size":3056,"mtime":1743082131280,"results":"44","hashOfConfig":"40"},{"size":1540,"mtime":1743082134514,"results":"45","hashOfConfig":"40"},{"size":6329,"mtime":1743082134552,"results":"46","hashOfConfig":"40"},{"size":42456,"mtime":1743088005859,"results":"47","hashOfConfig":"40"},{"size":6640,"mtime":1743082134539,"results":"48","hashOfConfig":"40"},{"size":6530,"mtime":1743082134533,"results":"49","hashOfConfig":"40"},{"size":9230,"mtime":1743082134519,"results":"50","hashOfConfig":"40"},{"size":5786,"mtime":1743082134520,"results":"51","hashOfConfig":"40"},{"size":6631,"mtime":1743082134538,"results":"52","hashOfConfig":"40"},{"size":16663,"mtime":1743082134517,"results":"53","hashOfConfig":"40"},{"size":8398,"mtime":1743082134547,"results":"54","hashOfConfig":"40"},{"size":9272,"mtime":1743082134528,"results":"55","hashOfConfig":"40"},{"size":9458,"mtime":1743082134516,"results":"56","hashOfConfig":"40"},{"size":10400,"mtime":1743082134527,"results":"57","hashOfConfig":"40"},{"size":9002,"mtime":1743082134548,"results":"58","hashOfConfig":"40"},{"size":6233,"mtime":1743082134521,"results":"59","hashOfConfig":"40"},{"size":10347,"mtime":1743082134540,"results":"60","hashOfConfig":"40"},{"size":7974,"mtime":1743162522069,"results":"61","hashOfConfig":"40"},{"size":9418,"mtime":1743082134541,"results":"62","hashOfConfig":"40"},{"size":9544,"mtime":1743082134531,"results":"63","hashOfConfig":"40"},{"size":9284,"mtime":1743082134544,"results":"64","hashOfConfig":"40"},{"size":8837,"mtime":1743082134523,"results":"65","hashOfConfig":"40"},{"size":8902,"mtime":1743082134536,"results":"66","hashOfConfig":"40"},{"size":9289,"mtime":1743082134532,"results":"67","hashOfConfig":"40"},{"size":9272,"mtime":1743082134534,"results":"68","hashOfConfig":"40"},{"size":9346,"mtime":1743082134526,"results":"69","hashOfConfig":"40"},{"size":9461,"mtime":1743082134515,"results":"70","hashOfConfig":"40"},{"size":9291,"mtime":1743082134525,"results":"71","hashOfConfig":"40"},{"size":14218,"mtime":1743082134522,"results":"72","hashOfConfig":"40"},{"size":6787,"mtime":1743082134537,"results":"73","hashOfConfig":"40"},{"size":9509,"mtime":1743082134543,"results":"74","hashOfConfig":"40"},{"size":1004,"mtime":1743082134546,"results":"75","hashOfConfig":"40"},{"size":521,"mtime":1743162686645,"results":"76","hashOfConfig":"40"},{"size":4010,"mtime":1743082134550,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},"8kzuy8",{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184"},"C:\\Users\\gamaliel.dashua\\IdeaProjects\\Report-Module\\src\\index.js",["185"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter, MemoryRouter as Router,} from 'react-router-dom';\r\n\r\nimport reportWebVitals from \"./../src/main/webapp/reportWebVitals\";\r\nimport SimpleReactLightbox from \"simple-react-lightbox\";\r\nimport  ThemeContext  from \"./../src/main/webapp/context/ThemeContext\"; \r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\r\n            <SimpleReactLightbox>\r\n                <BrowserRouter basename='/'>\r\n                    <ThemeContext>\r\n                        <App />\r\n                    </ThemeContext>  \r\n                </BrowserRouter>\r\n            </SimpleReactLightbox>\r\n\r\n\t</React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\nreportWebVitals();\r\n","C:\\Users\\gamaliel.dashua\\IdeaProjects\\Report-Module\\src\\main\\webapp\\reportWebVitals.js",[],"C:\\Users\\gamaliel.dashua\\IdeaProjects\\Report-Module\\src\\App.js",[],"C:\\Users\\gamaliel.dashua\\IdeaProjects\\Report-Module\\src\\main\\webapp\\context\\ThemeContext.js",[],"C:\\Users\\gamaliel.dashua\\IdeaProjects\\Report-Module\\src\\main\\webapp\\context\\ThemeDemo.js",[],"C:\\Users\\gamaliel.dashua\\IdeaProjects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Home.js",[],"C:\\Users\\gamaliel.dashua\\IdeaProjects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Visualisation\\Index.js",["186","187","188","189","190"],"import React, { useState } from \"react\";\r\nimport {Card,CardBody,} from \"reactstrap\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {  Icon, Button, Breadcrumb} from 'semantic-ui-react';\r\nimport {Form,Row,Col,FormGroup,Label,Input, FormFeedback} from 'reactstrap';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    root: {\r\n        '& > *': {\r\n          margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}))\r\n\r\nconst GenerateCharts = (props) => {\r\n    const classes = useStyles()\r\n    const [loading, setLoading] = useState(false)\r\n\r\n\r\n  return (\r\n    <div >\r\n        <Card >\r\n         <CardBody>\r\n\r\n                 <Row style={{ marginTop: '20px'}}>\r\n  \r\n                    <Col md=\"3\">\r\n                    <FormGroup>\r\n                        <Label>Data Category </Label>\r\n                            <Input\r\n                                type=\"select\"\r\n                                name=\"category\"\r\n                                id=\"category\"\r\n                              \r\n                            >\r\n                                <option value=\"\"></option>\r\n                                <option value=\"indicator\"> Indicator </option>\r\n\r\n                            </Input>\r\n\r\n                    </FormGroup>\r\n                    </Col>\r\n                    <Col md=\"3\">\r\n                    <FormGroup>\r\n                        <Label>Chart Type </Label>\r\n                            <Input\r\n                                type=\"select\"\r\n                                name=\"chart_type\"\r\n                                id=\"chart_type\"\r\n                               \r\n                            >\r\n                                <option value=\"\"></option>\r\n                                <option value=\"column\"> Pie Chart</option>\r\n                                <option value=\"column\"> Bar Chart</option>\r\n                                <option value=\"column\"> Column Chart </option>\r\n                                <option value=\"column\"> Line Chart</option>\r\n                                <option value=\"column\"> Area Chart </option>\r\n                            </Input>\r\n\r\n                    </FormGroup>\r\n                    </Col>\r\n                    <Col md=\"3\">\r\n                    <FormGroup>\r\n                        <Label>Gender </Label>\r\n                            <Input\r\n                                type=\"select\"\r\n                                name=\"gender\"\r\n                                id=\"gender\"\r\n                              \r\n                            >\r\n                                <option value=\"\">All</option>\r\n                                <option value=\"Male\">Male </option>\r\n                                <option value=\"Female\"> Female </option>\r\n                               \r\n                            </Input>\r\n\r\n                    </FormGroup>\r\n                    </Col>\r\n                    <Col md=\"3\">\r\n                     <FormGroup>\r\n                            <Label for=\"exampleSelect\">Age Disaggregation</Label>\r\n                                <Input type=\"text\" name=\"age_disaggregation\" id=\"age_disaggregation\"  >\r\n                                    \r\n                                </Input>\r\n                                    <FormFeedback></FormFeedback>\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col md=\"3\">\r\n                    <FormGroup>\r\n                        <Label>Data Element </Label>\r\n                            <Input\r\n                                type=\"select\"\r\n                                name=\"data_element\"\r\n                                id=\"data_element\"\r\n                                \r\n                            >\r\n\r\n                                <option value=\"\"></option>\r\n                                <option value=\"TX_CURR\">TX_CURR </option>\r\n                                <option value=\"TX_NEW\">TX_NEW </option>\r\n                                <option value=\"PVLS_D\">PVLS_D </option>\r\n                                <option value=\"PVLS_N\">PVLS_N </option>\r\n                                <option value=\"HTS_POS\">HTS_POS </option>\r\n                                <option value=\"HTS\">HTS </option>\r\n\r\n                            </Input>\r\n\r\n                    </FormGroup>\r\n                    </Col>\r\n\r\n                    <Col md=\"3\">\r\n                    <FormGroup>\r\n                        <Label>Start Date </Label>\r\n                        <Input\r\n                            type=\"date\"\r\n                            name=\"data_element\"\r\n                            id=\"data_element\"                                \r\n                        />\r\n                    </FormGroup>\r\n                    </Col>\r\n                    <Col md=\"3\">\r\n                    <FormGroup>\r\n                        <Label>End Date </Label>\r\n                        <Input\r\n                            type=\"date\"\r\n                            name=\"data_element\"\r\n                            id=\"data_element\"                                \r\n                        /> \r\n                    </FormGroup>\r\n                    </Col>\r\n                   \r\n                    <Col style={{ marginTop: '20px'}}>\r\n                    <Button icon labelPosition='right' color='blue' >\r\n                        Generate Chart Report\r\n                    <Icon name='right arrow' />\r\n                    </Button>\r\n                    </Col>\r\n                    </Row>\r\n               \r\n                 \r\n            </CardBody>\r\n        </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GenerateCharts;\r\n\r\n\r\n\r\n","C:\\Users\\gamaliel.dashua\\IdeaProjects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\Index.js",["191","192","193"],"import React, { useState } from 'react';\r\nimport { Card, CardBody } from 'reactstrap';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport 'react-phone-input-2/lib/style.css';\r\nimport { Menu } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport PatientLineList from './PatientLineList';\r\nimport Appointment from './Appointment';\r\nimport Radet from './Radet';\r\nimport BiometricReport from './BiometricReport';\r\nimport PharmacyReport from './PharmacyReport';\r\nimport LaboratoryReport from './LaboratoryReport';\r\nimport HTSReport from './HTSReport';\r\nimport HtsRegister from './HtsRegister';\r\nimport PrepReport from './PrepReport';\r\nimport ClinicData from './ClinicData';\r\nimport ClientVerification from './ClientVerification';\r\nimport TbReport from './TbReport';\r\nimport IndexElicitation from './IndexElicitation';\r\nimport PmtctHtsReport from './PmtctHtsReport';\r\nimport PmtctMaternalCohortReport from './PmtctMaternalCohortReport';\r\nimport NcdReport from './NcdReport';\r\nimport EACReport from './EACReport';\r\nimport AhdReport from './AhdReport';\r\nimport PrepLongitudinalReport from './PrepLongitudinalReport';\r\nimport MhpssReport from './MhpssReport';\r\nimport KpPrevReport from './KpPrevReport';\r\nimport HIVST from './HIVSTReport';\r\nimport HTSIndexReport from './HTSIndexReport';\r\nimport CustomReport from './CustomReport';\r\nimport ADRReport from './ADRReport';\r\nimport PMTCTMonthlySummaryReport from './PMTCTMonthlySummaryReport';\r\nimport Accordion from '@mui/material/Accordion';\r\nimport AccordionDetails from '@mui/material/AccordionDetails';\r\nimport AccordionSummary from '@mui/material/AccordionSummary';\r\nimport Typography from '@mui/material/Typography';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport Divider from '@mui/material/Divider';\r\nimport PrEPMSF from './PrEPMSF';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  error: {\r\n    color: '#f85032',\r\n    fontSize: '12.8px',\r\n  },\r\n  success: {\r\n    color: '#4BB543 ',\r\n    fontSize: '11px',\r\n  },\r\n}));\r\n\r\nconst Reports = props => {\r\n  const classes = useStyles();\r\n  const [activeItem, setactiveItem] = useState('basic');\r\n  const [activeItem1, setActiveItem1] = useState('basic');\r\n  const [expanded, setExpanded] = React.useState(false);\r\n\r\n  const [completed, setCompleted] = useState([]);\r\n  const handleItemClick = activeItem => {\r\n    setactiveItem(activeItem);\r\n  };\r\n\r\n  const handleChange = panel => (event, isExpanded) => {\r\n    setExpanded(isExpanded ? panel : false);\r\n  };\r\n\r\n  const handleItemClick1 = value => {\r\n    setActiveItem1(value);\r\n    console.log(value); // This should print the selected option\r\n  };\r\n\r\n  const reportMsfs = [\r\n    { key: 'prep-msf', value: 'prep-msf', text: 'PrEP Monthly Summary Form' },\r\n  ];\r\n\r\n  const reportSurveillance = [\r\n    { key: 'hts-report', value: 'hts-report', text: 'HTS REPORT' },\r\n    { key: 'hts-register', value: 'hts-register', text: 'HTS REGISTER' },\r\n    { key: 'hivst-report', value: 'hivst-report', text: 'HIVST REPORT' },\r\n    {\r\n      key: 'hts-index-report',\r\n      value: 'hts-index-report',\r\n      text: 'HTS INDEX REPORT',\r\n    },\r\n  ];\r\n\r\n  const reportBiometric = [\r\n    { key: 'biometric', value: 'biometric', text: 'BIOMETRIC DATA' },\r\n  ];\r\n  const monthSummaryReport = [\r\n    { key: 'PMTCT-MSF', value: 'PMTCT-MSF', text: 'PMTCT Monthly Summary' },\r\n  ];\r\n  const reportPrevention = [\r\n    { key: 'prep-report', value: 'prep-report', text: 'PrEP-PBFW Report' },\r\n    {\r\n      key: 'prep-longitudinal-report',\r\n      value: 'prep-longitudinal-report',\r\n      text: 'PrEP LONGITUDINAL REPORT',\r\n    },\r\n    { key: 'kp-prev-report', value: 'kp-prev-report', text: 'KP PREV REPORT' },\r\n  ];\r\n\r\n  const reportPMTCT = [\r\n    { key: 'pmtct-hts', value: 'pmtct-hts', text: 'PMTCT HTS' },\r\n    {\r\n      key: 'pmtct-maternal-cohort',\r\n      value: 'pmtct-maternal-cohort',\r\n      text: 'PMTCT MATERNAL COHORT',\r\n    },\r\n  ];\r\n\r\n  const reportPsychosocial = [\r\n    { key: 'mhpss-report', value: 'mhpss-report', text: 'MHPSS Report' },\r\n  ];\r\n\r\n  const reportOptions = [\r\n    { key: 'radet', value: 'radet', text: 'RADET' },\r\n    { key: 'appointment', value: 'appointment', text: 'APPOINTMENT' },\r\n    { key: 'line-list', value: 'line-list', text: 'PATIENT LINE LIST' },\r\n    { key: 'pharmacy-report', value: 'pharmacy-report', text: 'PHARMACY DATA' },\r\n    {\r\n      key: 'laboratory-report',\r\n      value: 'laboratory-report',\r\n      text: 'LABORATORY DATA',\r\n    },\r\n    {\r\n      key: 'clinic-data-report',\r\n      value: 'clinic-data-report',\r\n      text: 'CLINIC DATA REPORT',\r\n    },\r\n    {\r\n      key: 'client-verification',\r\n      value: 'client-verification',\r\n      text: 'CLIENT VERIFICATION',\r\n    },\r\n    { key: 'tb-report', value: 'tb-report', text: 'TB REPORT' },\r\n    { key: 'ncd-report', value: 'ncd-report', text: 'NCD Report' },\r\n    { key: 'eac-report', value: 'eac-report', text: 'EAC Report' },\r\n    // { key: 'index-elicitation', value: 'index-elicitation', text: 'INDEX ELICITATION' },\r\n    { key: 'ahd-report', value: 'ahd-report', text: 'AHD REPORT' },\r\n    { key: 'adr-report', value: 'adr-report', text: 'ADR REPORT' },\r\n    { key: 'custom-report', value: 'custom-report', text: 'CUSTOM REPORT' },\r\n  ];\r\n\r\n  const renderComponent = () => {\r\n    switch (activeItem1) {\r\n      case 'radet':\r\n        return (\r\n          <Radet\r\n            handleItemClick={handleItemClick1}\r\n            setCompleted={setCompleted}\r\n            completed={completed}\r\n          />\r\n        );\r\n      case 'appointment':\r\n        return (\r\n          <Appointment\r\n            handleItemClick={handleItemClick1}\r\n            setCompleted={setCompleted}\r\n            completed={completed}\r\n          />\r\n        );\r\n      case 'line-list':\r\n        return (\r\n          <PatientLineList\r\n            handleItemClick={handleItemClick1}\r\n            setCompleted={setCompleted}\r\n            completed={completed}\r\n          />\r\n        );\r\n      case 'pharmacy-report':\r\n        return (\r\n          <PharmacyReport\r\n            handleItemClick={handleItemClick1}\r\n            setCompleted={setCompleted}\r\n            completed={completed}\r\n          />\r\n        );\r\n\r\n      case 'biometric':\r\n        return (\r\n          <BiometricReport\r\n            handleItemClick={handleItemClick1}\r\n            setCompleted={setCompleted}\r\n            completed={completed}\r\n          />\r\n        );\r\n      case 'laboratory-report':\r\n        return (\r\n          <LaboratoryReport\r\n            handleItemClick={handleItemClick1}\r\n            setCompleted={setCompleted}\r\n            completed={completed}\r\n          />\r\n        );\r\n      case 'tb-report':\r\n        return (\r\n          <TbReport\r\n            handleItemClick={handleItemClick1}\r\n            setCompleted={setCompleted}\r\n            completed={completed}\r\n          />\r\n        );\r\n      case 'ncd-report':\r\n        return (\r\n          <NcdReport\r\n            handleItemClick={handleItemClick1}\r\n            setCompleted={setCompleted}\r\n            completed={completed}\r\n          />\r\n        );\r\n\r\n      case 'eac-report':\r\n        return (\r\n          <EACReport\r\n            handleItemClick={handleItemClick1}\r\n            setCompleted={setCompleted}\r\n            completed={completed}\r\n          />\r\n        );\r\n      case 'hts-report':\r\n        return (\r\n          <HTSReport\r\n            handleItemClick={handleItemClick1}\r\n            setCompleted={setCompleted}\r\n            completed={completed}\r\n          />\r\n        );\r\n      case 'hts-register':\r\n        return (\r\n          <HtsRegister\r\n            handleItemClick={handleItemClick1}\r\n            setCompleted={setCompleted}\r\n            completed={completed}\r\n          />\r\n        );\r\n\r\n      case 'prep-report':\r\n        return (\r\n          <PrepReport\r\n            handleItemClick={handleItemClick1}\r\n            setCompleted={setCompleted}\r\n            completed={completed}\r\n          />\r\n        );\r\n      case 'prep-longitudinal-report':\r\n        return (\r\n          <PrepLongitudinalReport\r\n            handleItemClick={handleItemClick1}\r\n            setCompleted={setCompleted}\r\n            completed={completed}\r\n          />\r\n        );\r\n      case 'clinic-data-report':\r\n        return (\r\n          <ClinicData\r\n            handleItemClick={handleItemClick1}\r\n            setCompleted={setCompleted}\r\n            completed={completed}\r\n          />\r\n        );\r\n\r\n      case 'client-verification':\r\n        return (\r\n          <ClientVerification\r\n            handleItemClick={handleItemClick1}\r\n            setCompleted={setCompleted}\r\n            completed={completed}\r\n          />\r\n        );\r\n      case 'index-elicitation':\r\n        return (\r\n          <IndexElicitation\r\n            handleItemClick={handleItemClick1}\r\n            setCompleted={setCompleted}\r\n            completed={completed}\r\n          />\r\n        );\r\n      case 'pmtct-hts':\r\n        return (\r\n          <PmtctHtsReport\r\n            handleItemClick={handleItemClick1}\r\n            setCompleted={setCompleted}\r\n            completed={completed}\r\n          />\r\n        );\r\n\r\n      case 'pmtct-maternal-cohort':\r\n        return (\r\n          <PmtctMaternalCohortReport\r\n            handleItemClick={handleItemClick1}\r\n            setCompleted={setCompleted}\r\n            completed={completed}\r\n          />\r\n        );\r\n      case 'ahd-report':\r\n        return (\r\n          <AhdReport\r\n            handleItemClick={handleItemClick1}\r\n            setCompleted={setCompleted}\r\n            completed={completed}\r\n          />\r\n        );\r\n      case 'mhpss-report':\r\n        return (\r\n          <MhpssReport\r\n            handleItemClick={handleItemClick1}\r\n            setCompleted={setCompleted}\r\n            completed={completed}\r\n          />\r\n        );\r\n\r\n      case 'kp-prev-report':\r\n        return (\r\n          <KpPrevReport\r\n            handleItemClick={handleItemClick1}\r\n            setCompleted={setCompleted}\r\n            completed={completed}\r\n          />\r\n        );\r\n      case 'hivst-report':\r\n        return (\r\n          <HIVST\r\n            handleItemClick={handleItemClick1}\r\n            setCompleted={setCompleted}\r\n            completed={completed}\r\n          />\r\n        );\r\n      case 'hts-index-report':\r\n        return (\r\n          <HTSIndexReport\r\n            handleItemClick={handleItemClick1}\r\n            setCompleted={setCompleted}\r\n            completed={completed}\r\n          />\r\n        );\r\n\r\n      case 'adr-report':\r\n        return (\r\n          <ADRReport\r\n            handleItemClick={handleItemClick1}\r\n            setCompleted={setCompleted}\r\n            completed={completed}\r\n          />\r\n        );\r\n      case 'custom-report':\r\n        return (\r\n          <CustomReport\r\n            handleItemClick={handleItemClick1}\r\n            setCompleted={setCompleted}\r\n            completed={completed}\r\n          />\r\n        );\r\n      case 'PMTCT-MSF':\r\n        return (\r\n          <PMTCTMonthlySummaryReport\r\n            handleItemClick={handleItemClick1}\r\n            setCompleted={setCompleted}\r\n            completed={completed}\r\n          />\r\n        );\r\n      case 'prep-msf':\r\n        return (\r\n          <PrEPMSF\r\n            handleItemClick={handleItemClick1}\r\n            setCompleted={setCompleted}\r\n            completed={completed}\r\n          />\r\n        );\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer autoClose={3000} hideProgressBar />\r\n      <Card>\r\n        <CardBody>\r\n          <div className=\"row\">\r\n            <form>\r\n              <br />\r\n              <br />\r\n              <div className=\"col-md-3 float-start\">\r\n                <Menu\r\n                  size=\"large\"\r\n                  vertical\r\n                  style={{ backgroundColor: '#014D88' }}\r\n                >\r\n                  <Menu.Item\r\n                    name=\"inbox\"\r\n                    style={{\r\n                      backgroundColor: '#000',\r\n                    }}\r\n                  >\r\n                    <span style={{ color: '#fff' }}>\r\n                      {' '}\r\n                      Search all Report below{' '}\r\n                    </span>\r\n                  </Menu.Item>\r\n\r\n                  <Accordion\r\n                    expanded={expanded === 'panel2'}\r\n                    onChange={handleChange('panel2')}\r\n                    style={{ backgroundColor: '#014D88' }}\r\n                  >\r\n                    <AccordionSummary\r\n                      expandIcon={<ExpandMoreIcon />}\r\n                      aria-controls=\"panel2bh-content\"\r\n                      id=\"panel2bh-header\"\r\n                    >\r\n                      <Typography sx={{ marginTop: 0, color: '#fff' }}>\r\n                        Surveillance Report\r\n                      </Typography>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails\r\n                      style={{\r\n                        paddingTop: 0,\r\n                        marginTop: 0,\r\n                        backgroundColor: '#014D88',\r\n                      }}\r\n                    >\r\n                      {Object.values(reportSurveillance).map(option => (\r\n                        <div\r\n                          style={{\r\n                            marginTop: '10px',\r\n                            marginLeft: '10px',\r\n                            display: 'flex',\r\n                            justifyContent: 'flex-start',\r\n                            alignItems: 'center',\r\n                          }}\r\n                        >\r\n                          <div\r\n                            style={{\r\n                              width: '10px',\r\n                              height: '10px',\r\n                              backgroundColor: 'white',\r\n                              borderRadius: '50%',\r\n                            }}\r\n                          />\r\n                          <Typography>\r\n                            <div\r\n                              style={{\r\n                                cursor: 'pointer',\r\n                                marginBottom: '0px',\r\n                                marginLeft: '10px',\r\n                                color:\r\n                                  activeItem1 === option.value\r\n                                    ? 'grey'\r\n                                    : '#fff',\r\n                              }}\r\n                              onClick={() => handleItemClick1(option.value)}\r\n                              key={option.key}\r\n                            >\r\n                              {option.text}\r\n                            </div>\r\n                          </Typography>\r\n                          <Divider\r\n                            orientation={'horizontal'}\r\n                            variant=\"fullWidth\"\r\n                            component=\"li\"\r\n                          />\r\n                        </div>\r\n                      ))}\r\n                    </AccordionDetails>\r\n                  </Accordion>\r\n\r\n                  <Accordion\r\n                    expanded={expanded === 'panel1'}\r\n                    onChange={handleChange('panel1')}\r\n                    style={{ backgroundColor: '#014D88' }}\r\n                  >\r\n                    <AccordionSummary\r\n                      expandIcon={<ExpandMoreIcon />}\r\n                      aria-controls=\"panel1bh-content\"\r\n                      id=\"panel1bh-header\"\r\n                      sx={{ marginTop: 0 }}\r\n                    >\r\n                      <Typography sx={{ marginTop: 0, color: '#fff' }}>\r\n                        Treatment Report\r\n                      </Typography>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails\r\n                      style={{\r\n                        paddingTop: 0,\r\n                        marginTop: 0,\r\n                        backgroundColor: '#014D88',\r\n                      }}\r\n                    >\r\n                      {Object.values(reportOptions).map(option => (\r\n                        <div\r\n                          style={{\r\n                            marginTop: '10px',\r\n                            marginLeft: '10px',\r\n                            display: 'flex',\r\n                            justifyContent: 'flex-start',\r\n                            alignItems: 'center',\r\n                          }}\r\n                        >\r\n                          <div\r\n                            style={{\r\n                              width: '10px',\r\n                              height: '10px',\r\n                              backgroundColor: 'white',\r\n                              borderRadius: '50%',\r\n                            }}\r\n                          />\r\n                          <Typography>\r\n                            <div\r\n                              style={{\r\n                                cursor: 'pointer',\r\n                                marginBottom: '0px',\r\n                                marginLeft: '10px',\r\n                                color:\r\n                                  activeItem1 === option.value\r\n                                    ? 'grey'\r\n                                    : '#fff',\r\n                              }}\r\n                              onClick={() => handleItemClick1(option.value)}\r\n                              key={option.key}\r\n                            >\r\n                              {option.text}\r\n                            </div>\r\n                          </Typography>\r\n                          <Divider\r\n                            orientation={'horizontal'}\r\n                            variant=\"fullWidth\"\r\n                            component=\"li\"\r\n                          />\r\n                        </div>\r\n                      ))}\r\n                    </AccordionDetails>\r\n                  </Accordion>\r\n\r\n                  <Accordion\r\n                    expanded={expanded === 'panel3'}\r\n                    onChange={handleChange('panel3')}\r\n                    style={{ backgroundColor: '#014D88' }}\r\n                  >\r\n                    <AccordionSummary\r\n                      expandIcon={<ExpandMoreIcon />}\r\n                      aria-controls=\"panel3bh-content\"\r\n                      id=\"panel3bh-header\"\r\n                    >\r\n                      <Typography sx={{ flexShrink: 0, color: '#fff' }}>\r\n                        Biometric Report\r\n                      </Typography>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails\r\n                      style={{\r\n                        paddingTop: 0,\r\n                        marginTop: 0,\r\n                        backgroundColor: '#014D88',\r\n                      }}\r\n                    >\r\n                      {Object.values(reportBiometric).map(option => (\r\n                        <div\r\n                          style={{\r\n                            marginTop: '10px',\r\n                            marginLeft: '10px',\r\n                            display: 'flex',\r\n                            justifyContent: 'flex-start',\r\n                            alignItems: 'center',\r\n                          }}\r\n                        >\r\n                          <div\r\n                            style={{\r\n                              width: '10px',\r\n                              height: '10px',\r\n                              backgroundColor: 'white',\r\n                              borderRadius: '50%',\r\n                            }}\r\n                          />\r\n                          <Typography>\r\n                            <div\r\n                              style={{\r\n                                cursor: 'pointer',\r\n                                marginBottom: '0px',\r\n                                marginLeft: '10px',\r\n                                color:\r\n                                  activeItem1 === option.value\r\n                                    ? 'grey'\r\n                                    : '#fff',\r\n                              }}\r\n                              onClick={() => handleItemClick1(option.value)}\r\n                              key={option.key}\r\n                            >\r\n                              {option.text}\r\n                            </div>\r\n                          </Typography>\r\n                          <Divider\r\n                            orientation={'horizontal'}\r\n                            variant=\"fullWidth\"\r\n                            component=\"li\"\r\n                          />\r\n                        </div>\r\n                      ))}\r\n                    </AccordionDetails>\r\n                  </Accordion>\r\n\r\n                  <Accordion\r\n                    expanded={expanded === 'panel4'}\r\n                    onChange={handleChange('panel4')}\r\n                    style={{ backgroundColor: '#014D88' }}\r\n                  >\r\n                    <AccordionSummary\r\n                      expandIcon={<ExpandMoreIcon />}\r\n                      aria-controls=\"panel3bh-content\"\r\n                      id=\"panel3bh-header\"\r\n                    >\r\n                      <Typography sx={{ flexShrink: 0, color: '#fff' }}>\r\n                        Prevention Report\r\n                      </Typography>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails\r\n                      style={{\r\n                        paddingTop: 0,\r\n                        marginTop: 0,\r\n                        backgroundColor: '#014D88',\r\n                      }}\r\n                    >\r\n                      {Object.values(reportPrevention).map(option => (\r\n                        <div\r\n                          style={{\r\n                            marginTop: '10px',\r\n                            marginLeft: '10px',\r\n                            display: 'flex',\r\n                            justifyContent: 'flex-start',\r\n                            alignItems: 'center',\r\n                          }}\r\n                        >\r\n                          <div\r\n                            style={{\r\n                              width: '10px',\r\n                              height: '10px',\r\n                              backgroundColor: 'white',\r\n                              borderRadius: '50%',\r\n                            }}\r\n                          />\r\n                          <Typography>\r\n                            <div\r\n                              style={{\r\n                                cursor: 'pointer',\r\n                                marginBottom: '0px',\r\n                                marginLeft: '10px',\r\n                                color:\r\n                                  activeItem1 === option.value\r\n                                    ? 'grey'\r\n                                    : '#fff',\r\n                              }}\r\n                              onClick={() => handleItemClick1(option.value)}\r\n                              key={option.key}\r\n                            >\r\n                              {option.text}\r\n                            </div>\r\n                          </Typography>\r\n                          <Divider\r\n                            orientation={'horizontal'}\r\n                            variant=\"fullWidth\"\r\n                            component=\"li\"\r\n                          />\r\n                        </div>\r\n                      ))}\r\n                    </AccordionDetails>\r\n                  </Accordion>\r\n                  <Accordion\r\n                    expanded={expanded === 'panel5'}\r\n                    onChange={handleChange('panel5')}\r\n                    style={{ backgroundColor: '#014D88' }}\r\n                  >\r\n                    <AccordionSummary\r\n                      expandIcon={<ExpandMoreIcon />}\r\n                      aria-controls=\"panel3bh-content\"\r\n                      id=\"panel3bh-header\"\r\n                    >\r\n                      <Typography sx={{ flexShrink: 0, color: '#fff' }}>\r\n                        PMTCT Report\r\n                      </Typography>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails\r\n                      style={{\r\n                        paddingTop: 0,\r\n                        marginTop: 0,\r\n                        backgroundColor: '#014D88',\r\n                      }}\r\n                    >\r\n                      {Object.values(reportPMTCT).map(option => (\r\n                        <div\r\n                          style={{\r\n                            marginTop: '10px',\r\n                            marginLeft: '10px',\r\n                            display: 'flex',\r\n                            justifyContent: 'flex-start',\r\n                            alignItems: 'center',\r\n                          }}\r\n                        >\r\n                          <div\r\n                            style={{\r\n                              width: '10px',\r\n                              height: '10px',\r\n                              backgroundColor: 'white',\r\n                              borderRadius: '50%',\r\n                            }}\r\n                          />\r\n                          <Typography>\r\n                            <div\r\n                              style={{\r\n                                cursor: 'pointer',\r\n                                marginBottom: '0px',\r\n                                marginLeft: '10px',\r\n                                color:\r\n                                  activeItem1 === option.value\r\n                                    ? 'grey'\r\n                                    : '#fff',\r\n                              }}\r\n                              onClick={() => handleItemClick1(option.value)}\r\n                              key={option.key}\r\n                            >\r\n                              {option.text}\r\n                            </div>\r\n                          </Typography>\r\n                          <Divider\r\n                            orientation={'horizontal'}\r\n                            variant=\"fullWidth\"\r\n                            component=\"li\"\r\n                          />\r\n                        </div>\r\n                      ))}\r\n                    </AccordionDetails>\r\n                  </Accordion>\r\n                  <Accordion\r\n                    expanded={expanded === 'panel6'}\r\n                    onChange={handleChange('panel6')}\r\n                    style={{ backgroundColor: '#014D88' }}\r\n                  >\r\n                    <AccordionSummary\r\n                      expandIcon={<ExpandMoreIcon />}\r\n                      aria-controls=\"panel3bh-content\"\r\n                      id=\"panel3bh-header\"\r\n                    >\r\n                      <Typography sx={{ flexShrink: 0, color: '#fff' }}>\r\n                        Psychosocial Report\r\n                      </Typography>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails\r\n                      style={{\r\n                        paddingTop: 0,\r\n                        marginTop: 0,\r\n                        backgroundColor: '#014D88',\r\n                      }}\r\n                    >\r\n                      {Object.values(reportPsychosocial).map(option => (\r\n                        <div\r\n                          style={{\r\n                            marginTop: '10px',\r\n                            marginLeft: '10px',\r\n                            display: 'flex',\r\n                            justifyContent: 'flex-start',\r\n                            alignItems: 'center',\r\n                          }}\r\n                        >\r\n                          <div\r\n                            style={{\r\n                              width: '10px',\r\n                              height: '10px',\r\n                              backgroundColor: 'white',\r\n                              borderRadius: '50%',\r\n                            }}\r\n                          />\r\n                          <Typography>\r\n                            <div\r\n                              style={{\r\n                                cursor: 'pointer',\r\n                                marginBottom: '0px',\r\n                                marginLeft: '10px',\r\n                                color:\r\n                                  activeItem1 === option.value\r\n                                    ? 'grey'\r\n                                    : '#fff',\r\n                              }}\r\n                              onClick={() => handleItemClick1(option.value)}\r\n                              key={option.key}\r\n                            >\r\n                              {option.text}\r\n                            </div>\r\n                          </Typography>\r\n                          <Divider\r\n                            orientation={'horizontal'}\r\n                            variant=\"fullWidth\"\r\n                            component=\"li\"\r\n                          />\r\n                        </div>\r\n                      ))}\r\n                    </AccordionDetails>\r\n                  </Accordion>\r\n\r\n                  <Accordion\r\n                    expanded={expanded === 'panel7'}\r\n                    onChange={handleChange('panel7')}\r\n                    style={{ backgroundColor: '#014D88' }}\r\n                  >\r\n                    <AccordionSummary\r\n                      expandIcon={<ExpandMoreIcon />}\r\n                      aria-controls=\"panel3bh-content\"\r\n                      id=\"panel3bh-header\"\r\n                    >\r\n                      <Typography sx={{ flexShrink: 0, color: '#fff' }}>\r\n                        Monthly Summary Form Report\r\n                      </Typography>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails\r\n                      style={{\r\n                        paddingTop: 0,\r\n                        marginTop: 0,\r\n                        backgroundColor: '#014D88',\r\n                      }}\r\n                    >\r\n                      {Object.values(reportMsfs).map(option => (\r\n                        <div\r\n                          style={{\r\n                            marginTop: '10px',\r\n                            marginLeft: '10px',\r\n                            display: 'flex',\r\n                            justifyContent: 'flex-start',\r\n                            alignItems: 'center',\r\n                          }}\r\n                        >\r\n                          <div\r\n                            style={{\r\n                              width: '10px',\r\n                              height: '10px',\r\n                              backgroundColor: 'white',\r\n                              borderRadius: '50%',\r\n                            }}\r\n                          />\r\n                          <Typography>\r\n                            <div\r\n                              style={{\r\n                                cursor: 'pointer',\r\n                                marginBottom: '0px',\r\n                                marginLeft: '10px',\r\n                                color:\r\n                                  activeItem1 === option.value\r\n                                    ? 'grey'\r\n                                    : '#fff',\r\n                              }}\r\n                              onClick={() => handleItemClick1(option.value)}\r\n                              key={option.key}\r\n                            >\r\n                              {option.text}\r\n                            </div>\r\n                          </Typography>\r\n                          <Divider\r\n                            orientation={'horizontal'}\r\n                            variant=\"fullWidth\"\r\n                            component=\"li\"\r\n                          />\r\n                        </div>\r\n                      ))}\r\n                    </AccordionDetails>\r\n                  </Accordion>\r\n\r\n                  {/* monthly Summary Form Accordion */}\r\n                  {/* <Accordion expanded={expanded === 'panel7'} onChange={handleChange('panel7')} style={{ backgroundColor: \"#014D88\" }}>\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel3bh-content\"\r\n          id=\"panel3bh-header\"\r\n        >\r\n         \r\n          <Typography sx={{  flexShrink: 0, color: \"#fff\" }}>\r\n          Select Monthly Summary Report\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{paddingTop: 0, marginTop:0, backgroundColor: \"#014D88\" }}>\r\n          {Object.values(monthSummaryReport).map((option) => (<div style={{marginTop:\"10px\", marginLeft: \"10px\", display:\"flex\", justifyContent:\"flex-start\", alignItems:\"center\"}}>\r\n            <div style={{width:\"10px\", height:\"10px\", backgroundColor:\"white\", borderRadius:\"50%\"}}/>\r\n    <Typography><div style={{cursor:\"pointer\", marginBottom: \"0px\",  marginLeft: \"10px\", color: \"#fff\"}} onClick={() => handleItemClick1(option.value)} key={option.key}>{option.text}</div></Typography>\r\n    <Divider orientation={\"horizontal\"} variant=\"fullWidth\" component=\"li\"/></div>\r\n  ))}\r\n        </AccordionDetails>\r\n      </Accordion> */}\r\n                  {/*End of monthly Summary Form Accordion  Accordion  */}\r\n\r\n                  <br />\r\n\r\n                  <Menu.Item\r\n                    name=\"inbox\"\r\n                    style={{\r\n                      backgroundColor: '#000',\r\n                    }}\r\n                  >\r\n                    <span style={{ color: '#fff' }}> Basic Report below </span>\r\n                  </Menu.Item>\r\n\r\n                  <Menu.Item\r\n                    name=\"inbox\"\r\n                    active={activeItem === 'radet'}\r\n                    onClick={() => handleItemClick1('radet')}\r\n                    style={{\r\n                      backgroundColor: activeItem === 'radet' ? '#000' : '',\r\n                    }}\r\n                  >\r\n                    <span style={{ color: '#fff' }}> RADET </span>\r\n                  </Menu.Item>\r\n\r\n                  <Menu.Item\r\n                    name=\"inbox\"\r\n                    active={activeItem === 'biometric'}\r\n                    onClick={() => handleItemClick1('biometric')}\r\n                    style={{\r\n                      backgroundColor: activeItem === 'biometric' ? '#000' : '',\r\n                    }}\r\n                  >\r\n                    <span style={{ color: '#fff' }}>BIOMETRIC DATA</span>\r\n                  </Menu.Item>\r\n\r\n                  <Menu.Item\r\n                    name=\"inbox\"\r\n                    active={activeItem === 'hts-report'}\r\n                    onClick={() => handleItemClick1('hts-report')}\r\n                    style={{\r\n                      backgroundColor:\r\n                        activeItem === 'hts-report' ? '#000' : '',\r\n                    }}\r\n                  >\r\n                    <span style={{ color: '#fff' }}>HTS REPORT</span>\r\n                  </Menu.Item>\r\n\r\n                  <Menu.Item\r\n                    name=\"inbox\"\r\n                    active={activeItem === 'prep-report'}\r\n                    onClick={() => handleItemClick1('prep-report')}\r\n                    style={{\r\n                      backgroundColor:\r\n                        activeItem === 'prep-report' ? '#000' : '',\r\n                    }}\r\n                  >\r\n                    <span style={{ color: '#fff' }}>PrEP-PBFW Report</span>\r\n                  </Menu.Item>\r\n                </Menu>\r\n              </div>\r\n\r\n              <div\r\n                className=\"col-md-9 float-end\"\r\n                style={{ backgroundColor: '#fff' }}\r\n              >\r\n                {renderComponent()}\r\n                {activeItem === 'line-list' && (\r\n                  <PatientLineList\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                  />\r\n                )}\r\n                {activeItem === 'appointment' && (\r\n                  <Appointment\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                  />\r\n                )}\r\n                {activeItem === 'radet' && (\r\n                  <Radet\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                  />\r\n                )}\r\n\r\n                {activeItem === 'biometric' && (\r\n                  <BiometricReport\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                  />\r\n                )}\r\n                {activeItem === 'pharmacy-report' && (\r\n                  <PharmacyReport\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                  />\r\n                )}\r\n                {activeItem === 'laboratory-report' && (\r\n                  <LaboratoryReport\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                  />\r\n                )}\r\n\r\n                {activeItem === 'tb-report' && (\r\n                  <TbReport\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                  />\r\n                )}\r\n                {activeItem === 'ncd-report' && (\r\n                  <NcdReport\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                  />\r\n                )}\r\n\r\n                {activeItem === 'eac-report' && (\r\n                  <EACReport\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                  />\r\n                )}\r\n\r\n                {activeItem === 'hts-report' && (\r\n                  <HTSReport\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                  />\r\n                )}\r\n                {activeItem === 'hts-register' && (\r\n                  <HtsRegister\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                  />\r\n                )}\r\n                {activeItem === 'prep-report' && (\r\n                  <PrepReport\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                  />\r\n                )}\r\n                {activeItem === 'prep-longitudinal-report' && (\r\n                  <PrepLongitudinalReport\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                  />\r\n                )}\r\n                {activeItem === 'clinic-data-report' && (\r\n                  <ClinicData\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                  />\r\n                )}\r\n\r\n                {activeItem === 'client-verification' && (\r\n                  <ClientVerification\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                  />\r\n                )}\r\n                {activeItem === 'index-elicitation' && (\r\n                  <IndexElicitation\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                  />\r\n                )}\r\n                {activeItem === 'pmtct-hts' && (\r\n                  <PmtctHtsReport\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                  />\r\n                )}\r\n                {activeItem === 'pmtct-maternal-cohort' && (\r\n                  <PmtctMaternalCohortReport\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                  />\r\n                )}\r\n                {activeItem === 'ahd-report' && (\r\n                  <AhdReport\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                  />\r\n                )}\r\n                {activeItem === 'mhpss-report' && (\r\n                  <MhpssReport\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                  />\r\n                )}\r\n                {activeItem === 'kp-prev-report' && (\r\n                  <KpPrevReport\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                  />\r\n                )}\r\n                {activeItem === 'hivst-report' && (\r\n                  <HIVST\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                  />\r\n                )}\r\n                {activeItem === 'adr-report' && (\r\n                  <ADRReport\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                  />\r\n                )}\r\n                {activeItem === 'custom-report' && (\r\n                  <CustomReport\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                  />\r\n                )}\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Reports;\r\n","C:\\Users\\gamaliel.dashua\\IdeaProjects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\PharmacyReport.js",["194"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {FormGroup, Label , CardBody} from \"reactstrap\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card} from \"@material-ui/core\";\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { Button} from 'semantic-ui-react'\r\nimport { toast} from \"react-toastify\";\r\nimport FileSaver from \"file-saver\";\r\nimport { Message } from 'semantic-ui-react'\r\nimport ProgressComponent from \"./ProgressComponent\"\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst PharmacyReport = (props) => {\r\n    let currentDate = new Date().toISOString().split('T')[0]\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false)\r\n    const [facilities, setFacilities] = useState([]);\r\n    const [objValues, setObjValues]=useState({       \r\n        organisationUnitId:\"\",\r\n        organisationUnitName:\"\"\r\n    })\r\n    useEffect(() => {\r\n        Facilities()\r\n      }, []);\r\n    const Facilities =()=>{\r\n    axios\r\n        .get(`${baseUrl}account`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setFacilities(response.data.applicationUserOrganisationUnits);\r\n        })\r\n        .catch((error) => {\r\n        });\r\n    \r\n    }\r\n    const handleInputChange = (e) => {\r\n        const selectedOption = e.target.options ? e.target.options[e.target.selectedIndex] : null;\r\n        const selectedValue = e.target.value;\r\n        const name = e.target.name;\r\n      \r\n        setObjValues(prevValues => ({\r\n            ...prevValues,\r\n            [name]: selectedValue,\r\n            organisationUnitName: name === \"organisationUnitId\" && selectedOption ? selectedOption.innerText : prevValues.organisationUnitName,\r\n        }));\r\n      };\r\n      \r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        setLoading(true)\r\n        axios.get(`${baseUrl}reporting/pharmacy/${objValues.organisationUnitId}`,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}, responseType: 'blob'},\r\n          \r\n          )\r\n              .then(response => {\r\n                setLoading(false)\r\n                const fileName = `${objValues.organisationUnitName} Pharmacy ${currentDate}`\r\n                const responseData = response.data\r\n                let blob = new Blob([responseData], {type: \"application/octet-stream\"});\r\n                FileSaver.saveAs(blob, `${fileName}.xlsx`);\r\n                  //toast.success(\" Save successful\");\r\n                  //props.setActiveContent('recent-history')\r\n\r\n              })\r\n              .catch(error => {\r\n                setLoading(false)\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n              });\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            \r\n            <Card >\r\n                <CardBody>\r\n    \r\n                <h2 style={{color:'#000'}}>PHARMACY REPORT</h2>\r\n                <br/>\r\n                    <>\r\n                        <div className=\"row\">\r\n                        \r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>Facility*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"organisationUnitId\"\r\n                                        id=\"organisationUnitId\"\r\n                                        value={objValues.organisationUnitId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {facilities.map((value) => (\r\n                                            <option key={value.id} value={value.organisationUnitId}>\r\n                                                {value.organisationUnitName}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                            <Button type=\"submit\" content='Generate Report' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit} disabled={objValues.organisationUnitId === \"\" || loading} />\r\n                            </div>\r\n                            </div>\r\n\r\n                            {loading && (\r\n                                <Message icon>\r\n                                                  <Message.Content>\r\n                                                        <ProgressComponent/>\r\n                                                  </Message.Content>\r\n                                                </Message>\r\n                            )}\r\n                        </div>\r\n                    </>\r\n\r\n                </CardBody>\r\n            </Card>                                 \r\n        </>\r\n    );\r\n};\r\n\r\nexport default PharmacyReport","C:\\Users\\gamaliel.dashua\\IdeaProjects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\LaboratoryReport.js",["195"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {FormGroup, Label , CardBody} from \"reactstrap\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card} from \"@material-ui/core\";\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { Button} from 'semantic-ui-react'\r\nimport { toast} from \"react-toastify\";\r\nimport FileSaver from \"file-saver\";\r\nimport { Message} from 'semantic-ui-react'\r\nimport ProgressComponent from \"./ProgressComponent\"\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst LaboratoryReport = (props) => {\r\n    let currentDate = new Date().toISOString().split('T')[0]\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false)\r\n    const [facilities, setFacilities] = useState([]);\r\n    const [objValues, setObjValues]=useState({       \r\n        organisationUnitId:\"\",\r\n        organisationUnitName:\"\"\r\n    })\r\n    useEffect(() => {\r\n        Facilities()\r\n      }, []);\r\n    const Facilities =()=>{\r\n    axios\r\n        .get(`${baseUrl}account`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setFacilities(response.data.applicationUserOrganisationUnits);\r\n        })\r\n        .catch((error) => {\r\n        });\r\n    \r\n    }\r\n\r\n    const handleInputChange = (e) => {\r\n        const selectedOption = e.target.options ? e.target.options[e.target.selectedIndex] : null;\r\n        const selectedValue = e.target.value;\r\n        const name = e.target.name;\r\n      \r\n        setObjValues(prevValues => ({\r\n            ...prevValues,\r\n            [name]: selectedValue,\r\n            organisationUnitName: name === \"organisationUnitId\" && selectedOption ? selectedOption.innerText : prevValues.organisationUnitName,\r\n        }));\r\n      };\r\n      \r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        setLoading(true)\r\n        axios.get(`${baseUrl}reporting/laboratory/${objValues.organisationUnitId}`,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}, responseType: 'blob'},\r\n          \r\n          )\r\n              .then(response => {\r\n                setLoading(false)\r\n                const fileName = `${objValues.organisationUnitName} Laboratory ${currentDate}`\r\n                const responseData = response.data\r\n                let blob = new Blob([responseData], {type: \"application/octet-stream\"});\r\n                FileSaver.saveAs(blob, `${fileName}.xlsx`);\r\n\r\n              })\r\n              .catch(error => {\r\n                setLoading(false)\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n              });\r\n    }\r\n    \r\n\r\n    return (\r\n        <>\r\n            \r\n            <Card >\r\n                <CardBody>\r\n                <h2 style={{color:'#000'}}>LABORATORY REPORT</h2>\r\n                <br/>\r\n                    < >\r\n                        <div className=\"row\">\r\n                        \r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>Facility*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"organisationUnitId\"\r\n                                        id=\"organisationUnitId\"\r\n                                        value={objValues.organisationUnitId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {facilities.map((value) => (\r\n                                            <option key={value.id} value={value.organisationUnitId}>\r\n                                                {value.organisationUnitName}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                            <Button type=\"submit\" content='Generate Report' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit} disabled={objValues.organisationUnitId === \"\" || loading} />\r\n                            </div>\r\n                            </div>\r\n\r\n                            {loading && (\r\n                                <Message icon>\r\n                                                  <Message.Content>\r\n                                                        <ProgressComponent/>\r\n                                                  </Message.Content>\r\n                                                </Message>\r\n                            )}\r\n                        </div>\r\n                    </>\r\n\r\n                </CardBody>\r\n            </Card>                                 \r\n        </>\r\n    );\r\n};\r\n\r\nexport default LaboratoryReport","C:\\Users\\gamaliel.dashua\\IdeaProjects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\BiometricReport.js",["196"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {FormGroup, Label , CardBody, Input} from \"reactstrap\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card} from \"@material-ui/core\";\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { Button} from 'semantic-ui-react'\r\nimport { toast} from \"react-toastify\";\r\nimport FileSaver from \"file-saver\";\r\nimport { Message } from 'semantic-ui-react'\r\nimport ProgressComponent from \"./ProgressComponent\"\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst BiometricReport = (props) => {\r\n  let currentDate = new Date().toISOString().split('T')[0]\r\n  const classes = useStyles();\r\n  const [loading, setLoading] = useState(false)\r\n  const [facilities, setFacilities] = useState([]);\r\n  const [status, setStatus] = useState(true);\r\n  const [objValues, setObjValues]=useState({\r\n      organisationUnitId:\"\",\r\n      organisationUnitName:\"\",\r\n      startDate:\"\",\r\n      endDate: \"\"\r\n  })\r\n  useEffect(() => {\r\n      Facilities()\r\n    }, []);\r\n  const Facilities =()=>{\r\n  axios\r\n      .get(`${baseUrl}account`,\r\n          { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n      )\r\n      .then((response) => {\r\n          console.log(response.data);\r\n          setFacilities(response.data.applicationUserOrganisationUnits);\r\n      })\r\n      .catch((error) => {\r\n      });\r\n  }\r\n\r\n  const handleInputChange = (e) => {\r\n    const selectedOption = e.target.options ? e.target.options[e.target.selectedIndex] : null;\r\n    const selectedValue = e.target.value;\r\n    const name = e.target.name;\r\n  \r\n    setObjValues(prevValues => ({\r\n        ...prevValues,\r\n        [name]: selectedValue,\r\n        organisationUnitName: name === \"organisationUnitId\" && selectedOption ? selectedOption.innerText : prevValues.organisationUnitName,\r\n    }));\r\n  };\r\n\r\n  const handleValueChange = () => {\r\n      setStatus(!status)\r\n\r\n      if (status === true) {\r\n        setObjValues ({...objValues,  startDate: \"1980-01-01\", endDate: currentDate});\r\n      } else {\r\n        setObjValues ({...objValues,  startDate: \"\", endDate: currentDate});\r\n      }\r\n\r\n  }\r\n  \r\n    const handleSubmit = (e) => {      \r\n        e.preventDefault();\r\n        setLoading(true)\r\n        axios.get(`${baseUrl}reporting/biometric?facilityId=${objValues.organisationUnitId}&startDate=${objValues.startDate}&endDate=${objValues.endDate}`,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}, responseType: 'blob'},\r\n          \r\n          )\r\n              .then(response => {\r\n                setLoading(false)\r\n                const fileName = `${objValues.organisationUnitName} Biometric-Report ${currentDate}`\r\n                const responseData = response.data\r\n                let blob = new Blob([responseData], {type: \"application/octet-stream\"});\r\n                FileSaver.saveAs(blob, `${fileName}.xlsx`);\r\n                toast.success(\" Report generated successful\");\r\n\r\n              })\r\n              .catch(error => {\r\n                setLoading(false)\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n              });\r\n            \r\n\r\n    }\r\n    \r\n    \r\n\r\n    return (\r\n      <>\r\n        <Card>\r\n          <CardBody>\r\n            <h2 style={{ color: \"#000\" }}>BIOMETRIC REPORT</h2>\r\n            <br />\r\n            < >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>From *</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"startDate\"\r\n                                        id=\"startDate\"\r\n                                        min={\"1980-01-01\"}\r\n                                        max={currentDate}\r\n                                        value={objValues.startDate}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>To *</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"endDate\"\r\n                                        id=\"endDate\"\r\n                                        min={\"1980-01-01\"}\r\n                                        max={currentDate}\r\n                                        value={objValues.endDate}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                 <FormGroup check>\r\n                                  <Label check>\r\n                                    <Input type=\"checkbox\" onChange={handleValueChange}/>\r\n                                     {' '} &nbsp;&nbsp;<span> As at Today.</span>\r\n                                  </Label>\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>Facility*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"organisationUnitId\"\r\n                                        id=\"organisationUnitId\"\r\n                                        value={objValues.organisationUnitId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {facilities.map((value) => (\r\n                                            <option key={value.id} value={value.organisationUnitId}>\r\n                                                {value.organisationUnitName}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n\r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                <br />\r\n                <div className=\"row\">\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <Button\r\n                      type=\"submit\"\r\n                      content=\"Generate Report\"\r\n                      icon=\"right arrow\"\r\n                      labelPosition=\"right\"\r\n                      style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n                      onClick={handleSubmit}\r\n                      disabled={objValues.organisationUnitId === \"\" || loading} \r\n                      // }\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                {loading && (\r\n                  <Message icon>\r\n                                    <Message.Content>\r\n                                          <ProgressComponent/>\r\n                                    </Message.Content>\r\n                                  </Message>\r\n\r\n                )}\r\n              </div>\r\n            </>\r\n          </CardBody>\r\n        </Card>\r\n      </>\r\n    );\r\n};\r\n\r\nexport default BiometricReport","C:\\Users\\gamaliel.dashua\\IdeaProjects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\ClientVerification.js",["197"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { FormGroup, Label, CardBody } from \"reactstrap\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card } from \"@material-ui/core\";\r\nimport { token, url as baseUrl } from \"../../../api\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport { toast } from \"react-toastify\";\r\nimport FileSaver from \"file-saver\";\r\nimport { Message } from \"semantic-ui-react\";\r\nimport ProgressComponent from \"./ProgressComponent\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n    maxWidth: 752,\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n}));\r\n\r\nconst ClientVerification = (props) => {\r\n  let currentDate = new Date().toISOString().split(\"T\")[0];\r\n  const classes = useStyles();\r\n  const [loading, setLoading] = useState(false);\r\n  const [facilities, setFacilities] = useState([]);\r\n  const [objValues, setObjValues] = useState({\r\n    organisationUnitId: \"\",\r\n    organisationUnitName: \"\",\r\n  });\r\n  useEffect(() => {\r\n    Facilities();\r\n  }, []);\r\n  const Facilities = () => {\r\n    axios\r\n      .get(`${baseUrl}account`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setFacilities(response.data.applicationUserOrganisationUnits);\r\n      })\r\n      .catch((error) => {\r\n      });\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const selectedOption = e.target.options ? e.target.options[e.target.selectedIndex] : null;\r\n    const selectedValue = e.target.value;\r\n    const name = e.target.name;\r\n  \r\n    setObjValues(prevValues => ({\r\n        ...prevValues,\r\n        [name]: selectedValue,\r\n        organisationUnitName: name === \"organisationUnitId\" && selectedOption ? selectedOption.innerText : prevValues.organisationUnitName,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n      setLoading(true);\r\n      \r\n    axios\r\n      .get(`${baseUrl}reporting/client-service-list/${objValues.organisationUnitId}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n        responseType: \"blob\",\r\n      })\r\n      .then((response) => {\r\n        setLoading(false);\r\n        const fileName = `${objValues.organisationUnitName} Client Verification${currentDate}`;\r\n        const responseData = response.data;\r\n        let blob = new Blob([responseData], {\r\n          type: \"application/octet-stream\",\r\n        });\r\n        FileSaver.saveAs(blob, `${fileName}.xlsx`);\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n        if (error.response && error.response.data) {\r\n          let errorMessage =\r\n            error.response.data.apierror &&\r\n            error.response.data.apierror.message !== \"\"\r\n              ? error.response.data.apierror.message\r\n              : \"Something went wrong, please try again\";\r\n          toast.error(errorMessage);\r\n        } else {\r\n          toast.error(\"Something went wrong. Please try again...\");\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardBody>\r\n          <h2 style={{ color: \"#000\" }}>CLIENT VERIFICATION REPORT</h2>\r\n          <br />\r\n          <>\r\n            <div className=\"row\">\r\n              <div className=\"form-group  col-md-6\">\r\n                <FormGroup>\r\n                  <Label>Facility*</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"organisationUnitId\"\r\n                    id=\"organisationUnitId\"\r\n                    value={objValues.organisationUnitId}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    {facilities.map((value) => (\r\n                      <option key={value.id} value={value.organisationUnitId}>\r\n                        {value.organisationUnitName}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <br />\r\n              <div className=\"row\">\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                  <Button\r\n                    type=\"submit\"\r\n                    content=\"Generate Report\"\r\n                    icon=\"right arrow\"\r\n                    labelPosition=\"right\"\r\n                    style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n                    onClick={handleSubmit}\r\n                    disabled={objValues.organisationUnitId === \"\" || loading} \r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              {loading && (\r\n                <Message icon>\r\n                                  <Message.Content>\r\n                                        <ProgressComponent/>\r\n                                  </Message.Content>\r\n                                </Message>\r\n              )}\r\n            </div>\r\n          </>\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ClientVerification;\r\n","C:\\Users\\gamaliel.dashua\\IdeaProjects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\PatientLineList.js",["198"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {FormGroup, Label , CardBody} from \"reactstrap\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card} from \"@material-ui/core\";\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { Button} from 'semantic-ui-react'\r\nimport { toast} from \"react-toastify\";\r\nimport FileSaver from \"file-saver\";\r\nimport { Message } from 'semantic-ui-react'\r\nimport ProgressComponent from \"./ProgressComponent\"\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst PatientLineList = (props) => {\r\n    let currentDate = new Date().toISOString().split('T')[0]\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false)\r\n    const [facilitiesUpdate, setFacilities] = useState([]);\r\n    const [objValues, setObjValues]=useState({       \r\n        organisationUnitId:\"\",\r\n        organisationUnitName:\"\",\r\n    })\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        setLoading(true)\r\n        axios.post(`${baseUrl}reporting/patient-line-list?facilityId=${objValues.organisationUnitId}`,objValues.organisationUnitId,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}, responseType: 'blob'},\r\n          )\r\n              .then(response => {\r\n                setLoading(false)\r\n                const fileName = `${objValues.organisationUnitName} Patient Line List ${currentDate}`\r\n                const responseData = response.data\r\n                let blob = new Blob([responseData], {type: \"application/octet-stream\"});\r\n                FileSaver.saveAs(blob, `${fileName}.xlsx`);\r\n                toast.success(\" Report generated successful\");\r\n\r\n              })\r\n              .catch(error => {\r\n                setLoading(false)\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n              });\r\n            \r\n\r\n    }\r\n    const handleInputChange = (e) => {\r\n        const selectedOption = e.target.options ? e.target.options[e.target.selectedIndex] : null;\r\n        const selectedValue = e.target.value;\r\n        const name = e.target.name;\r\n      \r\n        setObjValues(prevValues => ({\r\n            ...prevValues,\r\n            [name]: selectedValue,\r\n            organisationUnitName: name === \"organisationUnitId\" && selectedOption ? selectedOption.innerText : prevValues.organisationUnitName,\r\n        }));\r\n      };\r\n      \r\n    useEffect(() => {\r\n        Facilities()\r\n      }, []);\r\n    const Facilities =()=>{\r\n    axios\r\n        .get(`${baseUrl}account`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            console.log(response.data);\r\n            setFacilities(response.data.applicationUserOrganisationUnits);\r\n        })\r\n        .catch((error) => {\r\n        });\r\n    \r\n    }\r\nconsole.log(facilitiesUpdate)\r\n    return (\r\n        <>\r\n            \r\n            <Card >\r\n                <CardBody>\r\n    \r\n                <h2 style={{color:'#000'}}>PATIENT LINE LIST</h2>\r\n                <br/>\r\n                    < >\r\n                        <div className=\"row\">\r\n\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Facility*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"organisationUnitId\"\r\n                                        id=\"organisationUnitId\"\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {facilitiesUpdate.map((value) => (\r\n                                            <option key={value.id} value={value.organisationUnitId}>\r\n                                                {value.organisationUnitName}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                            <Button type=\"submit\" content='Generate Report' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit} disabled={objValues.organisationUnitId === \"\" || loading} />\r\n                            </div>\r\n                            </div>\r\n\r\n                            {loading && (\r\n                                <Message icon>\r\n                                                  <Message.Content>\r\n                                                        <ProgressComponent/>\r\n                                                  </Message.Content>\r\n                                                </Message>\r\n                            )}\r\n                        </div>\r\n                    </>\r\n\r\n                </CardBody>\r\n            </Card>                                 \r\n        </>\r\n    );\r\n};\r\n\r\nexport default PatientLineList","C:\\Users\\gamaliel.dashua\\IdeaProjects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\Appointment.js",["199"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {FormGroup, Label , CardBody} from \"reactstrap\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card} from \"@material-ui/core\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { Button} from 'semantic-ui-react'\r\nimport MaterialTable from 'material-table';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { forwardRef } from 'react';\r\nimport { toast} from \"react-toastify\";\r\nimport { Message } from 'semantic-ui-react'\r\nimport ProgressComponent from \"./ProgressComponent\"\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n    };\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst Appointment = (props) => {\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false)\r\n    const [showContent, setShowContent] = useState(false)\r\n    const [appointmentReport, setAppointmentReport]= useState([])\r\n    const [facilities, setFacilities] = useState([]);\r\n    const [tableTitle, setTableTitle]= useState(\"\");\r\n    const [showNoRecord, setShowNoRecord]= useState(false)\r\n    const [objValues, setObjValues]=useState({       \r\n        facilityId:\"\", startDate:\"\", endDate:\"\", type:\"\"\r\n    })\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        setLoading(true)\r\n        axios.get(`${baseUrl}reporting/${objValues.type}?facilityId=${objValues.facilityId}&startDate=${objValues.startDate}&endDate=${objValues.endDate} `,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {                \r\n                setLoading(false)\r\n                setShowContent(true)\r\n                if(objValues.type==='miss-refill'){\r\n                    setTableTitle(`Missed Refill Appointment  -  From :${objValues.startDate}  - To: ${objValues.endDate}`)\r\n                }else if(objValues.type==='miss-clinic'){\r\n                    setTableTitle(`Missed Clinic Appointment   -  From :${objValues.startDate}  - To: ${objValues.endDate}`)\r\n                }else if(objValues.type==='clinic-appointment'){\r\n                    setTableTitle(`Clinic Appointment   -  From :${objValues.startDate}  - To: ${objValues.endDate}`)\r\n                }else if(objValues.type==='refill-appointment'){\r\n                    setTableTitle(`Refill Appointment   -  From :${objValues.startDate}  - To: ${objValues.endDate}`)\r\n                }else{\r\n                    setTableTitle('')\r\n                }\r\n                setAppointmentReport(response.data)\r\n                if(response.data.length <=0){\r\n                    setShowNoRecord(true)\r\n                }else{\r\n                    setShowNoRecord(false)\r\n                }\r\n              })\r\n              .catch(error => {\r\n                setLoading(false)\r\n                setShowContent(false)\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n              });\r\n            \r\n\r\n    }\r\n    const handleInputChange = e => {\r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n    }\r\n    useEffect(() => {\r\n        Facilities()\r\n      }, []);\r\n    //Get list of WhoStaging\r\n    const Facilities =()=>{\r\n    axios\r\n        .get(`${baseUrl}account`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setFacilities(response.data.applicationUserOrganisationUnits);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });\r\n    \r\n    }\r\n\r\n    return (\r\n        <>\r\n            \r\n            <Card >\r\n                <CardBody>\r\n    \r\n                <h2 style={{color:'#000'}}>APPOINTMENT REPORT</h2>\r\n                <br/>\r\n                    < >\r\n                        <div className=\"row\">\r\n\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>Start Date*</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"startDate\"\r\n                                        id=\"startDate\"\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>End Date*</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"endDate\"\r\n                                        id=\"endDate\"\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n                                     \r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>Facility*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"facilityId\"\r\n                                        id=\"facilityId\"\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {facilities.map((value) => (\r\n                                            <option key={value.id} value={value.organisationUnitId}>\r\n                                                {value.organisationUnitName}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>Type*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"type\"\r\n                                        id=\"type\"\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"miss-refill\">Missed Refill Appointment</option>\r\n                                        <option value=\"miss-clinic\">Missed Clinic Appointment </option>\r\n                                        <option value=\"clinic-appointment\">Scheduled Clinic Visit(Clinic Appointment)</option>\r\n                                        <option value=\"refill-appointment\">Scheduled Refill Visit(Refill Appointment)</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                            <Button type=\"submit\" content='Generate Report' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit}\r\n                                disabled={objValues.facilityId===\"\" || objValues.startDate===\"\" || objValues.endDate===\"\"  || objValues.type===\"\" ? true : false || loading} \r\n                            />\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n\r\n                    <br/>\r\n                    {loading && (\r\n                       <Message icon>\r\n                          <Message.Content>\r\n                                <ProgressComponent/>\r\n                          </Message.Content>\r\n                        </Message>\r\n                    )}\r\n                    {showNoRecord && (\r\n                        <Message info>\r\n                            <Message.Content>\r\n                            {/* <Message.Header>Just one second</Message.Header> */}\r\n                            <b>No Record Found</b>\r\n                            </Message.Content>\r\n                        </Message>\r\n                    )}\r\n                    {showContent &&(\r\n                        <MaterialTable\r\n                            icons={tableIcons}\r\n                            title= {tableTitle}\r\n                            columns={[\r\n                                { title: \"Name\", field: \"name\" },\r\n                                { title: \"Hospital Num\", field: \"hospitalNum\" },\r\n                                { title: \"Patient Id\", field: \"patientId\" },                                \r\n                                { title: \"DOB\", field: \"dateBirth\" },\r\n                                { title: \"Age\", field: \"age\" },\r\n                                { title: \"phone\", field: \"phone\" },\r\n                                { title: \"Art Start Date\", field: \"artStartDate\" },\r\n                                { title: \"Date Of LastVisit\", field: \"dateOfLastVisit\" },\r\n                                { title: \"Date Of NextVisit\", field: \"dateOfNextVisit\" },\r\n                                { title: \"Current Status\", field: \"currentStatus\" },\r\n                                { title: \"Case Manager\", field: \"caseManager\" },\r\n                                { title: \"Facility Name\", field: \"facilityName\" },\r\n                                { title: \"lga\", field: \"lga\" },\r\n                                { title: \"Lga Of Residence\", field: \"lgaOfResidence\" },\r\n                                { title: \"state\", field: \"state\" },\r\n                                { title: \"State Of Residence\", field: \"stateOfResidence\" },\r\n\r\n                            ]}\r\n                            isLoading={loading}\r\n                            data={appointmentReport.map((row) => ({\r\n                                name: row.name,\r\n                                hospitalNum: row.hospitalNum,\r\n                                patientId:row.patientId,\r\n                                dateBirth: row.dateBirth,\r\n                                age: row.age,\r\n                                phone: row.phone,\r\n                                artStartDate: row.artStartDate,\r\n                                dateOfLastVisit: row.dateOfLastVisit,\r\n                                dateOfNextVisit:row.dateOfNextVisit,\r\n                                currentStatus: row.currentStatus,\r\n                                caseManager: row.caseManager,\r\n                                facilityName: row.facilityName,\r\n                                lga:row.lga,\r\n                                lgaOfResidence: row.lgaOfResidence,\r\n                                state: row.state,\r\n                                stateOfResidence:row.stateOfResidence,\r\n                                \r\n                                }))}\r\n                            \r\n                                        options={{\r\n                                        headerStyle: {\r\n                                            backgroundColor: \"#014d88\",\r\n                                            color: \"#fff\",\r\n                                        },\r\n                                        searchFieldStyle: {\r\n                                            width : '100%',\r\n                                            margingLeft: '250px',\r\n                                        },\r\n                                        filtering: false,\r\n                                        exportButton: true,\r\n                                        searchFieldAlignment: 'left',\r\n                                        pageSizeOptions:[10,20,100, 500,1000,2000,3000],\r\n                                        pageSize:10,\r\n                                        debounceInterval: 400\r\n                            }}\r\n                        />\r\n                    )}\r\n                </CardBody>\r\n            </Card>                                 \r\n        </>\r\n    );\r\n};\r\n\r\nexport default Appointment","C:\\Users\\gamaliel.dashua\\IdeaProjects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\Radet.js",["200","201"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { FormGroup, Label, CardBody, Input } from \"reactstrap\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card } from \"@material-ui/core\";\r\nimport { token, url as baseUrl } from \"../../../api\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport { toast } from \"react-toastify\";\r\nimport FileSaver from \"file-saver\";\r\nimport { Message } from \"semantic-ui-react\";\r\nimport ProgressComponent from \"./ProgressComponent\"\r\n\r\nconst SOCKET_URL = 'http://localhost:8383/ws-chat/';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n    maxWidth: 752,\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n}));\r\n\r\nconst PatientLineList = (props) => {\r\n  let currentDate = new Date().toISOString().split(\"T\")[0];\r\n  const classes = useStyles();\r\n  const [loading, setLoading] = useState(false);\r\n  const [facilities, setFacilities] = useState([]);\r\n  const [status, setStatus] = useState(true);\r\n  const [objValues, setObjValues] = useState({\r\n    organisationUnitId: \"\",\r\n    organisationUnitName: \"\",\r\n    startDate: \"\",\r\n    endDate: \"\",\r\n  });\r\n  useEffect(() => {\r\n    Facilities();\r\n  }, []);\r\n  const Facilities = () => {\r\n    axios\r\n      .get(`${baseUrl}account`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setFacilities(response.data.applicationUserOrganisationUnits);\r\n      })\r\n      .catch((error) => {\r\n      });\r\n  };\r\n\r\n//   const handleInputChange = (e) => {\r\n//     const selectedOption = e.target.options[e.target.selectedIndex];\r\n//     const selectedValue = e.target.value;\r\n//     objValues.organisationUnitName = selectedOption.innerText;\r\n//     setObjValues(prevValues => ({\r\n//       ...prevValues,\r\n//       [e.target.name]: selectedValue,\r\n//     }));\r\n// };\r\n\r\nconst handleInputChange = (e) => {\r\n  const selectedOption = e.target.options ? e.target.options[e.target.selectedIndex] : null;\r\n  const selectedValue = e.target.value;\r\n  const name = e.target.name;\r\n\r\n  setObjValues(prevValues => ({\r\n      ...prevValues,\r\n      [name]: selectedValue,\r\n      organisationUnitName: name === \"organisationUnitId\" && selectedOption ? selectedOption.innerText : prevValues.organisationUnitName,\r\n  }));\r\n};\r\n\r\n  const handleValueChange = () => {\r\n    setStatus(!status);\r\n\r\n    if (status === true) {\r\n      setObjValues({\r\n        ...objValues,\r\n        startDate: \"1980-01-01\",\r\n        endDate: currentDate,\r\n      });\r\n    } else {\r\n      setObjValues({ ...objValues, startDate: \"\", endDate: currentDate });\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n\r\n    console.log(objValues);\r\n\r\n    axios\r\n      .get(\r\n        `${baseUrl}reporting/radet?facilityId=${objValues.organisationUnitId}&startDate=${objValues.startDate}&endDate=${objValues.endDate}`,\r\n        { headers: { Authorization: `Bearer ${token}` }, responseType: \"blob\"}\r\n      )\r\n      .then((response) => {\r\n        setLoading(false); \r\n        const facilityName = `${objValues.organisationUnitName}` ;\r\n        const fileName = `${facilityName} Radet ${currentDate}`;\r\n        const responseData = response.data;\r\n        let blob = new Blob([responseData], {\r\n          type: \"application/octet-stream\",\r\n        });\r\n\r\n        FileSaver.saveAs(blob, `${fileName}.xlsx`);\r\n        toast.success(\"Radet Report generated successful\");\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n        if (error.response && error.response.data) {\r\n          let errorMessage =\r\n            error.response.data.apierror &&\r\n            error.response.data.apierror.message !== \"\"\r\n              ? error.response.data.apierror.message\r\n              : \"Something went wrong, please try again\";\r\n          toast.error(errorMessage);\r\n        } else {\r\n          toast.error(\"Something went wrong. Please try again...\");\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardBody>\r\n          <h2 style={{ color: \"#000\" }}>RADET REPORT</h2>\r\n          <br />\r\n          <>\r\n            <div className=\"row\">\r\n              <div className=\"form-group  col-md-6\">\r\n                <FormGroup>\r\n                  <Label>From *</Label>\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control\"\r\n                    name=\"startDate\"\r\n                    id=\"startDate\"\r\n                    min={\"1980-01-01\"}\r\n                    max={currentDate}\r\n                    value={objValues.startDate}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-6\">\r\n                <FormGroup>\r\n                  <Label>To *</Label>\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control\"\r\n                    name=\"endDate\"\r\n                    id=\"endDate\"\r\n                    min={\"1980-01-01\"}\r\n                    max={currentDate}\r\n                    value={objValues.endDate}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-6\">\r\n                <FormGroup check>\r\n                  <Label check>\r\n                    <Input type=\"checkbox\" onChange={handleValueChange} />{\" \"}\r\n                    &nbsp;&nbsp;<span> As at Today.</span>\r\n                  </Label>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-6\">\r\n                <FormGroup>\r\n                  <Label>Facility*</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"organisationUnitId\"\r\n                    id=\"organisationUnitId\"\r\n                    value={objValues.organisationUnitId}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    {facilities.map((value) => (\r\n                      <option key={value.id} value={value.organisationUnitId}>\r\n                        {value.organisationUnitName}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <br />\r\n              <div className=\"row\">\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                  <Button\r\n                    type=\"submit\"\r\n                    content=\"Generate Report\"\r\n                    icon=\"right arrow\"\r\n                    labelPosition=\"right\"\r\n                    style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n                    onClick={handleSubmit}\r\n                    disabled={objValues.organisationUnitId === \"\" || loading} \r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              {loading && (\r\n                <Message icon>\r\n                  <Message.Content>\r\n                        <ProgressComponent  />\r\n                  </Message.Content>\r\n                </Message>\r\n              )}\r\n            </div>\r\n          </>\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PatientLineList;\r\n","C:\\Users\\gamaliel.dashua\\IdeaProjects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\HtsRegister.js",["202"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {FormGroup, Label , CardBody,Input} from \"reactstrap\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card} from \"@material-ui/core\";\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { Button} from 'semantic-ui-react'\r\nimport { toast} from \"react-toastify\";\r\nimport FileSaver from \"file-saver\";\r\nimport { Message } from 'semantic-ui-react'\r\nimport ProgressComponent from \"./ProgressComponent\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\nconst PrepLongitudinalReport = (props) => {\r\n    let currentDate = new Date().toISOString().split('T')[0]\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false)\r\n    const [facilities, setFacilities] = useState([]);\r\n    const [status, setStatus] = useState(true);\r\n    const [objValues, setObjValues]=useState({\r\n        organisationUnitId:\"\",\r\n        organisationUnitName:\"\",\r\n        startDate:\"\",\r\n        endDate: \"\"\r\n    })\r\n    useEffect(() => {\r\n        Facilities()\r\n      }, []);\r\n    const Facilities =()=>{\r\n    axios\r\n        .get(`${baseUrl}account`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setFacilities(response.data.applicationUserOrganisationUnits);\r\n        })\r\n        .catch((error) => {\r\n        });\r\n    }\r\n\r\n    const handleInputChange = (e) => {\r\n        const selectedOption = e.target.options ? e.target.options[e.target.selectedIndex] : null;\r\n        const selectedValue = e.target.value;\r\n        const name = e.target.name;\r\n      \r\n        setObjValues(prevValues => ({\r\n            ...prevValues,\r\n            [name]: selectedValue,\r\n            organisationUnitName: name === \"organisationUnitId\" && selectedOption ? selectedOption.innerText : prevValues.organisationUnitName,\r\n        }));\r\n      };\r\n\r\n    const handleValueChange = () => {\r\n        setStatus(!status)\r\n\r\n        if (status === true) {\r\n          setObjValues ({...objValues,  startDate: \"1980-01-01\", endDate: currentDate});\r\n        } else {\r\n          setObjValues ({...objValues,  startDate: \"\", endDate: currentDate});\r\n        }\r\n\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true)\r\n\r\n        axios.post(`${baseUrl}hts-register?facilityId=${objValues.organisationUnitId}&startDate=${objValues.startDate}&endDate=${objValues.endDate}`,objValues.organisationUnitId,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}, responseType: 'blob'},\r\n        )\r\n          .then(response => {\r\n            setLoading(false)\r\n            const fileName =`${objValues.organisationUnitName} HTS Register ${currentDate}`\r\n            const responseData = response.data\r\n            let blob = new Blob([responseData], {type: \"application/octet-stream\"});\r\n\r\n            FileSaver.saveAs(blob, `${fileName}.xlsx`);\r\n            toast.success(\"HTS Register generated successfully\");\r\n          })\r\n          .catch(error => {\r\n            setLoading(false)\r\n            if(error.response && error.response.data){\r\n                let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                toast.error(errorMessage);\r\n              }\r\n              else{\r\n                toast.error(\"Something went wrong. Please try again...\");\r\n              }\r\n          });\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <Card >\r\n                <CardBody>\r\n\r\n                <h2 style={{color:'#000'}}>HTS REGISTER</h2>\r\n                <br/>\r\n                    < >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>From *</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"startDate\"\r\n                                        id=\"startDate\"\r\n                                        min={\"1980-01-01\"}\r\n                                        max={currentDate}\r\n                                        value={objValues.startDate}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>To *</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"endDate\"\r\n                                        id=\"endDate\"\r\n                                        min={\"1980-01-01\"}\r\n                                        max={currentDate}\r\n                                        value={objValues.endDate}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                 <FormGroup check>\r\n                                  <Label check>\r\n                                    <Input type=\"checkbox\" onChange={handleValueChange}/>\r\n                                     {' '} &nbsp;&nbsp;<span> As at Today.</span>\r\n                                  </Label>\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>Facility*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"organisationUnitId\"\r\n                                        id=\"organisationUnitId\"\r\n                                        value={objValues.organisationUnitId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {facilities.map((value) => (\r\n                                            <option key={value.id} value={value.organisationUnitId}>\r\n                                                {value.organisationUnitName}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n\r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                            <Button type=\"submit\" content='Generate Report' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit} \r\n                            disabled={objValues.organisationUnitId === \"\" || loading} \r\n                            />\r\n                            </div>\r\n                            </div>\r\n\r\n                            {loading && (\r\n                                <Message icon>\r\n                                                  <Message.Content>\r\n                                                        <ProgressComponent/>\r\n                                                  </Message.Content>\r\n                                                </Message>\r\n                            )}\r\n                        </div>\r\n                    </>\r\n\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PrepLongitudinalReport","C:\\Users\\gamaliel.dashua\\IdeaProjects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\AhdReport.js",["203"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {FormGroup, Label , CardBody, Input} from \"reactstrap\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card} from \"@material-ui/core\";\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { Button} from 'semantic-ui-react'\r\nimport { toast} from \"react-toastify\";\r\nimport FileSaver from \"file-saver\";\r\nimport { Message} from 'semantic-ui-react'\r\nimport ProgressComponent from \"./ProgressComponent\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\nconst AhdReport = (props) => {\r\n    let currentDate = new Date().toISOString().split('T')[0]\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false)\r\n    const [facilities, setFacilities] = useState([]);\r\n    const [status, setStatus] = useState(true);\r\n    const [objValues, setObjValues]=useState({\r\n        organisationUnitId:\"\",\r\n        organisationUnitName:\"\",\r\n        startDate:\"\",\r\n        endDate: \"\"\r\n    })\r\n    useEffect(() => {\r\n        Facilities()\r\n      }, []);\r\n    //Get list of WhoStaging\r\n    const Facilities =()=>{\r\n    axios\r\n        .get(`${baseUrl}account`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n        console.log(response.data);\r\n            setFacilities(response.data.applicationUserOrganisationUnits);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });\r\n\r\n    }\r\n\r\n    const handleInputChange = (e) => {\r\n        const selectedOption = e.target.options ? e.target.options[e.target.selectedIndex] : null;\r\n        const selectedValue = e.target.value;\r\n        const name = e.target.name;\r\n      \r\n        setObjValues(prevValues => ({\r\n            ...prevValues,\r\n            [name]: selectedValue,\r\n            organisationUnitName: name === \"organisationUnitId\" && selectedOption ? selectedOption.innerText : prevValues.organisationUnitName,\r\n        }));\r\n      };\r\n\r\n    const handleValueChange = () => {\r\n        setStatus(!status)\r\n\r\n        if (status === true) {\r\n          setObjValues ({...objValues,  startDate: \"1980-01-01\", endDate: currentDate});\r\n        } else {\r\n          setObjValues ({...objValues,  startDate: \"\", endDate: currentDate});\r\n        }\r\n\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true)\r\n        console.log(token);\r\n\r\n        axios.post(`${baseUrl}ahd-reporting?&facilityId=${objValues.organisationUnitId}&startDate=${objValues.startDate}&endDate=${objValues.endDate}`,objValues.organisationUnitId,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}, responseType: 'blob'},\r\n        )\r\n          .then(response => {\r\n            setLoading(false)\r\n            const fileName = `${objValues.organisationUnitName} AHD ${currentDate}`\r\n            const responseData = response.data\r\n            let blob = new Blob([responseData], {type: \"application/octet-stream\"});\r\n\r\n            FileSaver.saveAs(blob, `${fileName}.xlsx`);\r\n            toast.success(\"AHD Report generated successfully\");\r\n          })\r\n          .catch(error => {\r\n            setLoading(false)\r\n            if(error.response && error.response.data){\r\n                let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                toast.error(errorMessage);\r\n              }\r\n              else{\r\n                toast.error(\"Something went wrong. Please try again...\");\r\n              }\r\n          });\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <Card >\r\n                <CardBody>\r\n\r\n                <h2 style={{color:'#000'}}>AHD REPORT</h2>\r\n                <br/>\r\n                    < >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>From *</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"startDate\"\r\n                                        id=\"startDate\"\r\n                                        min={\"1980-01-01\"}\r\n                                        max={currentDate}\r\n                                        value={objValues.startDate}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>To *</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"endDate\"\r\n                                        id=\"endDate\"\r\n                                        min={\"1980-01-01\"}\r\n                                        max={currentDate}\r\n                                        //min={objValues.startDate}\r\n                                        value={objValues.endDate}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                 <FormGroup check>\r\n                                  <Label check>\r\n                                    <Input type=\"checkbox\" onChange={handleValueChange}/>\r\n                                     {' '} &nbsp;&nbsp;<span> As at Today.</span>\r\n                                  </Label>\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>Facility*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"organisationUnitId\"\r\n                                        id=\"organisationUnitId\"\r\n                                        value={objValues.organisationUnitId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {facilities.map((value) => (\r\n                                            <option key={value.id} value={value.organisationUnitId}>\r\n                                                {value.organisationUnitName}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n\r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                            <Button type=\"submit\" content='Generate Report' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit} \r\n                            // disabled={objValues.organisationUnitId===\"\" ? true : false}\r\n                            disabled={objValues.organisationUnitId === \"\" || loading} \r\n                            />\r\n                            </div>\r\n                            </div>\r\n\r\n                            {loading && (\r\n                                <Message icon>\r\n                                 <Message.Content>\r\n                                       <ProgressComponent/>\r\n                                 </Message.Content>\r\n                               </Message>\r\n                            )}\r\n                        </div>\r\n                    </>\r\n\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AhdReport","C:\\Users\\gamaliel.dashua\\IdeaProjects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\HTSReport.js",["204"],"import React, {useEffect, useState, useCallback} from \"react\";\r\nimport axios from \"axios\";\r\nimport {FormGroup, Label , CardBody,Input} from \"reactstrap\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card} from \"@material-ui/core\";\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { Button} from 'semantic-ui-react'\r\nimport { toast} from \"react-toastify\";\r\nimport FileSaver from \"file-saver\";\r\nimport { Message } from 'semantic-ui-react'\r\nimport ProgressComponent from \"./ProgressComponent\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\nconst HTSReport = (props) => {\r\n    let currentDate = new Date().toISOString().split('T')[0]\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false)\r\n    const [facilities, setFacilities] = useState([]);\r\n    const [status, setStatus] = useState(true);\r\n    // const [reportType, setReportType] = useState('');\r\n    const [objValues, setObjValues]=useState({\r\n        organisationUnitId:\"\",\r\n        organisationUnitName:\"\",\r\n        startDate:\"\",\r\n        endDate: \"\",\r\n        reportType: \"\"\r\n    })\r\n    useEffect(() => {\r\n        Facilities()\r\n      }, []);\r\n    const Facilities =()=>{\r\n    axios\r\n        .get(`${baseUrl}account`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n        console.log(response.data);\r\n            setFacilities(response.data.applicationUserOrganisationUnits);\r\n        })\r\n        .catch((error) => {\r\n        });\r\n\r\n    }\r\n    const handleInputChange = (e) => {\r\n        const selectedOption = e.target.options ? e.target.options[e.target.selectedIndex] : null;\r\n        const selectedValue = e.target.value;\r\n        const name = e.target.name;\r\n      \r\n        setObjValues(prevValues => ({\r\n            ...prevValues,\r\n            [name]: selectedValue,\r\n            organisationUnitName: name === \"organisationUnitId\" && selectedOption ? selectedOption.innerText : prevValues.organisationUnitName,\r\n        }));\r\n      };\r\n\r\n    const handleReportType = useCallback((event) => {\r\n        const selectedReportType = event.target.value;\r\n        setObjValues((prevObjValues) => ({ ...prevObjValues, reportType: selectedReportType }));\r\n      }, [setObjValues]);\r\n\r\n    const handleValueChange = () => {\r\n        setStatus(!status)\r\n\r\n        if (status === true) {\r\n          setObjValues ({...objValues,  startDate: \"1980-01-01\", endDate: currentDate});\r\n        } else {\r\n          setObjValues ({...objValues,  startDate: \"\", endDate: currentDate});\r\n        }\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true)\r\n        console.log(token);\r\n\r\n        axios.post(`${baseUrl}hts-reporting?facilityId=${objValues.organisationUnitId}&startDate=${objValues.startDate}&endDate=${objValues.endDate}&reportType=${objValues.reportType}`,objValues.organisationUnitId,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}, responseType: 'blob'},\r\n        )\r\n          .then(response => {\r\n            setLoading(false)\r\n            const fileName = `${objValues.organisationUnitName} HTS ${currentDate}`\r\n            const responseData = response.data\r\n            let blob = new Blob([responseData], {type: \"application/octet-stream\"});\r\n\r\n            FileSaver.saveAs(blob, `${fileName}.xlsx`);\r\n            toast.success(\"HTS Report generated successfully\");\r\n          })\r\n          .catch(error => {\r\n            setLoading(false)\r\n            if(error.response && error.response.data){\r\n                let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                toast.error(errorMessage);\r\n              }\r\n              else{\r\n                toast.error(\"Something went wrong. Please try again...\");\r\n              }\r\n          });\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <Card >\r\n                <CardBody>\r\n\r\n                <h2 style={{color:'#000'}}>HTS REPORT</h2>\r\n                <br/>\r\n                    < >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>From *</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"startDate\"\r\n                                        id=\"startDate\"\r\n                                        min={\"1980-01-01\"}\r\n                                        max={currentDate}\r\n                                        value={objValues.startDate}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>To *</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"endDate\"\r\n                                        id=\"endDate\"\r\n                                        min={\"1980-01-01\"}\r\n                                        max={currentDate}\r\n                                        value={objValues.endDate}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-2\">\r\n                                 <FormGroup check>\r\n                                  <Label check>\r\n                                    <Input type=\"checkbox\" onChange={handleValueChange}/>\r\n                                     {' '} &nbsp;&nbsp;<span> As at Today.</span>\r\n                                  </Label>\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group col-md-4\">\r\n                            <FormGroup check>\r\n  <Label check>\r\n    <Input \r\n      type=\"radio\" \r\n      name=\"reportType\" \r\n      value=\"GoN\" \r\n      checked={objValues.reportType === \"GoN\"} \r\n      onChange={handleReportType} \r\n      required\r\n    />\r\n    {' '} &nbsp;<span> GoN Report.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>\r\n  </Label>\r\n  <Label check>\r\n    <Input \r\n      type=\"radio\" \r\n      name=\"reportType\" \r\n      value=\"Pepfar\" \r\n      checked={objValues.reportType === \"Pepfar\"} \r\n      onChange={handleReportType} \r\n      required\r\n    />\r\n    {' '} &nbsp;&nbsp;<span> Pepfar Report.</span>\r\n  </Label>\r\n</FormGroup>\r\n</div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>Facility*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"organisationUnitId\"\r\n                                        id=\"organisationUnitId\"\r\n                                        value={objValues.organisationUnitId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {facilities.map((value) => (\r\n                                            <option key={value.id} value={value.organisationUnitId}>\r\n                                                {value.organisationUnitName}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n\r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                            <Button type=\"submit\" content='Generate Report' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit} \r\n                            disabled={objValues.organisationUnitId === \"\" || objValues.reportType === \"\" || loading} \r\n                            />\r\n                            </div>\r\n                            </div>\r\n\r\n                            {loading && (\r\n                                <Message icon>\r\n                                                  <Message.Content>\r\n                                                        <ProgressComponent/>\r\n                                                  </Message.Content>\r\n                                                </Message>\r\n                            )}\r\n                        </div>\r\n                    </>\r\n\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default HTSReport","C:\\Users\\gamaliel.dashua\\IdeaProjects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\TbReport.js",["205","206"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { FormGroup, Label, CardBody,Input } from \"reactstrap\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card } from \"@material-ui/core\";\r\nimport { token, url as baseUrl } from \"../../../api\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport { toast } from \"react-toastify\";\r\nimport FileSaver from \"file-saver\";\r\nimport { Message, Icon } from \"semantic-ui-react\";\r\nimport ProgressComponent from \"./ProgressComponent\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n      margin: theme.spacing(20),\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      alignItems: \"center\"\r\n  },\r\n  form: {\r\n      width: \"100%\", // Fix IE 11 issue.\r\n      marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n      marginBottom: 20,\r\n  },\r\n  Select: {\r\n      height: 45,\r\n      width: 300,\r\n  },\r\n  button: {\r\n      margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n      flexGrow: 1,\r\n      maxWidth: 752,\r\n  },\r\n  demo: {\r\n      backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n      display: \"inline\",\r\n  },\r\n  error:{\r\n      color: '#f85032',\r\n      fontSize: '12.8px'\r\n  }\r\n}));\r\n\r\nconst TbReport = (props) => {\r\n  let currentDate = new Date().toISOString().split('T')[0]\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false)\r\n    const [facilities, setFacilities] = useState([]);\r\n    const [status, setStatus] = useState(true);\r\n    const [objValues, setObjValues]=useState({\r\n        organisationUnitId:\"\",\r\n        organisationUnitName:\"\",\r\n        startDate:\"\",\r\n        endDate: \"\"\r\n    })\r\n    useEffect(() => {\r\n        Facilities()\r\n      }, []);\r\n    const Facilities =()=>{\r\n    axios\r\n        .get(`${baseUrl}account`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            console.log(response.data);\r\n            setFacilities(response.data.applicationUserOrganisationUnits);\r\n        })\r\n        .catch((error) => {\r\n        });\r\n    }\r\n\r\n    const handleInputChange = (e) => {\r\n      const selectedOption = e.target.options ? e.target.options[e.target.selectedIndex] : null;\r\n      const selectedValue = e.target.value;\r\n      const name = e.target.name;\r\n    \r\n      setObjValues(prevValues => ({\r\n          ...prevValues,\r\n          [name]: selectedValue,\r\n          organisationUnitName: name === \"organisationUnitId\" && selectedOption ? selectedOption.innerText : prevValues.organisationUnitName,\r\n      }));\r\n    };\r\n\r\n    const handleValueChange = () => {\r\n        setStatus(!status)\r\n\r\n        if (status === true) {\r\n          setObjValues ({...objValues,  startDate: \"1980-01-01\", endDate: currentDate});\r\n        } else {\r\n          setObjValues ({...objValues,  startDate: \"\", endDate: currentDate});\r\n        }\r\n    }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n   \r\n    axios\r\n      .get(\r\n        `${baseUrl}reporting/tb-report?facilityId=${objValues.organisationUnitId}&start=${objValues.startDate}&end=${objValues.endDate}`,\r\n        { headers: { Authorization: `Bearer ${token}` }, responseType: \"blob\" }\r\n      )\r\n      .then((response) => {\r\n        setLoading(false);\r\n        const fileName = `${objValues.organisationUnitName} TB-Report ${currentDate}`;\r\n        const responseData = response.data;\r\n        let blob = new Blob([responseData], {\r\n          type: \"application/octet-stream\",\r\n        });\r\n        FileSaver.saveAs(blob, `${fileName}.xlsx`);\r\n        toast.success(\" Report generated successful\");\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n        if (error.response && error.response.data) {\r\n          let errorMessage =\r\n            error.response.data.apierror &&\r\n            error.response.data.apierror.message !== \"\"\r\n              ? error.response.data.apierror.message\r\n              : \"Something went wrong, please try again\";\r\n          toast.error(errorMessage);\r\n        } else {\r\n          toast.error(\"Something went wrong. Please try again...\");\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardBody>\r\n          <h2 style={{ color: \"#000\" }}>TB REPORT</h2>\r\n          <br />\r\n          < >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>From *</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"startDate\"\r\n                                        id=\"startDate\"\r\n                                        min={\"1980-01-01\"}\r\n                                        max={currentDate}\r\n                                        value={objValues.startDate}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>To *</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"endDate\"\r\n                                        id=\"endDate\"\r\n                                        min={\"1980-01-01\"}\r\n                                        max={currentDate}\r\n                                        value={objValues.endDate}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                 <FormGroup check>\r\n                                  <Label check>\r\n                                    <Input type=\"checkbox\" onChange={handleValueChange}/>\r\n                                     {' '} &nbsp;&nbsp;<span> As at Today.</span>\r\n                                  </Label>\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>Facility*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"organisationUnitId\"\r\n                                        id=\"organisationUnitId\"\r\n                                        value={objValues.organisationUnitId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {facilities.map((value) => (\r\n                                            <option key={value.id} value={value.organisationUnitId}>\r\n                                                {value.organisationUnitName}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n\r\n                                </FormGroup>\r\n                            </div>\r\n\r\n              <br />\r\n              <div className=\"row\">\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                  <Button\r\n                    type=\"submit\"\r\n                    content=\"Generate Report\"\r\n                    icon=\"right arrow\"\r\n                    labelPosition=\"right\"\r\n                    style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n                    onClick={handleSubmit}\r\n                    disabled={objValues.organisationUnitId === \"\" || loading} \r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              {loading && (\r\n                <Message icon>\r\n                                  <Message.Content>\r\n                                        <ProgressComponent/>\r\n                                  </Message.Content>\r\n                                </Message>\r\n              )}\r\n            </div>\r\n          </>\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TbReport;\r\n","C:\\Users\\gamaliel.dashua\\IdeaProjects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\ClinicData.js",["207","208"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { FormGroup, Label, CardBody } from \"reactstrap\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card } from \"@material-ui/core\";\r\nimport { token, url as baseUrl } from \"../../../api\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport { toast } from \"react-toastify\";\r\nimport FileSaver from \"file-saver\";\r\nimport { Message } from \"semantic-ui-react\";\r\nimport ProgressComponent from \"./ProgressComponent\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n    maxWidth: 752,\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n}));\r\n\r\nconst ClinicData = (props) => {\r\n  let currentDate = new Date().toISOString().split(\"T\")[0];\r\n  const classes = useStyles();\r\n  const [loading, setLoading] = useState(false);\r\n  const [facilities, setFacilities] = useState([]);\r\n  const [status, setStatus] = useState(true);\r\n  const [objValues, setObjValues] = useState({\r\n    organisationUnitId: \"\",\r\n    organisationUnitName: \"\",\r\n    startDate: \"\",\r\n    endDate: \"\",\r\n  });\r\n  useEffect(() => {\r\n    Facilities();\r\n  }, []);\r\n  const Facilities = () => {\r\n    axios\r\n      .get(`${baseUrl}account`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setFacilities(response.data.applicationUserOrganisationUnits);\r\n      })\r\n      .catch((error) => {\r\n      });\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const selectedOption = e.target.options ? e.target.options[e.target.selectedIndex] : null;\r\n    const selectedValue = e.target.value;\r\n    const name = e.target.name;\r\n  \r\n    setObjValues(prevValues => ({\r\n        ...prevValues,\r\n        [name]: selectedValue,\r\n        organisationUnitName: name === \"organisationUnitId\" && selectedOption ? selectedOption.innerText : prevValues.organisationUnitName,\r\n    }));\r\n  };\r\n\r\n  const handleValueChange = () => {\r\n    setStatus(!status);\r\n\r\n    if (status === true) {\r\n      setObjValues({\r\n        ...objValues,\r\n        startDate: \"1980-01-01\",\r\n        endDate: currentDate,\r\n      });\r\n    } else {\r\n      setObjValues({ ...objValues, startDate: \"\", endDate: currentDate });\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n\r\n    axios\r\n      .get(`${baseUrl}reporting/clinic-data/${objValues.organisationUnitId}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n        responseType: \"blob\",\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n        setLoading(false);\r\n        const fileName = `${objValues.organisationUnitName} Clinic Data ${currentDate}`;\r\n        const responseData = response.data;\r\n        let blob = new Blob([responseData], {\r\n          type: \"application/octet-stream\",\r\n        });\r\n\r\n        FileSaver.saveAs(blob, `${fileName}.xlsx`);\r\n        toast.success(\"Clinic data generated successfully\");\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n        if (error.response && error.response.data) {\r\n          let errorMessage =\r\n            error.response.data.apierror &&\r\n            error.response.data.apierror.message !== \"\"\r\n              ? error.response.data.apierror.message\r\n              : \"Something went wrong, please try again\";\r\n          toast.error(errorMessage);\r\n        } else {\r\n          toast.error(\"Something went wrong. Please try again...\");\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardBody>\r\n          <h2 style={{ color: \"#000\" }}>CLINIC DATA REPORT</h2>\r\n          <br />\r\n          <>\r\n            <div className=\"row\">\r\n              <div className=\"form-group  col-md-6\">\r\n                <FormGroup>\r\n                  <Label>Facility*</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"organisationUnitId\"\r\n                    id=\"organisationUnitId\"\r\n                    value={objValues.organisationUnitId}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    {facilities.map((value) => (\r\n                      <option key={value.id} value={value.organisationUnitId}>\r\n                        {value.organisationUnitName}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n              <br />\r\n              <div className=\"row\">\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                  <Button\r\n                    type=\"submit\"\r\n                    content=\"Generate Report\"\r\n                    icon=\"right arrow\"\r\n                    labelPosition=\"right\"\r\n                    style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n                    onClick={handleSubmit}\r\n                    disabled={objValues.organisationUnitId === \"\" || loading} \r\n                  />\r\n                </div>\r\n              </div>\r\n              {loading && (\r\n                <Message icon>\r\n                                  <Message.Content>\r\n                                        <ProgressComponent/>\r\n                                  </Message.Content>\r\n                                </Message>\r\n              )}\r\n            </div>\r\n          </>\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ClinicData;\r\n","C:\\Users\\gamaliel.dashua\\IdeaProjects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\PmtctHtsReport.js",["209"],"import React, {useEffect, useState, useCallback} from \"react\";\r\nimport axios from \"axios\";\r\nimport {FormGroup, Label , CardBody,Input} from \"reactstrap\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card} from \"@material-ui/core\";\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { Button} from 'semantic-ui-react'\r\nimport { toast} from \"react-toastify\";\r\nimport FileSaver from \"file-saver\";\r\nimport { Message } from 'semantic-ui-react'\r\nimport ProgressComponent from \"./ProgressComponent\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\nconst PmtctHtsReport = (props) => {\r\n    let currentDate = new Date().toISOString().split('T')[0]\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false)\r\n    const [facilities, setFacilities] = useState([]);\r\n    const [status, setStatus] = useState(true);\r\n    const [objValues, setObjValues]=useState({\r\n        organisationUnitId:\"\",\r\n        organisationUnitName:\"\",\r\n        startDate:\"\",\r\n        endDate: \"\",\r\n        reportType: \"\"\r\n    })\r\n    useEffect(() => {\r\n        Facilities()\r\n      }, []);\r\n    const Facilities =()=>{\r\n    axios\r\n        .get(`${baseUrl}account`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n        console.log(response.data);\r\n            setFacilities(response.data.applicationUserOrganisationUnits);\r\n        })\r\n        .catch((error) => {\r\n        });\r\n\r\n    }\r\n    const handleInputChange = (e) => {\r\n        const selectedOption = e.target.options ? e.target.options[e.target.selectedIndex] : null;\r\n        const selectedValue = e.target.value;\r\n        const name = e.target.name;\r\n      \r\n        setObjValues(prevValues => ({\r\n            ...prevValues,\r\n            [name]: selectedValue,\r\n            organisationUnitName: name === \"organisationUnitId\" && selectedOption ? selectedOption.innerText : prevValues.organisationUnitName,\r\n        }));\r\n      };\r\n\r\n    const handleReportType = useCallback((event) => {\r\n        const selectedReportType = event.target.value;\r\n        setObjValues((prevObjValues) => ({ ...prevObjValues, reportType: selectedReportType }));\r\n      }, [setObjValues]);\r\n\r\n    const handleValueChange = () => {\r\n        setStatus(!status)\r\n\r\n        if (status === true) {\r\n          setObjValues ({...objValues,  startDate: \"1980-01-01\", endDate: currentDate});\r\n        } else {\r\n          setObjValues ({...objValues,  startDate: \"\", endDate: currentDate});\r\n        }\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true)\r\n\r\n        axios.post(`${baseUrl}pmtct-hts-reporting?facilityId=${objValues.organisationUnitId}&startDate=${objValues.startDate}&endDate=${objValues.endDate}&reportType=${objValues.reportType}`,objValues.organisationUnitId,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}, responseType: 'blob'},\r\n        )\r\n          .then(response => {\r\n            setLoading(false)\r\n            const fileName = `${objValues.organisationUnitName} PMTCT_HTS ${currentDate}`\r\n            const responseData = response.data\r\n            let blob = new Blob([responseData], {type: \"application/octet-stream\"});\r\n\r\n            FileSaver.saveAs(blob, `${fileName}.xlsx`);\r\n            toast.success(\"Pmtct HTS Report generated successfully\");\r\n          })\r\n          .catch(error => {\r\n            setLoading(false)\r\n            if(error.response && error.response.data){\r\n                let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                toast.error(errorMessage);\r\n              }\r\n              else{\r\n                toast.error(\"Something went wrong. Please try again...\");\r\n              }\r\n          });\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <Card >\r\n                <CardBody>\r\n\r\n                <h2 style={{color:'#000'}}>PMTCT HTS REPORT</h2>\r\n                <br/>\r\n                    < >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>From *</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"startDate\"\r\n                                        id=\"startDate\"\r\n                                        min={\"1980-01-01\"}\r\n                                        max={currentDate}\r\n                                        value={objValues.startDate}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>To *</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"endDate\"\r\n                                        id=\"endDate\"\r\n                                        min={\"1980-01-01\"}\r\n                                        max={currentDate}\r\n                                        value={objValues.endDate}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-2\">\r\n                                 <FormGroup check>\r\n                                  <Label check>\r\n                                    <Input type=\"checkbox\" onChange={handleValueChange}/>\r\n                                     {' '} &nbsp;&nbsp;<span> As at Today.</span>\r\n                                  </Label>\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group col-md-4\">\r\n                            <FormGroup check>\r\n  <Label check>\r\n    <Input \r\n      type=\"radio\" \r\n      name=\"reportType\" \r\n      value=\"GoN\" \r\n      checked={objValues.reportType === \"GoN\"} \r\n      onChange={handleReportType} \r\n      required\r\n    />\r\n    {' '} &nbsp;<span> GoN Report.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>\r\n  </Label>\r\n  <Label check>\r\n    <Input \r\n      type=\"radio\" \r\n      name=\"reportType\" \r\n      value=\"Pepfar\" \r\n      checked={objValues.reportType === \"Pepfar\"} \r\n      onChange={handleReportType} \r\n      required\r\n    />\r\n    {' '} &nbsp;&nbsp;<span> Pepfar Report.</span>\r\n  </Label>\r\n</FormGroup>\r\n</div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>Facility*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"organisationUnitId\"\r\n                                        id=\"organisationUnitId\"\r\n                                        value={objValues.organisationUnitId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {facilities.map((value) => (\r\n                                            <option key={value.id} value={value.organisationUnitId}>\r\n                                                {value.organisationUnitName}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n\r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                            <Button type=\"submit\" content='Generate Report' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit} \r\n                            disabled={objValues.organisationUnitId === \"\" || objValues.reportType === \"\" || loading} \r\n                            />\r\n                            </div>\r\n                            </div>\r\n\r\n                            {loading && (\r\n                                <Message icon>\r\n                                                  <Message.Content>\r\n                                                        <ProgressComponent/>\r\n                                                  </Message.Content>\r\n                                                </Message>\r\n                            )}\r\n                        </div>\r\n                    </>\r\n\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PmtctHtsReport","C:\\Users\\gamaliel.dashua\\IdeaProjects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\PrepReport.js",["210"],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { FormGroup, Label, CardBody, Input } from 'reactstrap';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Card } from '@material-ui/core';\r\nimport { token, url as baseUrl } from '../../../api';\r\nimport 'react-phone-input-2/lib/style.css';\r\nimport { Button } from 'semantic-ui-react';\r\nimport { toast } from 'react-toastify';\r\nimport FileSaver from 'file-saver';\r\nimport { Message } from 'semantic-ui-react';\r\nimport ProgressComponent from './ProgressComponent';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n    maxWidth: 752,\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: 'inline',\r\n  },\r\n  error: {\r\n    color: '#f85032',\r\n    fontSize: '12.8px',\r\n  },\r\n}));\r\n\r\nconst PrepReport = props => {\r\n  let currentDate = new Date().toISOString().split('T')[0];\r\n  const classes = useStyles();\r\n  const [loading, setLoading] = useState(false);\r\n  const [facilities, setFacilities] = useState([]);\r\n  const [status, setStatus] = useState(true);\r\n  const [objValues, setObjValues] = useState({\r\n    organisationUnitId: '',\r\n    organisationUnitName: '',\r\n    startDate: '',\r\n    endDate: '',\r\n  });\r\n  useEffect(() => {\r\n    Facilities();\r\n  }, []);\r\n  const Facilities = () => {\r\n    axios\r\n      .get(`${baseUrl}account`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setFacilities(response.data.applicationUserOrganisationUnits);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const handleInputChange = e => {\r\n    const selectedOption = e.target.options\r\n      ? e.target.options[e.target.selectedIndex]\r\n      : null;\r\n    const selectedValue = e.target.value;\r\n    const name = e.target.name;\r\n\r\n    setObjValues(prevValues => ({\r\n      ...prevValues,\r\n      [name]: selectedValue,\r\n      organisationUnitName:\r\n        name === 'organisationUnitId' && selectedOption\r\n          ? selectedOption.innerText\r\n          : prevValues.organisationUnitName,\r\n    }));\r\n  };\r\n\r\n  const handleValueChange = () => {\r\n    setStatus(!status);\r\n\r\n    if (status === true) {\r\n      setObjValues({\r\n        ...objValues,\r\n        startDate: '1980-01-01',\r\n        endDate: currentDate,\r\n      });\r\n    } else {\r\n      setObjValues({ ...objValues, startDate: '', endDate: currentDate });\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n\r\n    axios\r\n      .post(\r\n        `${baseUrl}prep-reporting?facilityId=${objValues.organisationUnitId}&startDate=${objValues.startDate}&endDate=${objValues.endDate}`,\r\n        objValues.organisationUnitId,\r\n        { headers: { Authorization: `Bearer ${token}` }, responseType: 'blob' }\r\n      )\r\n      .then(response => {\r\n        setLoading(false);\r\n        const fileName = `${objValues.organisationUnitName} Prep ${currentDate}`;\r\n        const responseData = response.data;\r\n        let blob = new Blob([responseData], {\r\n          type: 'application/octet-stream',\r\n        });\r\n\r\n        FileSaver.saveAs(blob, `${fileName}.xlsx`);\r\n        toast.success('PrEP-PBFW Report generated successfully');\r\n      })\r\n      .catch(error => {\r\n        setLoading(false);\r\n        if (error.response && error.response.data) {\r\n          let errorMessage =\r\n            error.response.data.apierror &&\r\n            error.response.data.apierror.message !== ''\r\n              ? error.response.data.apierror.message\r\n              : 'Something went wrong, please try again';\r\n          toast.error(errorMessage);\r\n        } else {\r\n          toast.error('Something went wrong. Please try again...');\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardBody>\r\n          <h2 style={{ color: '#000' }}>PrEP-PBFW Report </h2>\r\n          <br />\r\n          <>\r\n            <div className=\"row\">\r\n              <div className=\"form-group  col-md-6\">\r\n                <FormGroup>\r\n                  <Label>From *</Label>\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control\"\r\n                    name=\"startDate\"\r\n                    id=\"startDate\"\r\n                    min={'1980-01-01'}\r\n                    max={currentDate}\r\n                    value={objValues.startDate}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-6\">\r\n                <FormGroup>\r\n                  <Label>To *</Label>\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control\"\r\n                    name=\"endDate\"\r\n                    id=\"endDate\"\r\n                    min={'1980-01-01'}\r\n                    max={currentDate}\r\n                    value={objValues.endDate}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-6\">\r\n                <FormGroup check>\r\n                  <Label check>\r\n                    <Input type=\"checkbox\" onChange={handleValueChange} />{' '}\r\n                    &nbsp;&nbsp;<span> As at Today.</span>\r\n                  </Label>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-6\">\r\n                <FormGroup>\r\n                  <Label>Facility*</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"organisationUnitId\"\r\n                    id=\"organisationUnitId\"\r\n                    value={objValues.organisationUnitId}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                  >\r\n                    <option value={''}></option>\r\n                    {facilities.map(value => (\r\n                      <option key={value.id} value={value.organisationUnitId}>\r\n                        {value.organisationUnitName}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <br />\r\n              <div className=\"row\">\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                  <Button\r\n                    type=\"submit\"\r\n                    content=\"Generate Report\"\r\n                    icon=\"right arrow\"\r\n                    labelPosition=\"right\"\r\n                    style={{ backgroundColor: '#014d88', color: '#fff' }}\r\n                    onClick={handleSubmit}\r\n                    disabled={objValues.organisationUnitId === '' || loading}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              {loading && (\r\n                <Message icon>\r\n                  <Message.Content>\r\n                    <ProgressComponent />\r\n                  </Message.Content>\r\n                </Message>\r\n              )}\r\n            </div>\r\n          </>\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PrepReport;\r\n","C:\\Users\\gamaliel.dashua\\IdeaProjects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\PmtctMaternalCohortReport.js",["211"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {FormGroup, Label , CardBody, Input} from \"reactstrap\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card} from \"@material-ui/core\";\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { Button} from 'semantic-ui-react'\r\nimport { toast} from \"react-toastify\";\r\nimport FileSaver from \"file-saver\";\r\nimport { Message } from 'semantic-ui-react'\r\nimport ProgressComponent from \"./ProgressComponent\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\nconst PmtctMaternalCohortReport = (props) => {\r\n    let currentDate = new Date().toISOString().split('T')[0]\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false)\r\n    const [facilities, setFacilities] = useState([]);\r\n    const [status, setStatus] = useState(true);\r\n    const [objValues, setObjValues]=useState({\r\n        organisationUnitId:\"\",\r\n        organisationUnitName:\"\",\r\n        startDate:\"\",\r\n        endDate: \"\"\r\n    })\r\n    useEffect(() => {\r\n        Facilities()\r\n      }, []);\r\n    const Facilities =()=>{\r\n    axios\r\n        .get(`${baseUrl}account`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n        console.log(response.data);\r\n            setFacilities(response.data.applicationUserOrganisationUnits);\r\n        })\r\n        .catch((error) => {\r\n        });\r\n\r\n    }\r\n\r\n    const handleInputChange = (e) => {\r\n        const selectedOption = e.target.options ? e.target.options[e.target.selectedIndex] : null;\r\n        const selectedValue = e.target.value;\r\n        const name = e.target.name;\r\n      \r\n        setObjValues(prevValues => ({\r\n            ...prevValues,\r\n            [name]: selectedValue,\r\n            organisationUnitName: name === \"organisationUnitId\" && selectedOption ? selectedOption.innerText : prevValues.organisationUnitName,\r\n        }));\r\n      };\r\n\r\n    const handleValueChange = () => {\r\n        setStatus(!status)\r\n\r\n        if (status === true) {\r\n          setObjValues ({...objValues,  startDate: \"1980-01-01\", endDate: currentDate});\r\n        } else {\r\n          setObjValues ({...objValues,  startDate: \"\", endDate: currentDate});\r\n        }\r\n\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true)\r\n        console.log(token);\r\n\r\n        axios.post(`${baseUrl}reporting?reportId=2b6fe1b9-9af0-4af7-9f59-b9cfcb906158&facilityId=${objValues.organisationUnitId}&startDate=${objValues.startDate}&endDate=${objValues.endDate}`,objValues.organisationUnitId,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}, responseType: 'blob'},\r\n        )\r\n          .then(response => {\r\n            setLoading(false)\r\n            const fileName = `${objValues.organisationUnitName} PMTCT Maternal Cohort ${currentDate}`\r\n            const responseData = response.data\r\n            let blob = new Blob([responseData], {type: \"application/octet-stream\"});\r\n\r\n            FileSaver.saveAs(blob, `${fileName}.xlsx`);\r\n            toast.success(\"PMTCT Report generated successfully\");\r\n          })\r\n          .catch(error => {\r\n            setLoading(false)\r\n            if(error.response && error.response.data){\r\n                let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                toast.error(errorMessage);\r\n              }\r\n              else{\r\n                toast.error(\"Something went wrong. Please try again...\");\r\n              }\r\n          });\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <Card >\r\n                <CardBody>\r\n\r\n                <h2 style={{color:'#000'}}>PMTCT - Maternal Cohort REPORT</h2>\r\n                <br/>\r\n                    < >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>From *</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"startDate\"\r\n                                        id=\"startDate\"\r\n                                        min={\"1980-01-01\"}\r\n                                        max={currentDate}\r\n                                        value={objValues.startDate}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>To *</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"endDate\"\r\n                                        id=\"endDate\"\r\n                                        min={\"1980-01-01\"}\r\n                                        max={currentDate}\r\n                                        value={objValues.endDate}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                 <FormGroup check>\r\n                                  <Label check>\r\n                                    <Input type=\"checkbox\" onChange={handleValueChange}/>\r\n                                     {' '} &nbsp;&nbsp;<span> As at Today.</span>\r\n                                  </Label>\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>Facility*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"organisationUnitId\"\r\n                                        id=\"organisationUnitId\"\r\n                                        value={objValues.organisationUnitId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {facilities.map((value) => (\r\n                                            <option key={value.id} value={value.organisationUnitId}>\r\n                                                {value.organisationUnitName}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n\r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                            <Button type=\"submit\" content='Generate Report' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit} \r\n                            disabled={objValues.organisationUnitId === \"\" || loading} \r\n                            />\r\n                            </div>\r\n                            </div>\r\n\r\n                            {loading && (\r\n                                <Message icon>\r\n                                                  <Message.Content>\r\n                                                        <ProgressComponent/>\r\n                                                  </Message.Content>\r\n                                                </Message>\r\n                            )}\r\n                        </div>\r\n                    </>\r\n\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PmtctMaternalCohortReport","C:\\Users\\gamaliel.dashua\\IdeaProjects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\IndexElicitation.js",["212"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {FormGroup, Label , CardBody,Input} from \"reactstrap\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card} from \"@material-ui/core\";\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { Button} from 'semantic-ui-react'\r\nimport { toast} from \"react-toastify\";\r\nimport FileSaver from \"file-saver\";\r\nimport { Message} from 'semantic-ui-react'\r\nimport ProgressComponent from \"./ProgressComponent\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\nconst IndexElicitationReport = (props) => {\r\n    let currentDate = new Date().toISOString().split('T')[0]\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false)\r\n    const [facilities, setFacilities] = useState([]);\r\n    const [status, setStatus] = useState(true);\r\n    const [objValues, setObjValues]=useState({\r\n        organisationUnitId:\"\",\r\n        organisationUnitName:\"\",\r\n        startDate:\"\",\r\n        endDate: \"\"\r\n    })\r\n    useEffect(() => {\r\n        Facilities()\r\n    }, []);\r\n    const Facilities =()=>{\r\n        axios\r\n            .get(`${baseUrl}account`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                console.log(response.data);\r\n                setFacilities(response.data.applicationUserOrganisationUnits);\r\n            })\r\n            .catch((error) => {\r\n            });\r\n\r\n    }\r\n\r\n    const handleInputChange = (e) => {\r\n        const selectedOption = e.target.options ? e.target.options[e.target.selectedIndex] : null;\r\n        const selectedValue = e.target.value;\r\n        const name = e.target.name;\r\n      \r\n        setObjValues(prevValues => ({\r\n            ...prevValues,\r\n            [name]: selectedValue,\r\n            organisationUnitName: name === \"organisationUnitId\" && selectedOption ? selectedOption.innerText : prevValues.organisationUnitName,\r\n        }));\r\n      };\r\n\r\n    const handleValueChange = () => {\r\n        setStatus(!status)\r\n\r\n        if (status === true) {\r\n            setObjValues ({...objValues,  startDate: \"1980-01-01\", endDate: currentDate});\r\n        } else {\r\n            setObjValues ({...objValues,  startDate: \"\", endDate: currentDate});\r\n        }\r\n\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true)\r\n        console.log(token);\r\n\r\n        axios.post(`${baseUrl}index-elicitation-reporting?facilityId=${objValues.organisationUnitId}&startDate=${objValues.startDate}&endDate=${objValues.endDate}`,objValues.organisationUnitId,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}, responseType: 'blob'},\r\n        )\r\n            .then(response => {\r\n                setLoading(false)\r\n                const fileName = `${objValues.organisationUnitName} Index Elicitation ${currentDate}`\r\n                const responseData = response.data\r\n                let blob = new Blob([responseData], {type: \"application/octet-stream\"});\r\n\r\n                FileSaver.saveAs(blob, `${fileName}.xlsx`);\r\n                toast.success(\"Index Elicitation Report generated successfully\");\r\n            })\r\n            .catch(error => {\r\n                setLoading(false)\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                }\r\n                else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                }\r\n            });\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <Card >\r\n                <CardBody>\r\n\r\n                    <h2 style={{color:'#000'}}>INDEX ELICITATION REPORT</h2>\r\n                    <br/>\r\n                    < >\r\n                        <div className=\"row\">\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>From *</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"startDate\"\r\n                                        id=\"startDate\"\r\n                                        min={\"1980-01-01\"}\r\n                                        max={currentDate}\r\n                                        value={objValues.startDate}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>To *</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"endDate\"\r\n                                        id=\"endDate\"\r\n                                        min={\"1980-01-01\"}\r\n                                        max={currentDate}\r\n                                        value={objValues.endDate}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup check>\r\n                                    <Label check>\r\n                                        <Input type=\"checkbox\" onChange={handleValueChange}/>\r\n                                        {' '} &nbsp;&nbsp;<span> As at Today.</span>\r\n                                    </Label>\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>Facility*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"organisationUnitId\"\r\n                                        id=\"organisationUnitId\"\r\n                                        value={objValues.organisationUnitId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {facilities.map((value) => (\r\n                                            <option key={value.id} value={value.organisationUnitId}>\r\n                                                {value.organisationUnitName}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n\r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <br />\r\n                            <div className=\"row\">\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <Button type=\"submit\" content='Generate Report' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit} \r\n                                    disabled={objValues.organisationUnitId === \"\" || loading} \r\n                                    />\r\n                                </div>\r\n                            </div>\r\n\r\n                            {loading && (\r\n                                <Message icon>\r\n                                                  <Message.Content>\r\n                                                        <ProgressComponent/>\r\n                                                  </Message.Content>\r\n                                                </Message>\r\n                            )}\r\n                        </div>\r\n                    </>\r\n\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    );\r\n\r\n};\r\n\r\nexport default IndexElicitationReport","C:\\Users\\gamaliel.dashua\\IdeaProjects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\PrepLongitudinalReport.js",["213"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {FormGroup, Label , CardBody, Input} from \"reactstrap\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card} from \"@material-ui/core\";\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { Button} from 'semantic-ui-react'\r\nimport { toast} from \"react-toastify\";\r\nimport FileSaver from \"file-saver\";\r\nimport { Message } from 'semantic-ui-react'\r\nimport ProgressComponent from \"./ProgressComponent\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\nconst PrepLongitudinalReport = (props) => {\r\n    let currentDate = new Date().toISOString().split('T')[0]\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false)\r\n    const [facilities, setFacilities] = useState([]);\r\n    const [status, setStatus] = useState(true);\r\n    const [objValues, setObjValues]=useState({\r\n        organisationUnitId:\"\",\r\n        organisationUnitName:\"\",\r\n        startDate:\"\",\r\n        endDate: \"\"\r\n    })\r\n    useEffect(() => {\r\n        Facilities()\r\n      }, []);\r\n    const Facilities =()=>{\r\n    axios\r\n        .get(`${baseUrl}account`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            console.log(response.data);\r\n            setFacilities(response.data.applicationUserOrganisationUnits);\r\n        })\r\n        .catch((error) => {\r\n        });\r\n    }\r\n\r\n    const handleInputChange = (e) => {\r\n        const selectedOption = e.target.options ? e.target.options[e.target.selectedIndex] : null;\r\n        const selectedValue = e.target.value;\r\n        const name = e.target.name;\r\n      \r\n        setObjValues(prevValues => ({\r\n            ...prevValues,\r\n            [name]: selectedValue,\r\n            organisationUnitName: name === \"organisationUnitId\" && selectedOption ? selectedOption.innerText : prevValues.organisationUnitName,\r\n        }));\r\n      };\r\n\r\n    const handleValueChange = () => {\r\n        setStatus(!status)\r\n\r\n        if (status === true) {\r\n          setObjValues ({...objValues,  startDate: \"1980-01-01\", endDate: currentDate});\r\n        } else {\r\n          setObjValues ({...objValues,  startDate: \"\", endDate: currentDate});\r\n        }\r\n\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true)\r\n        axios.post(`${baseUrl}longitudinal-prep?facilityId=${objValues.organisationUnitId}&startDate=${objValues.startDate}&endDate=${objValues.endDate}`,objValues.organisationUnitId,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}, responseType: 'blob'},\r\n        )\r\n          .then(response => {\r\n            setLoading(false)\r\n            const fileName =`${objValues.organisationUnitName} Longitudinal Prep ${currentDate}`\r\n            const responseData = response.data\r\n            let blob = new Blob([responseData], {type: \"application/octet-stream\"});\r\n            FileSaver.saveAs(blob, `${fileName}.xlsx`);\r\n            toast.success(\"Prep Longitudinal Report generated successfully\");\r\n          })\r\n          .catch(error => {\r\n            setLoading(false)\r\n            if(error.response && error.response.data){\r\n                let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                toast.error(errorMessage);\r\n              }\r\n              else{\r\n                toast.error(\"Something went wrong. Please try again...\");\r\n              }\r\n          });\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <Card >\r\n                <CardBody>\r\n\r\n                <h2 style={{color:'#000'}}>Prep-Longitudinal REPORT</h2>\r\n                <br/>\r\n                    < >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>From *</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"startDate\"\r\n                                        id=\"startDate\"\r\n                                        min={\"1980-01-01\"}\r\n                                        max={currentDate}\r\n                                        value={objValues.startDate}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>To *</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"endDate\"\r\n                                        id=\"endDate\"\r\n                                        min={\"1980-01-01\"}\r\n                                        max={currentDate}\r\n                                        value={objValues.endDate}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                 <FormGroup check>\r\n                                  <Label check>\r\n                                    <Input type=\"checkbox\" onChange={handleValueChange}/>\r\n                                     {' '} &nbsp;&nbsp;<span> As at Today.</span>\r\n                                  </Label>\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>Facility*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"organisationUnitId\"\r\n                                        id=\"organisationUnitId\"\r\n                                        value={objValues.organisationUnitId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {facilities.map((value) => (\r\n                                            <option key={value.id} value={value.organisationUnitId}>\r\n                                                {value.organisationUnitName}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n\r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                            <Button type=\"submit\" content='Generate Report' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit} disabled={objValues.organisationUnitId === \"\" || loading} />\r\n                            </div>\r\n                            </div>\r\n\r\n                            {loading && (\r\n                                <Message icon>\r\n                                                  <Message.Content>\r\n                                                        <ProgressComponent/>\r\n                                                  </Message.Content>\r\n                                                </Message>\r\n                            )}\r\n                        </div>\r\n                    </>\r\n\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PrepLongitudinalReport","C:\\Users\\gamaliel.dashua\\IdeaProjects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\EACReport.js",["214"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { FormGroup, Label, CardBody, Input } from \"reactstrap\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card } from \"@material-ui/core\";\r\nimport { token, url as baseUrl } from \"../../../api\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport { toast } from \"react-toastify\";\r\nimport FileSaver from \"file-saver\";\r\nimport { Message} from \"semantic-ui-react\";\r\nimport ProgressComponent from \"./ProgressComponent\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n    maxWidth: 752,\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n}));\r\n\r\nconst EACReport = (props) => {\r\n  let currentDate = new Date().toISOString().split('T')[0]\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false)\r\n    const [facilities, setFacilities] = useState([]);\r\n    const [status, setStatus] = useState(true);\r\n    const [objValues, setObjValues]=useState({\r\n        organisationUnitId:\"\",\r\n        organisationUnitName:\"\",\r\n        startDate:\"\",\r\n        endDate: \"\"\r\n    })\r\n    useEffect(() => {\r\n        Facilities()\r\n      }, []);\r\n    const Facilities =()=>{\r\n    axios\r\n        .get(`${baseUrl}account`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            console.log(response.data);\r\n            setFacilities(response.data.applicationUserOrganisationUnits);\r\n        })\r\n        .catch((error) => {\r\n        });\r\n    }\r\n\r\n    const handleInputChange = (e) => {\r\n      const selectedOption = e.target.options ? e.target.options[e.target.selectedIndex] : null;\r\n      const selectedValue = e.target.value;\r\n      const name = e.target.name;\r\n    \r\n      setObjValues(prevValues => ({\r\n          ...prevValues,\r\n          [name]: selectedValue,\r\n          organisationUnitName: name === \"organisationUnitId\" && selectedOption ? selectedOption.innerText : prevValues.organisationUnitName,\r\n      }));\r\n    };\r\n\r\n    const handleValueChange = () => {\r\n        setStatus(!status)\r\n\r\n        if (status === true) {\r\n          setObjValues ({...objValues,  startDate: \"1980-01-01\", endDate: currentDate});\r\n        } else {\r\n          setObjValues ({...objValues,  startDate: \"\", endDate: currentDate});\r\n        }\r\n\r\n    }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n\r\n    axios\r\n      .get(\r\n        `${baseUrl}reporting/eac-report?facilityId=${objValues.organisationUnitId}&start=${objValues.startDate}&end=${objValues.endDate}`,\r\n        { headers: { Authorization: `Bearer ${token}` }, responseType: \"blob\" }\r\n      )\r\n      .then((response) => {\r\n        setLoading(false);\r\n        const fileName = `${objValues.organisationUnitName} EAC-Report ${currentDate}`;\r\n        const responseData = response.data;\r\n        let blob = new Blob([responseData], {\r\n          type: \"application/octet-stream\",\r\n        });\r\n        FileSaver.saveAs(blob, `${fileName}.xlsx`);\r\n        toast.success(\" Report generated successful\");\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n        if (error.response && error.response.data) {\r\n          let errorMessage =\r\n            error.response.data.apierror &&\r\n            error.response.data.apierror.message !== \"\"\r\n              ? error.response.data.apierror.message\r\n              : \"Something went wrong, please try again\";\r\n          toast.error(errorMessage);\r\n        } else {\r\n          toast.error(\"Something went wrong. Please try again...\");\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardBody>\r\n          <h2 style={{ color: \"#000\" }}>EAC REPORT</h2>\r\n          <br />\r\n          <>\r\n            <div className=\"row\">\r\n              <div className=\"form-group  col-md-6\">\r\n                <FormGroup>\r\n                                    <Label>From *</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"startDate\"\r\n                                        id=\"startDate\"\r\n                                        min={\"1980-01-01\"}\r\n                                        max={currentDate}\r\n                                        value={objValues.startDate}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>To *</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"endDate\"\r\n                                        id=\"endDate\"\r\n                                        min={\"1980-01-01\"}\r\n                                        max={currentDate}\r\n                                        value={objValues.endDate}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                 <FormGroup check>\r\n                                  <Label check>\r\n                                    <Input type=\"checkbox\" onChange={handleValueChange}/>\r\n                                     {' '} &nbsp;&nbsp;<span> As at Today.</span>\r\n                                  </Label>\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>Facility*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"organisationUnitId\"\r\n                                        id=\"organisationUnitId\"\r\n                                        value={objValues.organisationUnitId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {facilities.map((value) => (\r\n                                            <option key={value.id} value={value.organisationUnitId}>\r\n                                                {value.organisationUnitName}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n\r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                            <Button type=\"submit\" content='Generate Report' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit} disabled={objValues.organisationUnitId === \"\" || loading} />\r\n                            </div>\r\n                            </div>\r\n\r\n              {loading && (\r\n                <Message icon>\r\n                                  <Message.Content>\r\n                                        <ProgressComponent/>\r\n                                  </Message.Content>\r\n                                </Message>\r\n              )}\r\n            </div>\r\n          </>\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EACReport;\r\n","C:\\Users\\gamaliel.dashua\\IdeaProjects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\NcdReport.js",["215"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { FormGroup, Label, CardBody, Input } from \"reactstrap\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card } from \"@material-ui/core\";\r\nimport { token, url as baseUrl } from \"../../../api\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport { toast } from \"react-toastify\";\r\nimport FileSaver from \"file-saver\";\r\nimport { Message } from \"semantic-ui-react\";\r\nimport ProgressComponent from \"./ProgressComponent\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n    maxWidth: 752,\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n}));\r\n\r\nconst NcdReport = (props) => {\r\n  let currentDate = new Date().toISOString().split('T')[0]\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false)\r\n    const [facilities, setFacilities] = useState([]);\r\n    const [status, setStatus] = useState(true);\r\n    const [objValues, setObjValues]=useState({\r\n        organisationUnitId:\"\",\r\n        organisationUnitName:\"\",\r\n        startDate:\"\",\r\n        endDate: \"\"\r\n    })\r\n    useEffect(() => {\r\n        Facilities()\r\n      }, []);\r\n    const Facilities =()=>{\r\n    axios\r\n        .get(`${baseUrl}account`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            console.log(response.data);\r\n            setFacilities(response.data.applicationUserOrganisationUnits);\r\n        })\r\n        .catch((error) => {\r\n        });\r\n    }\r\n\r\n    const handleInputChange = (e) => {\r\n      const selectedOption = e.target.options ? e.target.options[e.target.selectedIndex] : null;\r\n      const selectedValue = e.target.value;\r\n      const name = e.target.name;\r\n    \r\n      setObjValues(prevValues => ({\r\n          ...prevValues,\r\n          [name]: selectedValue,\r\n          organisationUnitName: name === \"organisationUnitId\" && selectedOption ? selectedOption.innerText : prevValues.organisationUnitName,\r\n      }));\r\n    };\r\n\r\n    const handleValueChange = () => {\r\n        setStatus(!status)\r\n\r\n        if (status === true) {\r\n          setObjValues ({...objValues,  startDate: \"1980-01-01\", endDate: currentDate});\r\n        } else {\r\n          setObjValues ({...objValues,  startDate: \"\", endDate: currentDate});\r\n        }\r\n\r\n    }\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n\r\n    axios\r\n      .get(\r\n        `${baseUrl}reporting/ncd-report?facilityId=${objValues.organisationUnitId}&start=${objValues.startDate}&end=${objValues.endDate}`,\r\n        { headers: { Authorization: `Bearer ${token}` }, responseType: \"blob\" }\r\n      )\r\n      .then((response) => {\r\n        setLoading(false);\r\n        const fileName = `${objValues.organisationUnitName} NCD-Report ${currentDate}`;\r\n        const responseData = response.data;\r\n        let blob = new Blob([responseData], {\r\n          type: \"application/octet-stream\",\r\n        });\r\n        FileSaver.saveAs(blob, `${fileName}.xlsx`);\r\n        toast.success(\" Report generated successful\");\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n        if (error.response && error.response.data) {\r\n          let errorMessage =\r\n            error.response.data.apierror &&\r\n            error.response.data.apierror.message !== \"\"\r\n              ? error.response.data.apierror.message\r\n              : \"Something went wrong, please try again\";\r\n          toast.error(errorMessage);\r\n        } else {\r\n          toast.error(\"Something went wrong. Please try again...\");\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardBody>\r\n          <h2 style={{ color: \"#000\" }}>NCD REPORT</h2>\r\n          <br />\r\n          <>\r\n            <div className=\"row\">\r\n              <div className=\"form-group  col-md-6\">\r\n                <FormGroup>\r\n                                    <Label>From *</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"startDate\"\r\n                                        id=\"startDate\"\r\n                                        min={\"1980-01-01\"}\r\n                                        max={currentDate}\r\n                                        value={objValues.startDate}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>To *</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"endDate\"\r\n                                        id=\"endDate\"\r\n                                        min={\"1980-01-01\"}\r\n                                        max={currentDate}\r\n                                        //min={objValues.startDate}\r\n                                        value={objValues.endDate}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                 <FormGroup check>\r\n                                  <Label check>\r\n                                    <Input type=\"checkbox\" onChange={handleValueChange}/>\r\n                                     {' '} &nbsp;&nbsp;<span> As at Today.</span>\r\n                                  </Label>\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>Facility*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"organisationUnitId\"\r\n                                        id=\"organisationUnitId\"\r\n                                        value={objValues.organisationUnitId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {facilities.map((value) => (\r\n                                            <option key={value.id} value={value.organisationUnitId}>\r\n                                                {value.organisationUnitName}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n\r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                            <Button type=\"submit\" content='Generate Report' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit} disabled={objValues.organisationUnitId === \"\" || loading} />\r\n                            </div>\r\n                            </div>\r\n\r\n              {loading && (\r\n                <Message icon>\r\n                                  <Message.Content>\r\n                                        <ProgressComponent/>\r\n                                  </Message.Content>\r\n                                </Message>\r\n              )}\r\n            </div>\r\n          </>\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NcdReport;","C:\\Users\\gamaliel.dashua\\IdeaProjects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\KpPrevReport.js",["216"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {FormGroup, Label , CardBody,Input} from \"reactstrap\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card} from \"@material-ui/core\";\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { Button} from 'semantic-ui-react'\r\nimport { toast} from \"react-toastify\";\r\nimport FileSaver from \"file-saver\";\r\nimport { Message} from 'semantic-ui-react'\r\nimport ProgressComponent from \"./ProgressComponent\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\nconst KpPrevReport = (props) => {\r\n    let currentDate = new Date().toISOString().split('T')[0]\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false)\r\n    const [facilities, setFacilities] = useState([]);\r\n    const [status, setStatus] = useState(true);\r\n    const [objValues, setObjValues]=useState({\r\n        organisationUnitId:\"\",\r\n        organisationUnitName:\"\",\r\n        startDate:\"\",\r\n        endDate: \"\"\r\n    })\r\n    useEffect(() => {\r\n        Facilities()\r\n      }, []);\r\n    const Facilities =()=>{\r\n    axios\r\n        .get(`${baseUrl}account`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            console.log(response.data);\r\n            setFacilities(response.data.applicationUserOrganisationUnits);\r\n        })\r\n        .catch((error) => {\r\n        });\r\n    }\r\n    const handleInputChange = (e) => {\r\n        const selectedOption = e.target.options ? e.target.options[e.target.selectedIndex] : null;\r\n        const selectedValue = e.target.value;\r\n        const name = e.target.name;\r\n      \r\n        setObjValues(prevValues => ({\r\n            ...prevValues,\r\n            [name]: selectedValue,\r\n            organisationUnitName: name === \"organisationUnitId\" && selectedOption ? selectedOption.innerText : prevValues.organisationUnitName,\r\n        }));\r\n      };\r\n\r\n    const handleValueChange = () => {\r\n        setStatus(!status)\r\n\r\n        if (status === true) {\r\n          setObjValues ({...objValues,  startDate: \"1980-01-01\", endDate: currentDate});\r\n        } else {\r\n          setObjValues ({...objValues,  startDate: \"\", endDate: currentDate});\r\n        }\r\n\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true)\r\n        axios.post(`${baseUrl}kp-prev-report?facilityId=${objValues.organisationUnitId}&startDate=${objValues.startDate}&endDate=${objValues.endDate}`,objValues.organisationUnitId,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}, responseType: 'blob'},\r\n        )\r\n          .then(response => {\r\n            setLoading(false)\r\n            const fileName =`${objValues.organisationUnitName} Kp_Prev ${currentDate}`\r\n            const responseData = response.data\r\n            let blob = new Blob([responseData], {type: \"application/octet-stream\"});\r\n\r\n            FileSaver.saveAs(blob, `${fileName}.xlsx`);\r\n            toast.success(\"Kp Prev Report generated successfully\");\r\n          })\r\n          .catch(error => {\r\n            setLoading(false)\r\n            if(error.response && error.response.data){\r\n                let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                toast.error(errorMessage);\r\n              }\r\n              else{\r\n                toast.error(\"Something went wrong. Please try again...\");\r\n              }\r\n          });\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <Card >\r\n                <CardBody>\r\n\r\n                <h2 style={{color:'#000'}}>Kp Prev REPORT</h2>\r\n                <br/>\r\n                    < >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>From *</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"startDate\"\r\n                                        id=\"startDate\"\r\n                                        min={\"1980-01-01\"}\r\n                                        max={currentDate}\r\n                                        value={objValues.startDate}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>To *</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"endDate\"\r\n                                        id=\"endDate\"\r\n                                        min={\"1980-01-01\"}\r\n                                        max={currentDate}\r\n                                        value={objValues.endDate}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                 <FormGroup check>\r\n                                  <Label check>\r\n                                    <Input type=\"checkbox\" onChange={handleValueChange}/>\r\n                                     {' '} &nbsp;&nbsp;<span> As at Today.</span>\r\n                                  </Label>\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>Facility*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"organisationUnitId\"\r\n                                        id=\"organisationUnitId\"\r\n                                        value={objValues.organisationUnitId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {facilities.map((value) => (\r\n                                            <option key={value.id} value={value.organisationUnitId}>\r\n                                                {value.organisationUnitName}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n\r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                            <Button type=\"submit\" content='Generate Report' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit} \r\n                            disabled={objValues.organisationUnitId === \"\" || loading} \r\n                            />\r\n                            </div>\r\n                            </div>\r\n\r\n                            {loading && (\r\n                                <Message icon>\r\n                                                  <Message.Content>\r\n                                                        <ProgressComponent/>\r\n                                                  </Message.Content>\r\n                                                </Message>\r\n                            )}\r\n                        </div>\r\n                    </>\r\n\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default KpPrevReport","C:\\Users\\gamaliel.dashua\\IdeaProjects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\MhpssReport.js",["217"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {FormGroup, Label , CardBody, Input} from \"reactstrap\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card} from \"@material-ui/core\";\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { Button} from 'semantic-ui-react'\r\nimport { toast} from \"react-toastify\";\r\nimport FileSaver from \"file-saver\";\r\nimport { Message} from 'semantic-ui-react'\r\nimport ProgressComponent from \"./ProgressComponent\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\nconst MhpssReport = (props) => {\r\n    let currentDate = new Date().toISOString().split('T')[0]\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false)\r\n    const [facilities, setFacilities] = useState([]);\r\n    const [status, setStatus] = useState(true);\r\n    const [objValues, setObjValues]=useState({\r\n        organisationUnitId:\"\",\r\n        organisationUnitName:\"\",\r\n        startDate:\"\",\r\n        endDate: \"\"\r\n    })\r\n    useEffect(() => {\r\n        Facilities()\r\n      }, []);\r\n    const Facilities =()=>{\r\n    axios\r\n        .get(`${baseUrl}account`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            console.log(response.data);\r\n            setFacilities(response.data.applicationUserOrganisationUnits);\r\n        })\r\n        .catch((error) => {\r\n        });\r\n    }\r\n\r\n    const handleInputChange = (e) => {\r\n        const selectedOption = e.target.options ? e.target.options[e.target.selectedIndex] : null;\r\n        const selectedValue = e.target.value;\r\n        const name = e.target.name;\r\n      \r\n        setObjValues(prevValues => ({\r\n            ...prevValues,\r\n            [name]: selectedValue,\r\n            organisationUnitName: name === \"organisationUnitId\" && selectedOption ? selectedOption.innerText : prevValues.organisationUnitName,\r\n        }));\r\n      };\r\n\r\n    const handleValueChange = () => {\r\n        setStatus(!status)\r\n\r\n        if (status === true) {\r\n          setObjValues ({...objValues,  startDate: \"1980-01-01\", endDate: currentDate});\r\n        } else {\r\n          setObjValues ({...objValues,  startDate: \"\", endDate: currentDate});\r\n        }\r\n\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true)\r\n        axios.post(`${baseUrl}reporting?reportId=e5f5685b-d355-498f-bc71-191b4037726c&facilityId=${objValues.organisationUnitId}&startDate=${objValues.startDate}&endDate=${objValues.endDate}`,objValues.organisationUnitId,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}, responseType: 'blob'},\r\n        )\r\n          .then(response => {\r\n            setLoading(false)\r\n            const fileName =`${objValues.organisationUnitName} Mhpss Report ${currentDate}`\r\n            const responseData = response.data\r\n            let blob = new Blob([responseData], {type: \"application/octet-stream\"});\r\n\r\n            FileSaver.saveAs(blob, `${fileName}.xlsx`);\r\n            toast.success(\"MHPSS Report generated successfully\");\r\n          })\r\n          .catch(error => {\r\n            setLoading(false)\r\n            if(error.response && error.response.data){\r\n                let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                toast.error(errorMessage);\r\n              }\r\n              else{\r\n                toast.error(\"Something went wrong. Please try again...\");\r\n              }\r\n          });\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <Card >\r\n                <CardBody>\r\n\r\n                <h2 style={{color:'#000'}}>MHPSS REPORT</h2>\r\n                <br/>\r\n                    < >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>From *</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"startDate\"\r\n                                        id=\"startDate\"\r\n                                        min={\"1980-01-01\"}\r\n                                        max={currentDate}\r\n                                        value={objValues.startDate}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>To *</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"endDate\"\r\n                                        id=\"endDate\"\r\n                                        min={\"1980-01-01\"}\r\n                                        max={currentDate}\r\n                                        value={objValues.endDate}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                 <FormGroup check>\r\n                                  <Label check>\r\n                                    <Input type=\"checkbox\" onChange={handleValueChange}/>\r\n                                     {' '} &nbsp;&nbsp;<span> As at Today.</span>\r\n                                  </Label>\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>Facility*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"organisationUnitId\"\r\n                                        id=\"organisationUnitId\"\r\n                                        value={objValues.organisationUnitId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {facilities.map((value) => (\r\n                                            <option key={value.id} value={value.organisationUnitId}>\r\n                                                {value.organisationUnitName}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n\r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                            <Button type=\"submit\" content='Generate Report' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit} disabled={objValues.organisationUnitId === \"\" || loading} />\r\n                            </div>\r\n                            </div>\r\n\r\n                            {loading && (\r\n                                <Message icon>\r\n                                                  <Message.Content>\r\n                                                        <ProgressComponent/>\r\n                                                  </Message.Content>\r\n                                                </Message>\r\n                            )}\r\n                        </div>\r\n                    </>\r\n\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MhpssReport","C:\\Users\\gamaliel.dashua\\IdeaProjects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\HTSIndexReport.js",["218","219","220"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {FormGroup, Label , CardBody, Input} from \"reactstrap\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card} from \"@material-ui/core\";\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { Button} from 'semantic-ui-react'\r\nimport { toast} from \"react-toastify\";\r\nimport FileSaver from \"file-saver\";\r\nimport { Message } from 'semantic-ui-react'\r\nimport ProgressComponent from \"./ProgressComponent\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\nconst HTSIndexReport = (props) => {\r\n    let currentDate = new Date().toISOString().split('T')[0]\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false)\r\n    const [facilities, setFacilities] = useState([]);\r\n    const [status, setStatus] = useState(true);\r\n    const [objValues, setObjValues]=useState({\r\n        organisationUnitId:\"\",\r\n        organisationUnitName:\"\",\r\n        startDate:\"\",\r\n        endDate: \"\"\r\n    })\r\n    useEffect(() => {\r\n        Facilities()\r\n      }, []);\r\n    const Facilities =()=>{\r\n    axios\r\n        .get(`${baseUrl}account`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            console.log(response.data);\r\n            setFacilities(response.data.applicationUserOrganisationUnits);\r\n        })\r\n        .catch((error) => {\r\n        });\r\n    }\r\n\r\n    const handleInputChange = (e) => {\r\n        const selectedOption = e.target.options ? e.target.options[e.target.selectedIndex] : null;\r\n        const selectedValue = e.target.value;\r\n        const name = e.target.name;\r\n      \r\n        setObjValues(prevValues => ({\r\n            ...prevValues,\r\n            [name]: selectedValue,\r\n            organisationUnitName: name === \"organisationUnitId\" && selectedOption ? selectedOption.innerText : prevValues.organisationUnitName,\r\n        }));\r\n      };\r\n\r\n    const handleValueChange = () => {\r\n        setStatus(!status)\r\n\r\n        if (status === true) {\r\n          setObjValues ({...objValues,  startDate: \"1980-01-01\", endDate: currentDate});\r\n        } else {\r\n          setObjValues ({...objValues,  startDate: \"\", endDate: currentDate});\r\n        }\r\n\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true)\r\n\r\n        axios.post(`${baseUrl}family-index-report?facilityId=${objValues.organisationUnitId}`,objValues.organisationUnitId,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}, responseType: 'blob'},\r\n        )\r\n          .then(response => {\r\n            setLoading(false)\r\n            const fileName =`${objValues.organisationUnitName} HTS FAMILY Index Report ${currentDate}`\r\n            const responseData = response.data\r\n            let blob = new Blob([responseData], {type: \"application/octet-stream\"});\r\n\r\n            FileSaver.saveAs(blob, `${fileName}.xlsx`);\r\n            toast.success(\"HTS FAMILY Index Report generated successfully\");\r\n          })\r\n          .catch(error => {\r\n            setLoading(false)\r\n            if(error.response && error.response.data){\r\n                let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                toast.error(errorMessage);\r\n              }\r\n              else{\r\n                toast.error(\"Something went wrong. Please try again...\");\r\n              }\r\n          });\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <Card >\r\n                <CardBody>\r\n\r\n                <h2 style={{color:'#000'}}>HTS INDEX REPORT</h2>\r\n                <br/>\r\n                    < >\r\n                        <div className=\"row\">\r\n                        {/* <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>From *</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"startDate\"\r\n                                        id=\"startDate\"\r\n                                        min={\"1980-01-01\"}\r\n                                        max={currentDate}\r\n                                        value={objValues.startDate}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>To *</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"endDate\"\r\n                                        id=\"endDate\"\r\n                                        min={\"1980-01-01\"}\r\n                                        max={currentDate}\r\n                                        //min={objValues.startDate}\r\n                                        value={objValues.endDate}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                 <FormGroup check>\r\n                                  <Label check>\r\n                                    <Input type=\"checkbox\" onChange={handleValueChange}/>\r\n                                     {' '} &nbsp;&nbsp;<span> As at Today.</span>\r\n                                  </Label>\r\n                                </FormGroup>\r\n                            </div> */}\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>Facility*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"organisationUnitId\"\r\n                                        id=\"organisationUnitId\"\r\n                                        value={objValues.organisationUnitId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {facilities.map((value) => (\r\n                                            <option key={value.id} value={value.organisationUnitId}>\r\n                                                {value.organisationUnitName}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n\r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                            <Button type=\"submit\" content='Generate Report' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit} \r\n                            disabled={objValues.organisationUnitId === \"\" || loading} \r\n                            />\r\n                            </div>\r\n                            </div>\r\n\r\n                            {loading && (\r\n                                <Message icon>\r\n                                                  <Message.Content>\r\n                                                        <ProgressComponent/>\r\n                                                  </Message.Content>\r\n                                                </Message>\r\n                            )}\r\n                        </div>\r\n                    </>\r\n\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default HTSIndexReport","C:\\Users\\gamaliel.dashua\\IdeaProjects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\ADRReport.js",["221"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {FormGroup, Label , CardBody, Input} from \"reactstrap\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card} from \"@material-ui/core\";\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { Button} from 'semantic-ui-react'\r\nimport { toast} from \"react-toastify\";\r\nimport FileSaver from \"file-saver\";\r\nimport { Message } from 'semantic-ui-react'\r\nimport ProgressComponent from \"./ProgressComponent\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\nconst ADRReport = (props) => {\r\n    let currentDate = new Date().toISOString().split('T')[0]\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false)\r\n    const [facilities, setFacilities] = useState([]);\r\n    const [status, setStatus] = useState(true);\r\n    const [objValues, setObjValues]=useState({\r\n        organisationUnitId:\"\",\r\n        organisationUnitName:\"\",\r\n        startDate:\"\",\r\n        endDate: \"\"\r\n    })\r\n    useEffect(() => {\r\n        Facilities()\r\n      }, []);\r\n    //Get list of WhoStaging\r\n    const Facilities =()=>{\r\n    axios\r\n        .get(`${baseUrl}account`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n        console.log(response.data);\r\n            setFacilities(response.data.applicationUserOrganisationUnits);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });\r\n\r\n    }\r\n\r\n\r\n    const handleInputChange = (e) => {\r\n        const selectedOption = e.target.options ? e.target.options[e.target.selectedIndex] : null;\r\n        const selectedValue = e.target.value;\r\n        const name = e.target.name;\r\n      \r\n        setObjValues(prevValues => ({\r\n            ...prevValues,\r\n            [name]: selectedValue,\r\n            organisationUnitName: name === \"organisationUnitId\" && selectedOption ? selectedOption.innerText : prevValues.organisationUnitName,\r\n        }));\r\n      };\r\n\r\n    const handleValueChange = () => {\r\n        setStatus(!status)\r\n\r\n        if (status === true) {\r\n          setObjValues ({...objValues,  startDate: \"1980-01-01\", endDate: currentDate});\r\n        } else {\r\n          setObjValues ({...objValues,  startDate: \"\", endDate: currentDate});\r\n        }\r\n\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true)\r\n        console.log(token);\r\n\r\n        axios.post(`${baseUrl}adr-reporting?&facilityId=${objValues.organisationUnitId}&startDate=${objValues.startDate}&endDate=${objValues.endDate}`,objValues.organisationUnitId,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}, responseType: 'blob'},\r\n        )\r\n          .then(response => {\r\n            setLoading(false)\r\n            const fileName = `${objValues.organisationUnitName} ADR ${currentDate}`\r\n            const responseData = response.data\r\n            let blob = new Blob([responseData], {type: \"application/octet-stream\"});\r\n\r\n            FileSaver.saveAs(blob, `${fileName}.xlsx`);\r\n            toast.success(\"ADR Report generated successfully\");\r\n          })\r\n          .catch(error => {\r\n            setLoading(false)\r\n            if(error.response && error.response.data){\r\n                let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                toast.error(errorMessage);\r\n              }\r\n              else{\r\n                toast.error(\"Something went wrong. Please try again...\");\r\n              }\r\n          });\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <Card >\r\n                <CardBody>\r\n\r\n                <h2 style={{color:'#000'}}>ADR REPORT</h2>\r\n                <br/>\r\n                    < >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>From *</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"startDate\"\r\n                                        id=\"startDate\"\r\n                                        min={\"1980-01-01\"}\r\n                                        max={currentDate}\r\n                                        value={objValues.startDate}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>To *</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"endDate\"\r\n                                        id=\"endDate\"\r\n                                        min={\"1980-01-01\"}\r\n                                        max={currentDate}\r\n                                        //min={objValues.startDate}\r\n                                        value={objValues.endDate}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                 <FormGroup check>\r\n                                  <Label check>\r\n                                    <Input type=\"checkbox\" onChange={handleValueChange}/>\r\n                                     {' '} &nbsp;&nbsp;<span> As at Today.</span>\r\n                                  </Label>\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>Facility*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"organisationUnitId\"\r\n                                        id=\"organisationUnitId\"\r\n                                        value={objValues.organisationUnitId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {facilities.map((value) => (\r\n                                            <option key={value.id} value={value.organisationUnitId}>\r\n                                                {value.organisationUnitName}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n\r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                            <Button type=\"submit\" content='Generate Report' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit} \r\n                            // disabled={objValues.organisationUnitId===\"\" ? true : false}\r\n                            disabled={objValues.organisationUnitId === \"\" || loading} \r\n                            />\r\n                            </div>\r\n                            </div>\r\n\r\n                            {loading && (\r\n                                <Message icon>\r\n                                 <Message.Content>\r\n                                       <ProgressComponent/>\r\n                                 </Message.Content>\r\n                               </Message>\r\n                            )}\r\n                        </div>\r\n                    </>\r\n\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ADRReport","C:\\Users\\gamaliel.dashua\\IdeaProjects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\HIVSTReport.js",["222"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {FormGroup, Label , CardBody, Input} from \"reactstrap\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card} from \"@material-ui/core\";\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { Button} from 'semantic-ui-react'\r\nimport { toast} from \"react-toastify\";\r\nimport FileSaver from \"file-saver\";\r\nimport { Message} from 'semantic-ui-react'\r\nimport ProgressComponent from \"./ProgressComponent\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\nconst HIVSTReport = (props) => {\r\n    let currentDate = new Date().toISOString().split('T')[0]\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false)\r\n    const [facilities, setFacilities] = useState([]);\r\n    const [status, setStatus] = useState(true);\r\n    const [objValues, setObjValues]=useState({\r\n        organisationUnitId:\"\",\r\n        organisationUnitName:\"\",\r\n        startDate:\"\",\r\n        endDate: \"\"\r\n    })\r\n    useEffect(() => {\r\n        Facilities()\r\n      }, []);\r\n    const Facilities =()=>{\r\n    axios\r\n        .get(`${baseUrl}account`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            console.log(response.data);\r\n            setFacilities(response.data.applicationUserOrganisationUnits);\r\n        })\r\n        .catch((error) => {\r\n        });\r\n    }\r\n\r\n    const handleInputChange = (e) => {\r\n        const selectedOption = e.target.options ? e.target.options[e.target.selectedIndex] : null;\r\n        const selectedValue = e.target.value;\r\n        const name = e.target.name;\r\n      \r\n        setObjValues(prevValues => ({\r\n            ...prevValues,\r\n            [name]: selectedValue,\r\n            organisationUnitName: name === \"organisationUnitId\" && selectedOption ? selectedOption.innerText : prevValues.organisationUnitName,\r\n        }));\r\n      };\r\n\r\n    const handleValueChange = () => {\r\n        setStatus(!status)\r\n\r\n        if (status === true) {\r\n          setObjValues ({...objValues,  startDate: \"1980-01-01\", endDate: currentDate});\r\n        } else {\r\n          setObjValues ({...objValues,  startDate: \"\", endDate: currentDate});\r\n        }\r\n\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true)\r\n\r\n        axios.post(`${baseUrl}hivst-report?facilityId=${objValues.organisationUnitId}&startDate=${objValues.startDate}&endDate=${objValues.endDate}`,objValues.organisationUnitId,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}, responseType: 'blob'},\r\n        )\r\n          .then(response => {\r\n            setLoading(false)\r\n            const fileName =`${objValues.organisationUnitName} HIVST Report ${currentDate}`\r\n            const responseData = response.data\r\n            let blob = new Blob([responseData], {type: \"application/octet-stream\"});\r\n\r\n            FileSaver.saveAs(blob, `${fileName}.xlsx`);\r\n            toast.success(\"HIVST Report generated successfully\");\r\n          })\r\n          .catch(error => {\r\n            setLoading(false)\r\n            if(error.response && error.response.data){\r\n                let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                toast.error(errorMessage);\r\n              }\r\n              else{\r\n                toast.error(\"Something went wrong. Please try again...\");\r\n              }\r\n          });\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <Card >\r\n                <CardBody>\r\n\r\n                <h2 style={{color:'#000'}}>HIVST REPORT</h2>\r\n                <br/>\r\n                    < >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>From *</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"startDate\"\r\n                                        id=\"startDate\"\r\n                                        min={\"1980-01-01\"}\r\n                                        max={currentDate}\r\n                                        value={objValues.startDate}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>To *</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"endDate\"\r\n                                        id=\"endDate\"\r\n                                        min={\"1980-01-01\"}\r\n                                        max={currentDate}\r\n                                        value={objValues.endDate}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                 <FormGroup check>\r\n                                  <Label check>\r\n                                    <Input type=\"checkbox\" onChange={handleValueChange}/>\r\n                                     {' '} &nbsp;&nbsp;<span> As at Today.</span>\r\n                                  </Label>\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>Facility*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"organisationUnitId\"\r\n                                        id=\"organisationUnitId\"\r\n                                        value={objValues.organisationUnitId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {facilities.map((value) => (\r\n                                            <option key={value.id} value={value.organisationUnitId}>\r\n                                                {value.organisationUnitName}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n\r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                            <Button type=\"submit\" content='Generate Report' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit} \r\n                            disabled={objValues.organisationUnitId === \"\" || loading} \r\n                            />\r\n                            </div>\r\n                            </div>\r\n\r\n                            {loading && (\r\n                                <Message icon>\r\n                                                  <Message.Content>\r\n                                                        <ProgressComponent/>\r\n                                                  </Message.Content>\r\n                                                </Message>\r\n                            )}\r\n                        </div>\r\n                    </>\r\n\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default HIVSTReport","C:\\Users\\gamaliel.dashua\\IdeaProjects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\CustomReport.js",["223","224","225","226","227","228","229","230"],"import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport { FormGroup, Label, CardBody, Input } from \"reactstrap\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card } from \"@material-ui/core\";\r\nimport { token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { Button } from 'semantic-ui-react'\r\nimport { toast } from \"react-toastify\";\r\nimport FileSaver from \"file-saver\";\r\nimport { Message, TextArea, Dropdown } from 'semantic-ui-react'\r\nimport ScrollableDiv from \"../Shared/Scrollable\"\r\nimport ProgressComponent from \"./ProgressComponent\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error: {\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\nconst CustomReport = (props) => {\r\n    let currentDate = new Date().toISOString().split('T')[0]\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false)\r\n    const [listOfParams, setListOfParams] = useState([]);\r\n    const [facilities, setFacilities] = useState([]);\r\n    const [listOfReport, setListOfReport] = useState([]);\r\n    const [selectedReport, setSelectedReport] = useState(\"\")\r\n    const [customQuery, setCustomQuery] = useState(\"\")\r\n    const [customDataFields, setCustomDataFields] = useState({});\r\n    const [objValues, setObjValues] = useState({\r\n        query: \"\",\r\n        reportName: \"\",\r\n        organisationUnitId: \"\",\r\n        organisationUnitName: \"\",\r\n        currentDate: currentDate\r\n    })\r\n    const [formData, setFormData] = useState(objValues)\r\n\r\n    const loadFacilities = useCallback(async () => {\r\n        try{\r\n            const response = await axios.get(\r\n                `${baseUrl}account`,\r\n                {headers: { \"Authorization\": `Bearer ${token}` }}\r\n            );\r\n            setFacilities(response.data.applicationUserOrganisationUnits);\r\n        }catch(e){\r\n            console.log(e);\r\n        }\r\n    }, []);\r\n\r\n    const onData = (data) => {\r\n        setCustomDataFields(data);\r\n    }\r\n\r\n    const containsTemplateStrings = (obj) => {\r\n        return Object.values(obj).some((value) => {\r\n            return typeof value === 'string' && value.includes('{{');\r\n        });\r\n    };\r\n\r\n    const handleInputChange = e => {\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n    }\r\n\r\n\r\n    function extractPatterns(e) {\r\n        var arr = []\r\n        const pattern = /\\{\\{([^}]+)\\}\\}/g;\r\n        let match;\r\n        while ((match = pattern.exec(e)) !== null) {\r\n            const obj = {\r\n                [match[1]]: \"\"\r\n            }\r\n            arr.push(obj)\r\n\r\n        }\r\n        setListOfParams(arr)\r\n    }\r\n\r\n    const handleAnalyze = (e) => {\r\n        e.preventDefault();\r\n        const objValuesWithTemplateStrings = containsTemplateStrings(objValues?.query);\r\n        const text = extractPatterns(objValues?.query)\r\n    }\r\n\r\n    const handleCancel = (e) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    const handleDryRun = (e) => {\r\n        e.preventDefault();\r\n        var customQuery = objValues?.query;\r\n        customQuery = replaceValues(customQuery, customDataFields);\r\n        customQuery = customQuery.trim().concat(\" LIMIT 5\");\r\n        setCustomQuery(customQuery);\r\n        console.log(customQuery);\r\n\r\n        axios.post(\r\n            `${baseUrl}customized-reports/generate-report`,\r\n            {},\r\n            {\r\n              params: {\r\n                query: customQuery,\r\n                reportName: objValues.reportName,\r\n              },\r\n              headers: {\r\n                Authorization: `Bearer ${token}`,\r\n              },\r\n              responseType: 'blob',\r\n            }\r\n          )\r\n            .then((response) => {\r\n              console.log(\"Here ******\" + response.data);\r\n              setLoading(false);\r\n              const fileName = `${objValues.organisationUnitName} ${objValues.reportName} Report ${currentDate}`;\r\n              const responseData = response.data;\r\n              let blob = new Blob([responseData], { type: \"application/octet-stream\" });\r\n              FileSaver.saveAs(blob, `${fileName}.xlsx`);\r\n              toast.success(\"Custom Report generated successfully\");\r\n            })\r\n            .catch((error) => {\r\n              setLoading(false);\r\n              if (error.response && error.response.data) {\r\n                let errorMessage = error.response.data.apierror && error.response.data.apierror.message !== \"\" ? error.response.data.apierror.message : \"Something went wrong, please try again\";\r\n                toast.error(errorMessage);\r\n              } else {\r\n                toast.error(\"Something went wrong. Please try again...\");\r\n              }\r\n            });\r\n    }   \r\n\r\n    function replaceValues(query, customDataFields) {\r\n        return query.replace(/{{\\s*([^}]+)\\s*}}/g, (match, key) => {\r\n            const normalizedKey = key.trim().toLowerCase().replace(' ', '_');\r\n            return customDataFields[normalizedKey] !== undefined ? customDataFields[normalizedKey] : match;\r\n        });\r\n    }\r\n\r\n    const handleSaveCustomReport = (e) => {\r\n        e.preventDefault()\r\n        axios\r\n            .post(`${baseUrl}customized-reports`, objValues, { headers: { \"Authorization\": `Bearer ${token}` } })\r\n            .then(response => {\r\n                getCustomReports();\r\n                toast.success(\"Custom report successfully saved...\")\r\n                \r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            }\r\n\r\n            );\r\n    }\r\n\r\n    async function getCustomReports() {\r\n        axios\r\n            .get(`${baseUrl}customized-reports`, { headers: { \"Authorization\": `Bearer ${token}` } })\r\n            .then((response) => {\r\n                setListOfReport(\r\n                    Object.entries(response.data).map(([key, value]) => ({\r\n                        key: value.query,\r\n                        text: value.reportName,\r\n                        value: value.id,\r\n                    }))\r\n                );\r\n            })\r\n            .catch((error) => { });\r\n    }\r\n    \r\n    useEffect(() => {\r\n        getCustomReports();\r\n        loadFacilities();\r\n    }, []);\r\n\r\n    const handleChange = (e, data) => {\r\n        e.preventDefault();\r\n        setSelectedReport(data.value)\r\n        //api call here\r\n        axios\r\n            .get(`${baseUrl}customized-reports/${data.value}`, { headers: { \"Authorization\": `Bearer ${token}` } })\r\n            .then((response) => {\r\n\r\n                setObjValues(response.data)\r\n            })\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        var customQuery = objValues?.query;\r\n        customQuery = replaceValues(customQuery, customDataFields);\r\n        setCustomQuery(customQuery);\r\n        axios.post(\r\n          `${baseUrl}customized-reports/generate-report`,\r\n          {},\r\n          {\r\n            params: {\r\n              query: customQuery,\r\n              reportName: objValues.reportName,\r\n            },\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n            responseType: 'blob',\r\n          }\r\n        )\r\n          .then((response) => {\r\n            setLoading(false);\r\n            const fileName = `${objValues.organisationUnitName} ${objValues.reportName} Report ${currentDate}`;\r\n            const responseData = response.data;\r\n            let blob = new Blob([responseData], { type: \"application/octet-stream\" });\r\n            FileSaver.saveAs(blob, `${fileName}.xlsx`);\r\n            toast.success(\"Custom Report generated successfully\");\r\n          })\r\n          .catch((error) => {\r\n            setLoading(false);\r\n            if (error.response && error.response.data) {\r\n              let errorMessage = error.response.data.apierror && error.response.data.apierror.message !== \"\" ? error.response.data.apierror.message : \"Something went wrong, please try again\";\r\n              toast.error(errorMessage);\r\n            } else {\r\n              toast.error(\"Something went wrong. Please try again...\");\r\n            }\r\n          });\r\n      };\r\n      \r\n    \r\n    return (\r\n        <>\r\n\r\n            <Card >\r\n                <CardBody>\r\n\r\n                    <h2 style={{ color: '#000' }}>CUSTOM REPORT</h2>\r\n                    <br />\r\n                    <FormGroup>\r\n                        <Label style={{ color: '#014d88', fontWeight: 'bolder' }}>List of Reports <span style={{ cursor: \"pointer\", color: \"blue\" }}\r\n                        >\r\n                        </span></Label>\r\n                        <Dropdown\r\n                            placeholder='Select Report'\r\n                            fluid\r\n                            search\r\n                            selection\r\n                            name=\"reports\"\r\n                            id=\"reports\"\r\n                            value={selectedReport}\r\n                            onChange={handleChange}\r\n                            options={listOfReport}\r\n                        />\r\n                    </FormGroup>\r\n                    < >\r\n                        <div className=\"row\">\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>Query Name*</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        name=\"reportName\"\r\n                                        id=\"reportName\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues?.reportName}\r\n                                        style={{ border: \"1px solid #014D88\", borderRadius: \"0.2rem\" }}\r\n                                    />\r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"form-group  col-md-6\">\r\n                                    <FormGroup>\r\n                                        <Label>Custom Query*</Label>\r\n                                        <TextArea\r\n                                            id=\"query\"\r\n                                            name=\"query\"\r\n                                            multiline=\"multiline\"\r\n                                            rows={20}\r\n                                            onChange={handleInputChange}\r\n                                            style={{ border: \"1px solid #014D88\", borderRadius: \"0.2rem\", width: \"100%\" }}\r\n                                            value={objValues?.query}\r\n                                            className=\"w-100\"\r\n                                            width={100}\r\n\r\n                                        />\r\n                                    </FormGroup>\r\n                                </div>\r\n\r\n                                <div className=\"form-group  col-md-6\">\r\n                                    <FormGroup>\r\n                                        <Label>Query Parameters *</Label>\r\n                                        <ScrollableDiv listOfParams={listOfParams} objValues={objValues} facilityData={facilities} onData={onData}\r\n\r\n                                        />\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <br />\r\n                                <div className=\"row\">\r\n                                    <div className=\"mb-3 col-md-2\">\r\n                                        <Button type=\"submit\" content='Analyze' icon='up arrow' labelPosition='right' style={{ backgroundColor: \"#014d88\", color: '#fff' }} onClick={handleAnalyze} />\r\n                                    </div>\r\n                                    <div className=\"mb-3 col-md-2\">\r\n                                        <Button type=\"submit\" content='Dry Run' icon='up down' labelPosition='right' style={{ backgroundColor: \"black\", color: '#fff' }} onClick={handleDryRun} />\r\n                                    </div>\r\n                                    <div className=\"mb-3 col-md-3\">\r\n                                        <Button type=\"submit\" content='Save Query' icon='up arrow' labelPosition='right' style={{ backgroundColor: \"blue\", color: '#fff' }} onClick={handleSaveCustomReport} />\r\n                                    </div>\r\n\r\n                                    <div className=\"mb-3 col-md-2\" >\r\n                                        <Button type=\"submit\" content='Generate' icon='right arrow' labelPosition='right' style={{ backgroundColor: \"#008000\", color: '#fff' }} onClick={handleSubmit} />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {loading && (\r\n                                    <Message icon>\r\n                                                      <Message.Content>\r\n                                                            <ProgressComponent/>\r\n                                                      </Message.Content>\r\n                                                    </Message>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CustomReport","C:\\Users\\gamaliel.dashua\\IdeaProjects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\PMTCTMonthlySummaryReport.js",["231","232","233","234","235"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {FormGroup, Label , CardBody, Input} from \"reactstrap\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card} from \"@material-ui/core\";\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { Button} from 'semantic-ui-react'\r\nimport { toast} from \"react-toastify\";\r\nimport FileSaver from \"file-saver\";\r\nimport { Message } from 'semantic-ui-react'\r\nimport ProgressComponent from \"./ProgressComponent\"\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst PMTCTMonthlySummaryReport = (props) => {\r\n  let currentDate = new Date().toISOString().split('T')[0]\r\n  const classes = useStyles();\r\n  const [loading, setLoading] = useState(false)\r\n  const [facilities, setFacilities] = useState([]);\r\n\r\n\r\n  const[months, setMonths]=useState(['January','Febuary','March','April','May','June','July','August','September','October','November','December'])\r\n  const [status, setStatus] = useState(true);\r\n  const [objValues, setObjValues]=useState({ \r\n      month: \"\"\r\n  })\r\n  useEffect(() => {\r\n      Facilities()\r\n    }, []);\r\n  const Facilities =()=>{\r\n  axios\r\n      .get(`${baseUrl}account`,\r\n          { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n      )\r\n      .then((response) => {\r\n          console.log(response.data);\r\n          setFacilities(response.data.applicationUserOrganisationUnits);\r\n      })\r\n      .catch((error) => {\r\n      });\r\n  }\r\n\r\n  const handleInputChange = (e) => {\r\n    const selectedOption = e.target.options[e.target.selectedIndex];\r\n    const selectedValue = e.target.value;\r\n    objValues.organisationUnitName = selectedOption.innerText;\r\n    setObjValues(prevValues => ({\r\n      ...prevValues,\r\n      [e.target.name]: selectedValue,\r\n    }));\r\n};\r\n\r\n  const handleValueChange = () => {\r\n      setStatus(!status)\r\n\r\n      if (status === true) {\r\n        setObjValues ({...objValues,  startDate: \"1980-01-01\", endDate: currentDate});\r\n      } else {\r\n        setObjValues ({...objValues,  startDate: \"\", endDate: currentDate});\r\n      }\r\n\r\n  }\r\n  \r\n    const handleSubmit = (e) => {      \r\n        e.preventDefault();\r\n        setLoading(true)\r\n        axios.get(`${baseUrl}reporting/biometric?facilityId=${objValues.organisationUnitId}&startDate=${objValues.startDate}&endDate=${objValues.endDate}`,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}, responseType: 'blob'},\r\n          \r\n          )\r\n              .then(response => {\r\n                setLoading(false)\r\n                const fileName = `${objValues.organisationUnitName} Biometric-Report ${currentDate}`\r\n                const responseData = response.data\r\n                let blob = new Blob([responseData], {type: \"application/octet-stream\"});\r\n                FileSaver.saveAs(blob, `${fileName}.xlsx`);\r\n                toast.success(\" Report generated successful\");\r\n              })\r\n              .catch(error => {\r\n                setLoading(false)\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n              });\r\n    }\r\n    \r\n    return (\r\n      <>\r\n        <Card>\r\n          <CardBody>\r\n            <h2 style={{ color: \"#000\" }}>PMTCT MONTHLY SUMMARY REPORT</h2>\r\n            <br />\r\n            < >\r\n                        <div className=\"row\">\r\n       \r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>Select Month*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"month\"\r\n                                        id=\"month\"\r\n                                        value={objValues.organisationUnitId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {months.map((value) => (\r\n                                            <option key={value} value={value}>\r\n                                                {value}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n\r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                <br />\r\n                <div className=\"row\">\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <Button\r\n                      type=\"submit\"\r\n                      content=\"Generate Report\"\r\n                      icon=\"right arrow\"\r\n                      labelPosition=\"right\"\r\n                      style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n                      onClick={handleSubmit}\r\n                      disabled={objValues.organisationUnitId === \"\" || loading} \r\n                      // }\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                {loading && (\r\n                  <Message icon>\r\n                                    <Message.Content>\r\n                                          <ProgressComponent/>\r\n                                    </Message.Content>\r\n                                  </Message>\r\n\r\n                )}\r\n              </div>\r\n            </>\r\n          </CardBody>\r\n        </Card>\r\n      </>\r\n    );\r\n};\r\n\r\nexport default PMTCTMonthlySummaryReport","C:\\Users\\gamaliel.dashua\\IdeaProjects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\PrEPMSF.js",["236"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {FormGroup, Label , CardBody,Input} from \"reactstrap\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card} from \"@material-ui/core\";\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { Button} from 'semantic-ui-react'\r\nimport { toast} from \"react-toastify\";\r\nimport FileSaver from \"file-saver\";\r\nimport { Message } from 'semantic-ui-react'\r\nimport ProgressComponent from \"./ProgressComponent\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\nconst PrEPMSF = (props) => {\r\n    let currentDate = new Date().toISOString().split('T')[0]\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false)\r\n    const [facilities, setFacilities] = useState([]);\r\n    const [status, setStatus] = useState(true);\r\n    const [objValues, setObjValues]=useState({\r\n        organisationUnitId:\"\",\r\n        organisationUnitName:\"\",\r\n        startDate:\"\",\r\n        endDate: \"\",\r\n        status: \"\"\r\n    })\r\n    useEffect(() => {\r\n        Facilities()\r\n      }, []);\r\n    const Facilities =()=>{\r\n    axios\r\n        .get(`${baseUrl}account`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n        console.log(response.data);\r\n            setFacilities(response.data.applicationUserOrganisationUnits);\r\n        })\r\n        .catch((error) => {\r\n        });\r\n\r\n    }\r\n    const handleInputChange = (e) => {\r\n        const selectedOption = e.target.options ? e.target.options[e.target.selectedIndex] : null;\r\n        const selectedValue = e.target.value;\r\n        const name = e.target.name;\r\n      \r\n        setObjValues(prevValues => ({\r\n            ...prevValues,\r\n            [name]: selectedValue,\r\n            organisationUnitName: name === \"organisationUnitId\" && selectedOption ? selectedOption.innerText : prevValues.organisationUnitName,\r\n        }));\r\n      };\r\n\r\n    const handleValueChange = () => {\r\n        setStatus(!status)\r\n        if (status === true) {\r\n          setObjValues ({...objValues,  status: \"true\"});\r\n        } else {\r\n          setObjValues ({...objValues,  status: \"false\"});\r\n        }\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true)\r\n        console.log(token);\r\n\r\n        axios.post(`${baseUrl}prep-msf?facilityId=${objValues.organisationUnitId}&startDate=${objValues.startDate}&endDate=${objValues.endDate}&status=${objValues.status}`,objValues.organisationUnitId,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}, responseType: 'blob'},\r\n        )\r\n          .then(response => {\r\n            setLoading(false)\r\n            const fileName = `${objValues.organisationUnitName} PrEP MSF ${currentDate}`\r\n            const responseData = response.data\r\n            let blob = new Blob([responseData], {type: \"application/octet-stream\"});\r\n            if(status === false) {\r\n                FileSaver.saveAs(blob, `${fileName}.xlsx`);\r\n            } else\r\n            {\r\n                FileSaver.saveAs(blob, `${fileName}.pdf`);\r\n             }\r\n            toast.success(\"PrEP MSF Report generated successfully\");\r\n          })\r\n          .catch(error => {\r\n            setLoading(false)\r\n            if(error.response && error.response.data){\r\n                let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                toast.error(errorMessage);\r\n              }\r\n              else{\r\n                toast.error(\"Something went wrong. Please try again...\");\r\n              }\r\n          });\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <Card >\r\n                <CardBody>\r\n\r\n                <h2 style={{color:'#000'}}>PrEP Monthly Summary Form REPORT</h2>\r\n                <br/>\r\n                    < >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>Start date of the month *</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"startDate\"\r\n                                        id=\"startDate\"\r\n                                        min={\"1980-01-01\"}\r\n                                        max={currentDate}\r\n                                        value={objValues.startDate}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>Stop date of the month *</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"endDate\"\r\n                                        id=\"endDate\"\r\n                                        min={\"1980-01-01\"}\r\n                                        max={currentDate}\r\n                                        value={objValues.endDate}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                 <FormGroup check>\r\n                                  <Label check>\r\n                                    <Input type=\"checkbox\" onChange={handleValueChange}/>\r\n                                     {' '} &nbsp;&nbsp;<span> Generate as Excel.</span>\r\n                                  </Label>\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>Facility*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"organisationUnitId\"\r\n                                        id=\"organisationUnitId\"\r\n                                        value={objValues.organisationUnitId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {facilities.map((value) => (\r\n                                            <option key={value.id} value={value.organisationUnitId}>\r\n                                                {value.organisationUnitName}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n\r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                            <Button type=\"submit\" content='Generate Report' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit} \r\n                            disabled={objValues.organisationUnitId === \"\" || loading} \r\n                            />\r\n                            </div>\r\n                            </div>\r\n\r\n                            {loading && (\r\n                                <Message icon>\r\n                                                  <Message.Content>\r\n                                                        <ProgressComponent/>\r\n                                                  </Message.Content>\r\n                                                </Message>\r\n                            )}\r\n                        </div>\r\n                    </>\r\n\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PrEPMSF","C:\\Users\\gamaliel.dashua\\IdeaProjects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Reports\\ProgressComponent.js",[],"C:\\Users\\gamaliel.dashua\\IdeaProjects\\Report-Module\\src\\main\\webapp\\api.js",[],"C:\\Users\\gamaliel.dashua\\IdeaProjects\\Report-Module\\src\\main\\webapp\\jsx\\components\\Shared\\Scrollable.js",["237","238"],"import React, {useState} from 'react';\r\nimport {Label, Input} from \"reactstrap\";\r\n// import { Input } from '@material-ui/core';\r\n\r\nconst ScrollableDiv = (props) => {\r\n  const items = Array.from({ length: 50 }, (_, index) => `Item ${index + 1}`);\r\n  const [parameterFormFields, setParameterFormFields] = useState({});\r\n\r\n  props.onData(parameterFormFields);\r\n  const handleChange =(e) => {\r\n    const {name, value} = e.target;\r\n    setParameterFormFields({\r\n      ...parameterFormFields,\r\n      [name]: value,\r\n    });\r\n    props.onData(parameterFormFields);\r\n  };\r\n\r\n  const handleParameterSubmission =(e) => {\r\n    e.preventDefault();\r\n    props.onData(parameterFormFields);\r\n  };\r\n\r\n  function extractPatterns(e) {\r\n    const pattern = /\\{\\{([^}]+)\\}\\}/g;\r\n    let match;\r\n    while ((match = pattern.exec(e)) !== null) {\r\n      console.log(match[1]);\r\n    }\r\n  }\r\n\r\n  function formatComponentName(value){\r\n    return value.toLowerCase().replace(\" \", \"_\");\r\n  }\r\n\r\n  const containerStyle = {\r\n    width: 'auto',\r\n    margin: '0 auto'\r\n  };\r\n\r\n  const scrollableDivStyle = {\r\n    height: '325px',\r\n    overflowY: 'auto',\r\n    border: '1px solid #ccc',\r\n    padding: '10px',\r\n    boxSizing: 'border-box'\r\n  };\r\n\r\n  const itemStyle = {\r\n    padding: '2px',\r\n    // borderBottom: '1px solid #ddd'\r\n  };\r\n\r\n  return (\r\n    <div style={containerStyle}>\r\n      <div style={scrollableDivStyle}>\r\n        {props.listOfParams?.map((match, index) => (\r\n          <div key={index} style={{...itemStyle}}>\r\n            <form id=\"parameterForm\" onSubmit={handleParameterSubmission}>\r\n              <div class=\"row col-md-12\">\r\n                <div class=\"mb-2 col-md-4\">\r\n                  <Label>{Object.keys(match)[0]}</Label>\r\n                </div>\r\n                <div class=\"mb-2 col-md-8\">\r\n                {Object.keys(match)[0].includes(\"Facility\") ?\r\n                  <select\r\n                      className=\"form-control\"\r\n                      name={formatComponentName(Object.keys(match)[0])}\r\n                      id={formatComponentName(Object.keys(match)[0])}\r\n                      value={parameterFormFields[formatComponentName(Object.keys(match)[0])]}\r\n                      style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                      onChange={handleChange}>\r\n                        <option value={\"0\"}>Select a Facility</option>\r\n                          {props.facilityData.map((value) => (\r\n                              <option key={value.id} value={value.organisationUnitId}>\r\n                                  {value.organisationUnitName}\r\n                              </option>\r\n                          ))}\r\n                  </select> \r\n                  : (Object.keys(match)[0].includes(\"Date\") ?\r\n                  <Input\r\n                    type=\"date\"\r\n                    className=\"form-control\"\r\n                    name={formatComponentName(Object.keys(match)[0])}\r\n                    id={formatComponentName(Object.keys(match)[0])}\r\n                    min={\"1980-01-01\"}\r\n                    max={props.objValues?.currentDate}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                    value={parameterFormFields[formatComponentName(Object.keys(match)[0])]}\r\n                    onChange={handleChange}\r\n                  /> :\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name={formatComponentName(Object.keys(match)[0])}\r\n                    id={formatComponentName(Object.keys(match)[0])}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                    value={parameterFormFields[formatComponentName(Object.keys(match)[0])]}\r\n                    onChange={handleChange}\r\n                  />\r\n                )}\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ScrollableDiv;\r\n",{"ruleId":"239","severity":1,"message":"240","line":4,"column":41,"nodeType":"241","messageId":"242","endLine":4,"endColumn":47},{"ruleId":"239","severity":1,"message":"243","line":4,"column":25,"nodeType":"241","messageId":"242","endLine":4,"endColumn":35},{"ruleId":"239","severity":1,"message":"244","line":5,"column":9,"nodeType":"241","messageId":"242","endLine":5,"endColumn":13},{"ruleId":"239","severity":1,"message":"245","line":48,"column":11,"nodeType":"241","messageId":"242","endLine":48,"endColumn":18},{"ruleId":"239","severity":1,"message":"246","line":49,"column":12,"nodeType":"241","messageId":"242","endLine":49,"endColumn":19},{"ruleId":"239","severity":1,"message":"247","line":49,"column":21,"nodeType":"241","messageId":"242","endLine":49,"endColumn":31},{"ruleId":"239","severity":1,"message":"248","line":4,"column":26,"nodeType":"241","messageId":"242","endLine":4,"endColumn":31},{"ruleId":"239","severity":1,"message":"245","line":56,"column":9,"nodeType":"241","messageId":"242","endLine":56,"endColumn":16},{"ruleId":"239","severity":1,"message":"249","line":93,"column":9,"nodeType":"241","messageId":"242","endLine":93,"endColumn":27},{"ruleId":"239","severity":1,"message":"245","line":58,"column":11,"nodeType":"241","messageId":"242","endLine":58,"endColumn":18},{"ruleId":"239","severity":1,"message":"245","line":58,"column":11,"nodeType":"241","messageId":"242","endLine":58,"endColumn":18},{"ruleId":"239","severity":1,"message":"245","line":58,"column":9,"nodeType":"241","messageId":"242","endLine":58,"endColumn":16},{"ruleId":"239","severity":1,"message":"245","line":56,"column":9,"nodeType":"241","messageId":"242","endLine":56,"endColumn":16},{"ruleId":"239","severity":1,"message":"245","line":58,"column":11,"nodeType":"241","messageId":"242","endLine":58,"endColumn":18},{"ruleId":"239","severity":1,"message":"245","line":95,"column":11,"nodeType":"241","messageId":"242","endLine":95,"endColumn":18},{"ruleId":"239","severity":1,"message":"250","line":14,"column":7,"nodeType":"241","messageId":"242","endLine":14,"endColumn":17},{"ruleId":"239","severity":1,"message":"245","line":58,"column":9,"nodeType":"241","messageId":"242","endLine":58,"endColumn":16},{"ruleId":"239","severity":1,"message":"245","line":56,"column":11,"nodeType":"241","messageId":"242","endLine":56,"endColumn":18},{"ruleId":"239","severity":1,"message":"245","line":56,"column":11,"nodeType":"241","messageId":"242","endLine":56,"endColumn":18},{"ruleId":"239","severity":1,"message":"245","line":56,"column":11,"nodeType":"241","messageId":"242","endLine":56,"endColumn":18},{"ruleId":"239","severity":1,"message":"251","line":11,"column":19,"nodeType":"241","messageId":"242","endLine":11,"endColumn":23},{"ruleId":"239","severity":1,"message":"245","line":56,"column":11,"nodeType":"241","messageId":"242","endLine":56,"endColumn":18},{"ruleId":"239","severity":1,"message":"245","line":56,"column":9,"nodeType":"241","messageId":"242","endLine":56,"endColumn":16},{"ruleId":"239","severity":1,"message":"252","line":94,"column":9,"nodeType":"241","messageId":"242","endLine":94,"endColumn":26},{"ruleId":"239","severity":1,"message":"245","line":56,"column":11,"nodeType":"241","messageId":"242","endLine":56,"endColumn":18},{"ruleId":"239","severity":1,"message":"245","line":56,"column":9,"nodeType":"241","messageId":"242","endLine":56,"endColumn":16},{"ruleId":"239","severity":1,"message":"245","line":56,"column":11,"nodeType":"241","messageId":"242","endLine":56,"endColumn":18},{"ruleId":"239","severity":1,"message":"245","line":56,"column":11,"nodeType":"241","messageId":"242","endLine":56,"endColumn":18},{"ruleId":"239","severity":1,"message":"245","line":56,"column":11,"nodeType":"241","messageId":"242","endLine":56,"endColumn":18},{"ruleId":"239","severity":1,"message":"245","line":56,"column":11,"nodeType":"241","messageId":"242","endLine":56,"endColumn":18},{"ruleId":"239","severity":1,"message":"245","line":56,"column":11,"nodeType":"241","messageId":"242","endLine":56,"endColumn":18},{"ruleId":"239","severity":1,"message":"245","line":56,"column":11,"nodeType":"241","messageId":"242","endLine":56,"endColumn":18},{"ruleId":"239","severity":1,"message":"245","line":56,"column":11,"nodeType":"241","messageId":"242","endLine":56,"endColumn":18},{"ruleId":"239","severity":1,"message":"253","line":3,"column":38,"nodeType":"241","messageId":"242","endLine":3,"endColumn":43},{"ruleId":"239","severity":1,"message":"245","line":56,"column":11,"nodeType":"241","messageId":"242","endLine":56,"endColumn":18},{"ruleId":"239","severity":1,"message":"252","line":94,"column":11,"nodeType":"241","messageId":"242","endLine":94,"endColumn":28},{"ruleId":"239","severity":1,"message":"245","line":56,"column":11,"nodeType":"241","messageId":"242","endLine":56,"endColumn":18},{"ruleId":"239","severity":1,"message":"245","line":56,"column":11,"nodeType":"241","messageId":"242","endLine":56,"endColumn":18},{"ruleId":"239","severity":1,"message":"245","line":57,"column":11,"nodeType":"241","messageId":"242","endLine":57,"endColumn":18},{"ruleId":"239","severity":1,"message":"254","line":63,"column":12,"nodeType":"241","messageId":"242","endLine":63,"endColumn":23},{"ruleId":"239","severity":1,"message":"255","line":72,"column":12,"nodeType":"241","messageId":"242","endLine":72,"endColumn":20},{"ruleId":"239","severity":1,"message":"256","line":72,"column":22,"nodeType":"241","messageId":"242","endLine":72,"endColumn":33},{"ruleId":"239","severity":1,"message":"257","line":117,"column":15,"nodeType":"241","messageId":"242","endLine":117,"endColumn":43},{"ruleId":"239","severity":1,"message":"258","line":118,"column":15,"nodeType":"241","messageId":"242","endLine":118,"endColumn":19},{"ruleId":"239","severity":1,"message":"259","line":121,"column":11,"nodeType":"241","messageId":"242","endLine":121,"endColumn":23},{"ruleId":"260","severity":1,"message":"261","line":208,"column":8,"nodeType":"262","endLine":208,"endColumn":10,"suggestions":"263"},{"ruleId":"239","severity":1,"message":"253","line":3,"column":38,"nodeType":"241","messageId":"242","endLine":3,"endColumn":43},{"ruleId":"239","severity":1,"message":"245","line":58,"column":9,"nodeType":"241","messageId":"242","endLine":58,"endColumn":16},{"ruleId":"239","severity":1,"message":"264","line":60,"column":10,"nodeType":"241","messageId":"242","endLine":60,"endColumn":20},{"ruleId":"239","severity":1,"message":"265","line":63,"column":17,"nodeType":"241","messageId":"242","endLine":63,"endColumn":26},{"ruleId":"239","severity":1,"message":"252","line":94,"column":9,"nodeType":"241","messageId":"242","endLine":94,"endColumn":26},{"ruleId":"239","severity":1,"message":"245","line":56,"column":11,"nodeType":"241","messageId":"242","endLine":56,"endColumn":18},{"ruleId":"239","severity":1,"message":"266","line":6,"column":9,"nodeType":"241","messageId":"242","endLine":6,"endColumn":14},{"ruleId":"239","severity":1,"message":"267","line":24,"column":12,"nodeType":"241","messageId":"242","endLine":24,"endColumn":27},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Breadcrumb' is defined but never used.","'Form' is defined but never used.","'classes' is assigned a value but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'toast' is defined but never used.","'monthSummaryReport' is assigned a value but never used.","'SOCKET_URL' is assigned a value but never used.","'Icon' is defined but never used.","'handleValueChange' is assigned a value but never used.","'Input' is defined but never used.","'customQuery' is assigned a value but never used.","'formData' is assigned a value but never used.","'setFormData' is assigned a value but never used.","'objValuesWithTemplateStrings' is assigned a value but never used.","'text' is assigned a value but never used.","'handleCancel' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadFacilities'. Either include it or remove the dependency array.","ArrayExpression",["268"],"'facilities' is assigned a value but never used.","'setMonths' is assigned a value but never used.","'items' is assigned a value but never used.","'extractPatterns' is defined but never used.",{"desc":"269","fix":"270"},"Update the dependencies array to be: [loadFacilities]",{"range":"271","text":"272"},[6888,6890],"[loadFacilities]"]