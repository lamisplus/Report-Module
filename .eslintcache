[{"C:\\Users\\USER\\Documents\\LamisPlus\\report-module\\src\\index.js":"1","C:\\Users\\USER\\Documents\\LamisPlus\\report-module\\src\\App.js":"2","C:\\Users\\USER\\Documents\\LamisPlus\\report-module\\src\\main\\webapp\\reportWebVitals.js":"3","C:\\Users\\USER\\Documents\\LamisPlus\\report-module\\src\\main\\webapp\\context\\ThemeContext.js":"4","C:\\Users\\USER\\Documents\\LamisPlus\\report-module\\src\\main\\webapp\\jsx\\components\\Home.js":"5","C:\\Users\\USER\\Documents\\LamisPlus\\report-module\\src\\main\\webapp\\context\\ThemeDemo.js":"6","C:\\Users\\USER\\Documents\\LamisPlus\\report-module\\src\\main\\webapp\\jsx\\components\\Reports\\Index.js":"7","C:\\Users\\USER\\Documents\\LamisPlus\\report-module\\src\\main\\webapp\\jsx\\components\\Visualisation\\Index.js":"8","C:\\Users\\USER\\Documents\\LamisPlus\\report-module\\src\\main\\webapp\\jsx\\components\\Reports\\Radet.js":"9","C:\\Users\\USER\\Documents\\LamisPlus\\report-module\\src\\main\\webapp\\jsx\\components\\Reports\\PatientLineList.js":"10","C:\\Users\\USER\\Documents\\LamisPlus\\report-module\\src\\main\\webapp\\jsx\\components\\Reports\\Appointment.js":"11","C:\\Users\\USER\\Documents\\LamisPlus\\report-module\\src\\main\\webapp\\api.js":"12","C:\\Users\\USER\\Documents\\LamisPlus\\report-module\\src\\main\\webapp\\jsx\\components\\Reports\\PharmacyReport.js":"13","C:\\Users\\USER\\Documents\\LamisPlus\\report-module\\src\\main\\webapp\\jsx\\components\\Reports\\BiometricReport.js":"14"},{"size":753,"mtime":1660901133237,"results":"15","hashOfConfig":"16"},{"size":847,"mtime":1660901133236,"results":"17","hashOfConfig":"16"},{"size":375,"mtime":1660900951867,"results":"18","hashOfConfig":"16"},{"size":9235,"mtime":1660900946912,"results":"19","hashOfConfig":"16"},{"size":1540,"mtime":1660901138032,"results":"20","hashOfConfig":"16"},{"size":3056,"mtime":1660900946913,"results":"21","hashOfConfig":"16"},{"size":8276,"mtime":1664768871892,"results":"22","hashOfConfig":"16"},{"size":6329,"mtime":1660901138133,"results":"23","hashOfConfig":"16"},{"size":8320,"mtime":1664768450901,"results":"24","hashOfConfig":"16"},{"size":6482,"mtime":1668503105474,"results":"25","hashOfConfig":"16"},{"size":16796,"mtime":1661357005583,"results":"26","hashOfConfig":"16"},{"size":424,"mtime":1668502943205,"results":"27","hashOfConfig":"16"},{"size":6441,"mtime":1667190882295,"results":"28","hashOfConfig":"16"},{"size":8390,"mtime":1664768481463,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},"1ccx19s",{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"33"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"33"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"33"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"33"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"33"},"C:\\Users\\USER\\Documents\\LamisPlus\\report-module\\src\\index.js",["65"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter, MemoryRouter as Router,} from 'react-router-dom';\r\n\r\nimport reportWebVitals from \"./../src/main/webapp/reportWebVitals\";\r\nimport SimpleReactLightbox from \"simple-react-lightbox\";\r\nimport  ThemeContext  from \"./../src/main/webapp/context/ThemeContext\"; \r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\r\n            <SimpleReactLightbox>\r\n                <BrowserRouter basename='/'>\r\n                    <ThemeContext>\r\n                        <App />\r\n                    </ThemeContext>  \r\n                </BrowserRouter>\r\n            </SimpleReactLightbox>\r\n\r\n\t</React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\nreportWebVitals();\r\n",["66","67"],"C:\\Users\\USER\\Documents\\LamisPlus\\report-module\\src\\App.js",[],"C:\\Users\\USER\\Documents\\LamisPlus\\report-module\\src\\main\\webapp\\reportWebVitals.js",[],"C:\\Users\\USER\\Documents\\LamisPlus\\report-module\\src\\main\\webapp\\context\\ThemeContext.js",[],"C:\\Users\\USER\\Documents\\LamisPlus\\report-module\\src\\main\\webapp\\jsx\\components\\Home.js",[],"C:\\Users\\USER\\Documents\\LamisPlus\\report-module\\src\\main\\webapp\\context\\ThemeDemo.js",[],"C:\\Users\\USER\\Documents\\LamisPlus\\report-module\\src\\main\\webapp\\jsx\\components\\Reports\\Index.js",["68","69","70","71","72"],"import React, { useState} from \"react\";\r\nimport {Card, CardBody} from \"reactstrap\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { Icon, Menu } from 'semantic-ui-react'\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport PatientLineList from './PatientLineList';\r\nimport Appointment from './Appointment'\r\nimport Radet from './Radet'\r\nimport BiometricReport from './BiometricReport'\r\nimport PharmacyReport from './PharmacyReport'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    },  \r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}));\r\n\r\n\r\nconst Reports = (props) => {\r\n    const classes = useStyles();\r\n    const [saving, setSaving] = useState(false);\r\n    const [activeItem, setactiveItem] = useState('basic');\r\n    const [completed, setCompleted] = useState([]);\r\n    const handleItemClick =(activeItem)=>{\r\n        setactiveItem(activeItem)\r\n        //setCompleted({...completed, ...completedMenu})\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <ToastContainer autoClose={3000} hideProgressBar />\r\n            <Card >\r\n                <CardBody>\r\n                    <div className=\"row\">\r\n                    <form >\r\n                        <br/>\r\n                        <br/>\r\n                        <div className=\"col-md-3 float-start\">\r\n                        <Menu  size='small'  vertical  style={{backgroundColor:\"#014D88\"}}>\r\n                            <Menu.Item\r\n                                name='inbox'\r\n                                active={activeItem === 'radet'}\r\n                                onClick={()=>handleItemClick('radet')}\r\n                                style={{backgroundColor:activeItem === 'radet' ? '#000': \"\"}}\r\n                            >               \r\n                                <span style={{color:'#fff'}}> RADET REPORT</span>\r\n                                \r\n                            </Menu.Item>\r\n                            \r\n                            <Menu.Item\r\n                                name='spam'\r\n                                active={activeItem === 'appointment'}\r\n                                onClick={()=>handleItemClick('appointment')}\r\n                                style={{backgroundColor:activeItem === 'appointment' ? '#000': \"\"}}\r\n                            >\r\n                            {/* <Label>4</Label> */}\r\n                            <span style={{color:'#fff'}}>APPOINTMENT REPORT</span>\r\n                            \r\n                            </Menu.Item>\r\n                            <Menu.Item\r\n                                name='spam'\r\n                                active={activeItem === 'line-list'}\r\n                                onClick={()=>handleItemClick('line-list')}\r\n                                style={{backgroundColor:activeItem === 'line-list' ? '#000': \"\"}}\r\n                            >\r\n                            {/* <Label>4</Label> */}\r\n                            <span style={{color:'#fff'}}>PATIENT LINE LIST</span>\r\n                           \r\n                            </Menu.Item>\r\n                            <Menu.Item\r\n                                name='inbox'\r\n                                active={activeItem === 'pharmacy-report'}\r\n                                onClick={()=>handleItemClick('pharmacy-report')}\r\n                                style={{backgroundColor:activeItem === 'pharmacy-report' ? '#000': \"\"}}\r\n                            >               \r\n                                <span style={{color:'#fff'}}>PHARMACY REPORT</span>\r\n                                \r\n                            {/* <Label color='teal'>5</Label> */}\r\n                            </Menu.Item>\r\n                            <Menu.Item\r\n                                name='inbox'\r\n                                active={activeItem === 'biometric'}\r\n                                onClick={()=>handleItemClick('biometric')}\r\n                                style={{backgroundColor:activeItem === 'biometric' ? '#000': \"\"}}\r\n                            >               \r\n                                <span style={{color:'#fff'}}>BIOMETRIC REPORT</span>\r\n                                \r\n                            {/* <Label color='teal'>5</Label> */}\r\n                            </Menu.Item>\r\n                            <Menu.Item\r\n                                name='spam'\r\n                                active={activeItem === 'devolve'}\r\n                                onClick={()=>handleItemClick('devolve')}\r\n                                style={{backgroundColor:activeItem === 'devolve' ? '#000': \"\"}}\r\n                            >\r\n                            {/* <Label>4</Label> */}\r\n                            <span style={{color:'#fff'}}>DEVOLVE REPORT</span>\r\n                           \r\n                            </Menu.Item>\r\n                            <Menu.Item\r\n                                name='spam'\r\n                                active={activeItem === 'prep'}\r\n                                onClick={()=>handleItemClick('prep')}\r\n                                style={{backgroundColor:activeItem === 'prep' ? '#000': \"\"}}\r\n                            >\r\n                            {/* <Label>2</Label> */}\r\n                            <span style={{color:'#fff'}}>PREP REPORT</span>\r\n                            \r\n                            </Menu.Item>\r\n                            <Menu.Item\r\n                                name='inbox'\r\n                                active={activeItem === 'ict'}\r\n                                onClick={()=>handleItemClick('ict')}\r\n                                style={{backgroundColor:activeItem === 'ict' ? '#000': \"\"}}\r\n                            >               \r\n                                <span style={{color:'#fff'}}>ICT TRACKING</span>\r\n                               \r\n                            {/* <Label color='teal'>5</Label> */}\r\n                            </Menu.Item>\r\n                            <Menu.Item\r\n                                name='inbox'\r\n                                active={activeItem === 'art'}\r\n                                onClick={()=>handleItemClick('art')}\r\n                                style={{backgroundColor:activeItem === 'art' ? '#000': \"\"}}\r\n                            >               \r\n                                <span style={{color:'#fff'}}>ART SUMMARY REPORT</span>\r\n                               \r\n                                {/* <Label color='teal'>3</Label> */}\r\n                            </Menu.Item>\r\n                        </Menu>\r\n                        </div>\r\n                        <div className=\"col-md-9 float-end\" style={{ backgroundColor:\"#fff\"}}>\r\n                        {activeItem==='line-list' && (<PatientLineList handleItemClick={handleItemClick} setCompleted={setCompleted} completed={completed}/>)}     \r\n                        {activeItem==='appointment' && (<Appointment handleItemClick={handleItemClick} setCompleted={setCompleted} completed={completed}/>)}\r\n                        {activeItem==='radet' && (<Radet handleItemClick={handleItemClick} setCompleted={setCompleted} completed={completed}/>)}     \r\n                        {activeItem==='biometric' && (<BiometricReport handleItemClick={handleItemClick} setCompleted={setCompleted} completed={completed}/>)}\r\n                        {activeItem==='pharmacy-report' && (<PharmacyReport  handleItemClick={handleItemClick} setCompleted={setCompleted} completed={completed}/>)}\r\n                        {/* {activeItem==='others' && (<Others handleItemClick={handleItemClick} setCompleted={setCompleted} completed={completed}/>)} */}\r\n                            \r\n                        </div>\r\n                        </form>                                   \r\n                    </div>\r\n            </CardBody>\r\n            </Card>                                 \r\n        </>\r\n    );\r\n};\r\n\r\nexport default Reports","C:\\Users\\USER\\Documents\\LamisPlus\\report-module\\src\\main\\webapp\\jsx\\components\\Visualisation\\Index.js",["73","74","75","76","77"],"import React, { useState } from \"react\";\r\nimport {Card,CardBody,} from \"reactstrap\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {  Icon, Button, Breadcrumb} from 'semantic-ui-react';\r\nimport {Form,Row,Col,FormGroup,Label,Input, FormFeedback} from 'reactstrap';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    root: {\r\n        '& > *': {\r\n          margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}))\r\n\r\nconst GenerateCharts = (props) => {\r\n    const classes = useStyles()\r\n    const [loading, setLoading] = useState(false)\r\n\r\n\r\n  return (\r\n    <div >\r\n        <Card >\r\n         <CardBody>\r\n\r\n                 <Row style={{ marginTop: '20px'}}>\r\n  \r\n                    <Col md=\"3\">\r\n                    <FormGroup>\r\n                        <Label>Data Category </Label>\r\n                            <Input\r\n                                type=\"select\"\r\n                                name=\"category\"\r\n                                id=\"category\"\r\n                              \r\n                            >\r\n                                <option value=\"\"></option>\r\n                                <option value=\"indicator\"> Indicator </option>\r\n\r\n                            </Input>\r\n\r\n                    </FormGroup>\r\n                    </Col>\r\n                    <Col md=\"3\">\r\n                    <FormGroup>\r\n                        <Label>Chart Type </Label>\r\n                            <Input\r\n                                type=\"select\"\r\n                                name=\"chart_type\"\r\n                                id=\"chart_type\"\r\n                               \r\n                            >\r\n                                <option value=\"\"></option>\r\n                                <option value=\"column\"> Pie Chart</option>\r\n                                <option value=\"column\"> Bar Chart</option>\r\n                                <option value=\"column\"> Column Chart </option>\r\n                                <option value=\"column\"> Line Chart</option>\r\n                                <option value=\"column\"> Area Chart </option>\r\n                            </Input>\r\n\r\n                    </FormGroup>\r\n                    </Col>\r\n                    <Col md=\"3\">\r\n                    <FormGroup>\r\n                        <Label>Gender </Label>\r\n                            <Input\r\n                                type=\"select\"\r\n                                name=\"gender\"\r\n                                id=\"gender\"\r\n                              \r\n                            >\r\n                                <option value=\"\">All</option>\r\n                                <option value=\"Male\">Male </option>\r\n                                <option value=\"Female\"> Female </option>\r\n                               \r\n                            </Input>\r\n\r\n                    </FormGroup>\r\n                    </Col>\r\n                    <Col md=\"3\">\r\n                     <FormGroup>\r\n                            <Label for=\"exampleSelect\">Age Disaggregation</Label>\r\n                                <Input type=\"text\" name=\"age_disaggregation\" id=\"age_disaggregation\"  >\r\n                                    \r\n                                </Input>\r\n                                    <FormFeedback></FormFeedback>\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col md=\"3\">\r\n                    <FormGroup>\r\n                        <Label>Data Element </Label>\r\n                            <Input\r\n                                type=\"select\"\r\n                                name=\"data_element\"\r\n                                id=\"data_element\"\r\n                                \r\n                            >\r\n\r\n                                <option value=\"\"></option>\r\n                                <option value=\"TX_CURR\">TX_CURR </option>\r\n                                <option value=\"TX_NEW\">TX_NEW </option>\r\n                                <option value=\"PVLS_D\">PVLS_D </option>\r\n                                <option value=\"PVLS_N\">PVLS_N </option>\r\n                                <option value=\"HTS_POS\">HTS_POS </option>\r\n                                <option value=\"HTS\">HTS </option>\r\n\r\n                            </Input>\r\n\r\n                    </FormGroup>\r\n                    </Col>\r\n\r\n                    <Col md=\"3\">\r\n                    <FormGroup>\r\n                        <Label>Start Date </Label>\r\n                        <Input\r\n                            type=\"date\"\r\n                            name=\"data_element\"\r\n                            id=\"data_element\"                                \r\n                        />\r\n                    </FormGroup>\r\n                    </Col>\r\n                    <Col md=\"3\">\r\n                    <FormGroup>\r\n                        <Label>End Date </Label>\r\n                        <Input\r\n                            type=\"date\"\r\n                            name=\"data_element\"\r\n                            id=\"data_element\"                                \r\n                        /> \r\n                    </FormGroup>\r\n                    </Col>\r\n                   \r\n                    <Col style={{ marginTop: '20px'}}>\r\n                    <Button icon labelPosition='right' color='blue' >\r\n                        Generate Chart Report\r\n                    <Icon name='right arrow' />\r\n                    </Button>\r\n                    </Col>\r\n                    </Row>\r\n               \r\n                 \r\n            </CardBody>\r\n        </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GenerateCharts;\r\n\r\n\r\n\r\n","C:\\Users\\USER\\Documents\\LamisPlus\\report-module\\src\\main\\webapp\\jsx\\components\\Reports\\Radet.js",["78","79","80","81"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card} from \"@material-ui/core\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { Button} from 'semantic-ui-react'\r\nimport { toast} from \"react-toastify\";\r\nimport FileSaver from \"file-saver\";\r\nimport { Message, Icon } from 'semantic-ui-react'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst PatientLineList = (props) => {\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false)\r\n    const [facilities, setFacilities] = useState([]);\r\n    const [objValues, setObjValues]=useState({       \r\n        organisationUnitId:\"\",\r\n        startDate:\"\",\r\n        endDate:\"\"\r\n    })\r\n    useEffect(() => {\r\n        Facilities()\r\n      }, []);\r\n    //Get list of WhoStaging\r\n    const Facilities =()=>{\r\n    axios\r\n        .get(`${baseUrl}account`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n        console.log(response.data);\r\n            setFacilities(response.data.applicationUserOrganisationUnits);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });\r\n    \r\n    }\r\n    const handleInputChange = e => {\r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n    }\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        setLoading(true)\r\n        axios.get(`${baseUrl}reporting/radet?facilityId=${objValues.organisationUnitId}&startDate=${objValues.startDate}&endDate=${objValues.endDate}`,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}, responseType: 'blob'},\r\n          \r\n          )\r\n              .then(response => {\r\n                setLoading(false)\r\n                const fileName =\"Radet\"\r\n                const responseData = response.data\r\n                let blob = new Blob([responseData], {type: \"application/octet-stream\"});\r\n                FileSaver.saveAs(blob, `${fileName}.xlsx`);\r\n                toast.success(\" Report generated successful\");\r\n                  //props.setActiveContent('recent-history')\r\n\r\n              })\r\n              .catch(error => {\r\n                setLoading(false)\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n              });\r\n            \r\n\r\n    }\r\n    \r\n    \r\n\r\n    return (\r\n        <>\r\n            \r\n            <Card >\r\n                <CardBody>\r\n    \r\n                <h2 style={{color:'#000'}}>RADET REPORT</h2>\r\n                <br/>\r\n                    <form >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>Start Date*</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"startDate\"\r\n                                        id=\"startDate\"\r\n                                        value={objValues.startDate}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>End Date*</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"endDate\"\r\n                                        id=\"endDate\"\r\n                                        min={objValues.startDate}\r\n                                        value={objValues.endDate}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n                                     \r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>Facility*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"organisationUnitId\"\r\n                                        id=\"organisationUnitId\"\r\n                                        value={objValues.organisationUnitId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {facilities.map((value) => (\r\n                                            <option key={value.id} value={value.organisationUnitId}>\r\n                                                {value.organisationUnitName}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                            <Button type=\"submit\" content='Generate Report' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit} disabled={objValues.organisationUnitId===\"\" ? true : false}/>\r\n                            </div>\r\n                            </div>\r\n\r\n                            {loading && (\r\n                                <Message icon>\r\n                                    <Icon name='circle notched' loading />\r\n                                <Message.Content>\r\n                                <Message.Header>Just one second</Message.Header>\r\n                                    We are fetching that content for you.\r\n                                </Message.Content>\r\n                                </Message>\r\n                            )}\r\n                        </div>\r\n                    </form>\r\n\r\n                </CardBody>\r\n            </Card>                                 \r\n        </>\r\n    );\r\n};\r\n\r\nexport default PatientLineList","C:\\Users\\USER\\Documents\\LamisPlus\\report-module\\src\\main\\webapp\\jsx\\components\\Reports\\PatientLineList.js",["82","83","84","85"],"C:\\Users\\USER\\Documents\\LamisPlus\\report-module\\src\\main\\webapp\\jsx\\components\\Reports\\Appointment.js",["86","87","88","89"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card} from \"@material-ui/core\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { Button} from 'semantic-ui-react'\r\nimport MaterialTable from 'material-table';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { forwardRef } from 'react';\r\nimport { toast} from \"react-toastify\";\r\nimport { Message, Icon } from 'semantic-ui-react'\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n    };\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst Appointment = (props) => {\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false)\r\n    const [showContent, setShowContent] = useState(false)\r\n    const [appointmentReport, setAppointmentReport]= useState([])\r\n    const [facilities, setFacilities] = useState([]);\r\n    const [tableTitle, setTableTitle]= useState(\"\");\r\n    const [showNoRecord, setShowNoRecord]= useState(false)\r\n    const [objValues, setObjValues]=useState({       \r\n        facilityId:\"\", startDate:\"\", endDate:\"\", type:\"\"\r\n    })\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        setLoading(true)\r\n        axios.get(`${baseUrl}reporting/${objValues.type}?facilityId=${objValues.facilityId}&startDate=${objValues.startDate}&endDate=${objValues.endDate} `,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {                \r\n                setLoading(false)\r\n                setShowContent(true)\r\n                if(objValues.type==='miss-refill'){\r\n                    setTableTitle(`Missed Refill Appointment  -  From :${objValues.startDate}  - To: ${objValues.endDate}`)\r\n                }else if(objValues.type==='miss-clinic'){\r\n                    setTableTitle(`Missed Clinic Appointment   -  From :${objValues.startDate}  - To: ${objValues.endDate}`)\r\n                }else if(objValues.type==='clinic-appointment'){\r\n                    setTableTitle(`Clinic Appointment   -  From :${objValues.startDate}  - To: ${objValues.endDate}`)\r\n                }else if(objValues.type==='refill-appointment'){\r\n                    setTableTitle(`Refill Appointment   -  From :${objValues.startDate}  - To: ${objValues.endDate}`)\r\n                }else{\r\n                    setTableTitle('')\r\n                }\r\n                setAppointmentReport(response.data)\r\n                if(response.data.length <=0){\r\n                    setShowNoRecord(true)\r\n                }else{\r\n                    setShowNoRecord(false)\r\n                }\r\n              })\r\n              .catch(error => {\r\n                setLoading(false)\r\n                setShowContent(false)\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n              });\r\n            \r\n\r\n    }\r\n    const handleInputChange = e => {\r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n    }\r\n    useEffect(() => {\r\n        Facilities()\r\n      }, []);\r\n    //Get list of WhoStaging\r\n    const Facilities =()=>{\r\n    axios\r\n        .get(`${baseUrl}account`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setFacilities(response.data.applicationUserOrganisationUnits);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });\r\n    \r\n    }\r\n\r\n    return (\r\n        <>\r\n            \r\n            <Card >\r\n                <CardBody>\r\n    \r\n                <h2 style={{color:'#000'}}>APPOINTMENT REPORT</h2>\r\n                <br/>\r\n                    <form >\r\n                        <div className=\"row\">\r\n\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>Start Date*</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"startDate\"\r\n                                        id=\"startDate\"\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>End Date*</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"endDate\"\r\n                                        id=\"endDate\"\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n                                     \r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>Facility*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"facilityId\"\r\n                                        id=\"facilityId\"\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {facilities.map((value) => (\r\n                                            <option key={value.id} value={value.organisationUnitId}>\r\n                                                {value.organisationUnitName}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>Type*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"type\"\r\n                                        id=\"type\"\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"miss-refill\">Missed Refill Appointment</option>\r\n                                        <option value=\"miss-clinic\">Missed Clinic Appointment </option>\r\n                                        <option value=\"clinic-appointment\">Scheduled Clinic Visit(Clinic Appointment)</option>\r\n                                        <option value=\"refill-appointment\">Scheduled Refill Visit(Refill Appointment)</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                            <Button type=\"submit\" content='Generate Report' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit}\r\n                                disabled={objValues.facilityId===\"\" || objValues.startDate===\"\" || objValues.endDate===\"\"  || objValues.type===\"\" ? true : false}\r\n                            />\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n\r\n                    <br/>\r\n                    {loading && (\r\n                        <Message icon>\r\n                            <Icon name='circle notched' loading />\r\n                            <Message.Content>\r\n                            <Message.Header>Just one second</Message.Header>\r\n                            We are fetching that content for you.\r\n                            </Message.Content>\r\n                        </Message>\r\n                    )}\r\n                    {showNoRecord && (\r\n                        <Message info>\r\n                            <Message.Content>\r\n                            {/* <Message.Header>Just one second</Message.Header> */}\r\n                            <b>No Record Found</b>\r\n                            </Message.Content>\r\n                        </Message>\r\n                    )}\r\n                    {showContent &&(\r\n                        <MaterialTable\r\n                            icons={tableIcons}\r\n                            title= {tableTitle}\r\n                            columns={[\r\n                                { title: \"Name\", field: \"name\" },\r\n                                { title: \"Hospital Num\", field: \"hospitalNum\" },\r\n                                { title: \"Patient Id\", field: \"patientId\" },                                \r\n                                { title: \"DOB\", field: \"dateBirth\" },\r\n                                { title: \"Age\", field: \"age\" },\r\n                                { title: \"phone\", field: \"phone\" },\r\n                                { title: \"Art Start Date\", field: \"artStartDate\" },\r\n                                { title: \"Date Of LastVisit\", field: \"dateOfLastVisit\" },\r\n                                { title: \"Date Of NextVisit\", field: \"dateOfNextVisit\" },\r\n                                { title: \"Current Status\", field: \"currentStatus\" },\r\n                                { title: \"Case Manager\", field: \"caseManager\" },\r\n                                { title: \"Facility Name\", field: \"facilityName\" },\r\n                                { title: \"lga\", field: \"lga\" },\r\n                                { title: \"Lga Of Residence\", field: \"lgaOfResidence\" },\r\n                                { title: \"state\", field: \"state\" },\r\n                                { title: \"State Of Residence\", field: \"stateOfResidence\" },\r\n\r\n                            ]}\r\n                            isLoading={loading}\r\n                            data={appointmentReport.map((row) => ({\r\n                                name: row.name,\r\n                                hospitalNum: row.hospitalNum,\r\n                                patientId:row.patientId,\r\n                                dateBirth: row.dateBirth,\r\n                                age: row.age,\r\n                                phone: row.phone,\r\n                                artStartDate: row.artStartDate,\r\n                                dateOfLastVisit: row.dateOfLastVisit,\r\n                                dateOfNextVisit:row.dateOfNextVisit,\r\n                                currentStatus: row.currentStatus,\r\n                                caseManager: row.caseManager,\r\n                                facilityName: row.facilityName,\r\n                                lga:row.lga,\r\n                                lgaOfResidence: row.lgaOfResidence,\r\n                                state: row.state,\r\n                                stateOfResidence:row.stateOfResidence,\r\n                                \r\n                                }))}\r\n                            \r\n                                        options={{\r\n                                        headerStyle: {\r\n                                            backgroundColor: \"#014d88\",\r\n                                            color: \"#fff\",\r\n                                        },\r\n                                        searchFieldStyle: {\r\n                                            width : '100%',\r\n                                            margingLeft: '250px',\r\n                                        },\r\n                                        filtering: false,\r\n                                        exportButton: true,\r\n                                        searchFieldAlignment: 'left',\r\n                                        pageSizeOptions:[10,20,100, 500,1000,2000,3000],\r\n                                        pageSize:10,\r\n                                        debounceInterval: 400\r\n                            }}\r\n                        />\r\n                    )}\r\n                </CardBody>\r\n            </Card>                                 \r\n        </>\r\n    );\r\n};\r\n\r\nexport default Appointment","C:\\Users\\USER\\Documents\\LamisPlus\\report-module\\src\\main\\webapp\\api.js",[],"C:\\Users\\USER\\Documents\\LamisPlus\\report-module\\src\\main\\webapp\\jsx\\components\\Reports\\PharmacyReport.js",["90","91","92","93"],"C:\\Users\\USER\\Documents\\LamisPlus\\report-module\\src\\main\\webapp\\jsx\\components\\Reports\\BiometricReport.js",["94","95","96","97"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card} from \"@material-ui/core\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { Button} from 'semantic-ui-react'\r\nimport { toast} from \"react-toastify\";\r\nimport FileSaver from \"file-saver\";\r\nimport { Message, Icon } from 'semantic-ui-react'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst BiometricReport = (props) => {\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false)\r\n    const [facilities, setFacilities] = useState([]);\r\n    const [objValues, setObjValues]=useState({       \r\n        organisationUnitId:\"\",\r\n        startDate:\"\",\r\n        endDate:\"\"\r\n    })\r\n    useEffect(() => {\r\n        Facilities()\r\n      }, []);\r\n    //Get list of WhoStaging\r\n    const Facilities =()=>{\r\n    axios\r\n        .get(`${baseUrl}account`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setFacilities(response.data.applicationUserOrganisationUnits);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });\r\n    \r\n    }\r\n    const handleInputChange = e => {\r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n    }\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        setLoading(true)\r\n        axios.get(`${baseUrl}reporting/biometric?facilityId=${objValues.organisationUnitId}&startDate=${objValues.startDate}&endDate=${objValues.endDate}`,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}, responseType: 'blob'},\r\n          \r\n          )\r\n              .then(response => {\r\n                setLoading(false)\r\n                const fileName =\"Radet\"\r\n                const responseData = response.data\r\n                let blob = new Blob([responseData], {type: \"application/octet-stream\"});\r\n                FileSaver.saveAs(blob, `${fileName}.xlsx`);\r\n                toast.success(\" Report generated successful\");\r\n                  //toast.success(\" Save successful\");\r\n                  //props.setActiveContent('recent-history')\r\n\r\n              })\r\n              .catch(error => {\r\n                setLoading(false)\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n              });\r\n            \r\n\r\n    }\r\n    \r\n    \r\n\r\n    return (\r\n        <>\r\n            \r\n            <Card >\r\n                <CardBody>\r\n    \r\n                <h2 style={{color:'#000'}}>BIOMETRIC REPORT</h2>\r\n                <br/>\r\n                    <form >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>Start Date*</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"startDate\"\r\n                                        id=\"startDate\"\r\n                                        value={objValues.startDate}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>End Date*</Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"endDate\"\r\n                                        id=\"endDate\"\r\n                                        min={objValues.startDate}\r\n                                        value={objValues.endDate}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n                                     \r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>Facility*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"organisationUnitId\"\r\n                                        id=\"organisationUnitId\"\r\n                                        value={objValues.organisationUnitId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {facilities.map((value) => (\r\n                                            <option key={value.id} value={value.organisationUnitId}>\r\n                                                {value.organisationUnitName}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                            <Button type=\"submit\" content='Generate Report' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit} disabled={objValues.organisationUnitId===\"\" ? true : false}/>\r\n                            </div>\r\n                            </div>\r\n\r\n                            {loading && (\r\n                                <Message icon>\r\n                                    <Icon name='circle notched' loading />\r\n                                <Message.Content>\r\n                                <Message.Header>Just one second</Message.Header>\r\n                                    We are fetching that content for you.\r\n                                </Message.Content>\r\n                                </Message>\r\n                            )}\r\n                        </div>\r\n                    </form>\r\n\r\n                </CardBody>\r\n            </Card>                                 \r\n        </>\r\n    );\r\n};\r\n\r\nexport default BiometricReport",{"ruleId":"98","severity":1,"message":"99","line":4,"column":41,"nodeType":"100","messageId":"101","endLine":4,"endColumn":47},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"98","severity":1,"message":"106","line":4,"column":25,"nodeType":"100","messageId":"101","endLine":4,"endColumn":30},{"ruleId":"98","severity":1,"message":"107","line":8,"column":10,"nodeType":"100","messageId":"101","endLine":8,"endColumn":14},{"ruleId":"98","severity":1,"message":"108","line":30,"column":11,"nodeType":"100","messageId":"101","endLine":30,"endColumn":18},{"ruleId":"98","severity":1,"message":"109","line":31,"column":12,"nodeType":"100","messageId":"101","endLine":31,"endColumn":18},{"ruleId":"98","severity":1,"message":"110","line":31,"column":20,"nodeType":"100","messageId":"101","endLine":31,"endColumn":29},{"ruleId":"98","severity":1,"message":"111","line":4,"column":25,"nodeType":"100","messageId":"101","endLine":4,"endColumn":35},{"ruleId":"98","severity":1,"message":"112","line":5,"column":9,"nodeType":"100","messageId":"101","endLine":5,"endColumn":13},{"ruleId":"98","severity":1,"message":"108","line":48,"column":11,"nodeType":"100","messageId":"101","endLine":48,"endColumn":18},{"ruleId":"98","severity":1,"message":"113","line":49,"column":12,"nodeType":"100","messageId":"101","endLine":49,"endColumn":19},{"ruleId":"98","severity":1,"message":"114","line":49,"column":21,"nodeType":"100","messageId":"101","endLine":49,"endColumn":31},{"ruleId":"98","severity":1,"message":"115","line":3,"column":38,"nodeType":"100","messageId":"101","endLine":3,"endColumn":45},{"ruleId":"98","severity":1,"message":"116","line":3,"column":46,"nodeType":"100","messageId":"101","endLine":3,"endColumn":51},{"ruleId":"98","severity":1,"message":"112","line":3,"column":52,"nodeType":"100","messageId":"101","endLine":3,"endColumn":56},{"ruleId":"98","severity":1,"message":"108","line":58,"column":11,"nodeType":"100","messageId":"101","endLine":58,"endColumn":18},{"ruleId":"98","severity":1,"message":"115","line":3,"column":38,"nodeType":"100","messageId":"101","endLine":3,"endColumn":45},{"ruleId":"98","severity":1,"message":"116","line":3,"column":46,"nodeType":"100","messageId":"101","endLine":3,"endColumn":51},{"ruleId":"98","severity":1,"message":"112","line":3,"column":52,"nodeType":"100","messageId":"101","endLine":3,"endColumn":56},{"ruleId":"98","severity":1,"message":"108","line":58,"column":11,"nodeType":"100","messageId":"101","endLine":58,"endColumn":18},{"ruleId":"98","severity":1,"message":"115","line":3,"column":38,"nodeType":"100","messageId":"101","endLine":3,"endColumn":45},{"ruleId":"98","severity":1,"message":"116","line":3,"column":46,"nodeType":"100","messageId":"101","endLine":3,"endColumn":51},{"ruleId":"98","severity":1,"message":"112","line":3,"column":52,"nodeType":"100","messageId":"101","endLine":3,"endColumn":56},{"ruleId":"98","severity":1,"message":"108","line":94,"column":11,"nodeType":"100","messageId":"101","endLine":94,"endColumn":18},{"ruleId":"98","severity":1,"message":"115","line":3,"column":38,"nodeType":"100","messageId":"101","endLine":3,"endColumn":45},{"ruleId":"98","severity":1,"message":"116","line":3,"column":46,"nodeType":"100","messageId":"101","endLine":3,"endColumn":51},{"ruleId":"98","severity":1,"message":"112","line":3,"column":52,"nodeType":"100","messageId":"101","endLine":3,"endColumn":56},{"ruleId":"98","severity":1,"message":"108","line":58,"column":11,"nodeType":"100","messageId":"101","endLine":58,"endColumn":18},{"ruleId":"98","severity":1,"message":"115","line":3,"column":38,"nodeType":"100","messageId":"101","endLine":3,"endColumn":45},{"ruleId":"98","severity":1,"message":"116","line":3,"column":46,"nodeType":"100","messageId":"101","endLine":3,"endColumn":51},{"ruleId":"98","severity":1,"message":"112","line":3,"column":52,"nodeType":"100","messageId":"101","endLine":3,"endColumn":56},{"ruleId":"98","severity":1,"message":"108","line":58,"column":11,"nodeType":"100","messageId":"101","endLine":58,"endColumn":18},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","no-native-reassign",["117"],"no-negated-in-lhs",["118"],"'toast' is defined but never used.","'Icon' is defined but never used.","'classes' is assigned a value but never used.","'saving' is assigned a value but never used.","'setSaving' is assigned a value but never used.","'Breadcrumb' is defined but never used.","'Form' is defined but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'Spinner' is defined but never used.","'Input' is defined but never used.","no-global-assign","no-unsafe-negation"]