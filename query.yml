query:
  index-query-name: index_elicitation
  index-query:  SELECT boui.code as "Facility Id (Datim)", state.name AS "State", lga.name AS "LGA", facility.name AS "Facility" ,  hc.client_code AS "Client Code",
    pp.uuid AS "Patient Id",
    hc.uuid AS "Index HTS Uuid",
    (CASE WHEN hc.test1->>'result' ILIKE 'Yes' THEN 'Positive' ELSE 'Negative' END) AS "HIV Status of Index",
    hc.index_notification_services_elicitation ->> 'OfferedIns' AS "Offered INS",
    hc.index_notification_services_elicitation ->> 'AcceptedIns' AS "Accepted INS",
    hc.client_code AS "Index Code",
    hie.dob AS "Date of Birth",
    se.display AS "Sex",
    noti_method.display AS "Notification Method",
    sexually_un.display AS "Sexually uncomfortable",
    CASE WHEN hie.currently_live_with_partner  IS TRUE THEN 'Yes' ELSE 'No' END AS "Currently living with partner",
    relationship.display AS "Relationship with index client",
    hie.date_partner_came_for_testing AS "Date Partner Came For Testing"
    FROM hts_client hc
    LEFT JOIN patient_person pp ON pp.uuid=hc.person_uuid
    INNER JOIN hts_index_elicitation hie ON hie.hts_client_uuid = hc.uuid
    LEFT JOIN base_application_codeset se ON se.id=hie.sex
    LEFT JOIN base_application_codeset noti_method ON noti_method.id=hie.notification_method
    LEFT JOIN base_application_codeset sexually_un ON sexually_un.id=hie.sexually_uncomfortable
    LEFT JOIN base_application_codeset relationship ON relationship.id=hie.relationship_with_index_client
    LEFT JOIN base_organisation_unit facility ON facility.id=hc.facility_id
    LEFT JOIN base_organisation_unit state ON state.id=facility.parent_organisation_unit_id
    LEFT JOIN base_organisation_unit lga ON lga.id=state.parent_organisation_unit_id
    LEFT JOIN base_organisation_unit_identifier boui ON boui.organisation_unit_id=hc.facility_id AND boui.name='DATIM_ID'
    WHERE hc.archived=0 AND hc.facility_id=%d AND
    hc.date_visit BETWEEN CAST('%s' AS DATE)
    AND CAST('%s' AS DATE)
  biometric-query-name: biometric
  biometric-query:  SELECT result.state AS "State", result.lga AS "LGA", result.facility AS "Facility",
    result.uuid AS "Patient ID", result.hospitalNumber AS "Hospital Number",
    base.enrollment_date AS "Date Base Biometrics Enrolled (yyyy-mm-dd)",
    base.count AS "Number of Base Fingerprint Captured",
    first_recapture.enrollment_date AS "Date of 1st Biometric Recapture",
    first_recapture.count AS "Number of 1st Biometric Recaptured Fingerprints",
    first_recapture.perfectMatch AS "Baseline Match Perfect", first_recapture.imperfectMatch AS "Baseline Match Imperfect",
    first_recapture.noMatch AS "Baseline Match No-Match",
    second_recapture.enrollment_date AS "Date of 2nd Biometric Recapture",
    second_recapture.count AS "Number of 2nd Recapture Fingerprints Captured",
    second_recapture.perfectMatch AS "Recapture Match Perfect", second_recapture.imperfectMatch AS "Recapture Match Imperfect",
    second_recapture.noMatch AS "Recapture Match No-Match",
    third_recapture.enrollment_date AS "Date of 3rd Biometric Recapture",
    third_recapture.count AS "Number of 3rd Recapture Fingerprints Captured",
    third_recapture.perfectMatch AS " 3rd Recapture Match Perfect", third_recapture.imperfectMatch AS "3rd Recapture Match Imperfect",
    third_recapture.noMatch AS "3rd Recapture Match No-Match",
    recentData.recentEnrollmentDate AS "Date of last Recapture", recentData.recentCapture AS "Number of Recapture Done",
    (CASE WHEN second_recapture.replace_date IS NOT NULL THEN second_recapture.replace_date
    WHEN first_recapture.replace_date IS NOT NULL THEN first_recapture.replace_date
    WHEN base.replace_date IS NOT NULL THEN base.replace_date
    ELSE NULL END) AS "Date Base Fingerprint Replaced"
    FROM
    (SELECT pp.hospital_number AS hospitalNumber, pp.facility_id,
    pp.uuid, facility.name AS facility, state.name AS state, lga.name AS lga
    FROM patient_person pp
    INNER JOIN hiv_enrollment he ON he.person_uuid=pp.uuid AND he.archived=0
    LEFT JOIN base_organisation_unit facility ON facility.id=pp.facility_id
    LEFT JOIN base_organisation_unit state ON state.id=facility.parent_organisation_unit_id
    LEFT JOIN base_organisation_unit lga ON lga.id=state.parent_organisation_unit_id
    LEFT JOIN base_organisation_unit_identifier boui ON boui.organisation_unit_id=pp.facility_id
    AND boui.name='DATIM_ID'
    WHERE pp.archived=0
    AND pp.facility_id=%d
    AND pp.date_of_registration BETWEEN CAST('%s' AS DATE) AND CAST('%s' AS DATE)
    ) AS result
    LEFT JOIN (
    SELECT
    person_uuid,
    MAX(enrollment_date) enrollment_date, replace_date,
    count
    FROM
    biometric
    WHERE
    recapture = 0
    AND archived=0
    AND count is not null
    AND enrollment_date is not null
    AND version_iso_20 IS TRUE
    GROUP BY person_uuid, count, replace_date
    ) base ON result.uuid = base.person_uuid
    LEFT JOIN (
    SELECT
    person_uuid,
    MAX(enrollment_date) AS enrollment_date,
    replace_date,
    COUNT(CASE WHEN match_type = 'Perfect Match' THEN 1 ELSE NULL END) AS perfectMatch,
    COUNT(CASE WHEN match_type = 'Imperfect Match' THEN 1 ELSE NULL END) AS imperfectMatch,
    COUNT(CASE WHEN match_type = 'No Match' THEN 1 ELSE NULL END) AS noMatch,
    count FROM biometric WHERE
    (recapture = 1)
    AND archived = 0
    AND count IS NOT NULL
    AND enrollment_date IS NOT NULL
    AND version_iso_20 IS TRUE GROUP BY person_uuid, count, replace_date
    ) AS first_recapture ON result.uuid = first_recapture.person_uuid
    LEFT JOIN (
    SELECT
    person_uuid,
    MAX(enrollment_date) enrollment_date, replace_date,
    COUNT(CASE WHEN match_type = 'Perfect Match' THEN 1 ELSE NULL END) AS perfectMatch,
    COUNT(CASE WHEN match_type = 'Imperfect Match' THEN 1 ELSE NULL END) AS imperfectMatch,
    COUNT(CASE WHEN match_type = 'No Match' THEN 1 ELSE NULL END) AS noMatch,
    count
    FROM biometric WHERE
    (recapture = 2)
    AND archived=0
    AND count is not null
    AND enrollment_date is not null
    AND version_iso_20 IS TRUE
    GROUP BY person_uuid, count, replace_date
    ) AS second_recapture ON result.uuid = second_recapture.person_uuid
    LEFT JOIN (
    SELECT
    person_uuid,
    MAX(enrollment_date) enrollment_date, replace_date,
    COUNT(CASE WHEN match_type = 'Perfect Match' THEN 1 ELSE NULL END) AS perfectMatch,
    COUNT(CASE WHEN match_type = 'Imperfect Match' THEN 1 ELSE NULL END) AS imperfectMatch,
    COUNT(CASE WHEN match_type = 'No Match' THEN 1 ELSE NULL END) AS noMatch,
    count
    FROM biometric WHERE
    (recapture = 3)
    AND archived=0
    AND count is not null
    AND enrollment_date is not null
    AND version_iso_20 IS TRUE
    GROUP BY person_uuid, count, replace_date ) AS third_recapture ON result.uuid = third_recapture.person_uuid
    LEFT JOIN (SELECT * FROM (SELECT person_uuid, enrollment_date AS recentEnrollmentDate, MAX(recapture) AS recentCapture, ROW_NUMBER () OVER (PARTITION BY person_uuid ORDER BY enrollment_date DESC) AS rank1
    FROM biometric WHERE
    archived=0
    AND count is not null
    AND enrollment_date is not null
    AND version_iso_20 IS TRUE
    GROUP BY person_uuid, count, enrollment_date) recent where rank1 = 1 ) recentData ON recentData.person_uuid = result.uuid
  pmtct-hts-query-name: pmtct-hts
  pmtct-hts-query:  SELECT pmtct.state as "State", pmtct.lga as "LGA", pmtct.facilityName AS "Facility",
    pmtct.uuid AS "Patient ID", pmtct.anc_no AS "ANC number", pmtct.motherCode AS "Mother''s Hospital Num",
    pmtct.dateofbirth AS "Mother''s Date of Birth", pmtct.age AS "Age", pmtct.maritalstatus AS "Marital Status",
    pmtct.entryPoint AS "Point of Entry", pmtct.modality AS "Modality", pmtct.gaweeks_anc AS "Gestational Age (Weeks) @ First ANC visit",
    pmtct.hivTestDate AS "Date tested for HIV", pmtct.hiv_test_result AS "HIV Test result",
    pmtct.encounterDate1 AS "Date Tested for Hepatitis B", pmtct.hepatitisBTestResult AS "Hepatitis B Test Result", pmtct.encounterDate2 AS "Date Tested for Hepatitis C", pmtct.hepatitisCTestResult AS "Hepatitis C Test Result",
    pmtct.encounterDate3 AS "Date tested for Sypillis", pmtct.syphilisTestResult AS "Syphillis Test Result", pmtct.IfRecencyTestingOptIn AS "If Recency Testing Opt In",
    pmtct.recencyID AS "Recency Id", pmtct.recencyTestType AS "Recency Test Type", pmtct.recencyTestDate AS "Recency Test Date (yyyy-mm-dd)",
    pmtct.recencyInterpretation AS "Recency Interpretation", pmtct.viralLoadSampleCollectionDate AS "Viral Load Sample Collection Date", pmtct.viralLoadResult AS "Viral Load Result Classification",
    pmtct.viralLoadConfirmationResult AS "Viral Load Confirmation Result", pmtct.viralLoadConfirmationDate AS "Viral Load Confirmation Date (yyyy-mm-dd)", pmtct.finalRecencyResult AS "Final Recency Result",
    pmtct.hivEnrollment AS "Mother''s ART Start Date"
    from (
    SELECT DISTINCT ON (p.uuid)p.uuid AS PersonUuid,
    facility_state.name as state,
    facility_lga.name as lga,
    facility.name as facilityName,
    p.hospital_number as hospitalNumber,
    anc.anc_no,
    COALESCE(he.unique_id, hc.client_code) AS motherCode,
    p.date_of_birth as dateOfBirth,
    EXTRACT(YEAR from AGE(NOW(),  date_of_birth)) as age,
    p.marital_status->>'display' as maritalStatus,
    p.uuid,
    (select display from base_application_codeset where code = hrs.modality ) AS modality,
    anc.gaweeks_anc,
    hc.test1->>'date' AS hivTestDate,
    hc.hiv_test_result,
    hc.date_visit AS encounterDate, hc.date_visit AS encounterDate1, hc.date_visit AS encounterDate2, hc.date_visit AS encounterDate3, hc.date_visit AS encounterDate4,
    (CASE WHEN hc.hepatitis_testing->>'hepatitisBTestResult' ILIKE 'Yes' THEN 'Positive' ELSE 'Negative' END) AS hepatitisBTestResult,
    (CASE WHEN hc.hepatitis_testing->>'hepatitisCTestResult' ILIKE 'Yes' THEN 'Positive' ELSE 'Negative' END) AS hepatitisCTestResult,
    (CASE WHEN hc.syphilis_testing->>'syphilisTestResult' ILIKE 'Yes' THEN 'Reactive' ELSE 'Non-Reactive' END) As syphilisTestResult,
    (CASE WHEN hc.recency->>'optOutRTRI' ILIKE 'true' THEN 'Yes' WHEN hc.recency->>'optOutRTRI' ILIKE 'false' THEN 'No' WHEN hc.recency->>'optOutRTRI' != NULL THEN hc.recency->>'optOutRTRI' ELSE NULL END) AS IfRecencyTestingOptIn,
    hc.recency->>'rencencyId' AS recencyID, hc.recency->>'optOutRTRITestName' AS recencyTestType,
    (CASE WHEN hc.recency->>'optOutRTRITestDate' IS NOT NULL AND hc.recency->>'optOutRTRITestDate' != '' AND LENGTH(hc.recency->>'optOutRTRITestDate') > 0 THEN CAST(NULLIF(hc.recency->>'optOutRTRITestDate', '') AS TEXT) WHEN hc.recency->>'sampleTestDate' IS NOT NULL
    AND hc.recency->>'sampleTestDate' != '' AND LENGTH(hc.recency->>'sampleTestDate') > 0 THEN CAST(NULLIF(hc.recency->>'sampleTestDate', '') AS TEXT) ELSE NULL END) AS recencyTestDate,
    (CASE WHEN hc.recency->>'receivedResultDate' IS NOT NULL AND hc.recency->>'receivedResultDate' != '' AND LENGTH(hc.recency->>'receivedResultDate') > 0 THEN CAST(NULLIF(hc.recency->>'receivedResultDate', '') AS TEXT) ELSE NULL END) AS viralLoadReceivedResultDate,
    (CASE WHEN hc.recency->>'rencencyInterpretation' IS NOT NULL AND hc.recency->>'rencencyInterpretation' ILIKE '%Long%' THEN 'RTRI Longterm'
    WHEN hc.recency->>'rencencyInterpretation' IS NOT NULL AND hc.recency->>'rencencyInterpretation' ILIKE '%Recent%' THEN 'RTRI Recent' ELSE hc.recency->>'rencencyInterpretation' END) AS recencyInterpretation,
    hc.recency->>'finalRecencyResult' AS finalRecencyResult, hc.recency->>'viralLoadResultClassification' AS viralLoadResult,
    CAST(NULLIF(hc.recency->>'sampleCollectedDate', '') AS TEXT) AS viralLoadSampleCollectionDate,  hc.recency->>'viralLoadConfirmationResult' AS viralLoadConfirmationResult,
    CAST(NULLIF(hc.recency->>'viralLoadConfirmationTestDate', '') AS DATE) AS viralLoadConfirmationDate,
    hc.date_visit AS encounterDate,
    (select display from base_application_codeset where code = hrs.entry_point) AS entryPoint,
    CAST(COALESCE(he.date_started, he.date_of_registration) AS TEXT) AS hivEnrollment
    FROM patient_person p
    LEFT JOIN hiv_enrollment he ON he.person_uuid = p.uuid
    INNER JOIN hts_client hc ON hc.person_uuid = p.uuid
    INNER JOIN (
    SELECT * FROM (SELECT p.id, CONCAT(CAST(address_object->>'city' AS VARCHAR), ' ', REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(CAST(address_object->>'line' AS text), '\\\\\\\\', ''), ']', ''), '[', ''), 'null',''), '\\\\\\\', '')) AS address,
    CASE WHEN address_object->>'stateId'  ~ '^\\\\d+(\\\\.\\\\d+)?$' THEN address_object->>'stateId' ELSE null END  AS stateId,
    CASE WHEN address_object->>'district'  ~ '^\\\\d+(\\\\.\\\\d+)?$' THEN address_object->>'district' ELSE null END  AS lgaId
    FROM patient_person p,
    jsonb_array_elements(p.address-> 'address') with ordinality l(address_object)) as result
    ) r ON r.id=p.id
    LEFT JOIN base_organisation_unit facility ON facility.id=p.facility_id
    LEFT JOIN hts_risk_stratification hrs ON hrs.code = hc.risk_stratification_code
    LEFT JOIN base_application_codeset tg ON tg.code = hc.target_group
    LEFT JOIN base_application_codeset it ON it.id = hc.relation_with_index_client
    LEFT JOIN base_application_codeset rf ON rf.id = hc.referred_from
    LEFT JOIN base_application_codeset ts ON ts.code = hc.testing_setting
    LEFT JOIN base_application_codeset tc ON tc.id = hc.type_counseling
    LEFT JOIN base_application_codeset preg ON preg.id = hc.pregnant
    LEFT JOIN base_application_codeset modality_code ON modality_code.code = hrs.modality
    LEFT JOIN base_organisation_unit facility_lga ON facility_lga.id=facility.parent_organisation_unit_id
    LEFT JOIN base_organisation_unit facility_state ON facility_state.id=facility_lga.parent_organisation_unit_id
    LEFT JOIN base_organisation_unit res_state ON res_state.id=CAST(r.stateid AS BIGINT)
    LEFT JOIN base_organisation_unit res_lga ON res_lga.id=CAST(r.lgaid AS BIGINT)
    LEFT JOIN base_organisation_unit_identifier boui ON boui.organisation_unit_id=p.facility_id AND boui.name='DATIM_ID'
    LEFT JOIN (
    SELECT person_uuid AS person_uuid_anc,
    anc_setting AS anc_setting_anc,
    gaweeks AS gaweeks_anc,
    anc_no AS anc_no,
    static_hiv_status,
    MAX(created_date) AS max_created_date_anc
    FROM pmtct_anc
    GROUP BY person_uuid, anc_setting, first_anc_date, gaweeks, gravida, parity, tested_syphilis, test_result_syphilis, partner_information, anc_no, static_hiv_status,
    pmtct_hts_info
    ) AS anc ON p.uuid = anc.person_uuid_anc
    LEFT JOIN pmtct_enrollment pmtctenroll ON pmtctenroll.person_uuid = p.uuid
    WHERE p.archived=0 and p.sex='Female' AND hrs.testing_setting IN ('TEST_SETTING_OTHERS', 'TEST_SETTING_CPMTCT', 'TEST_SETTING_STANDALONE_HTS') AND hrs.modality IN ('TEST_SETTING_STANDALONE_HTS_POST_ANC1_PREGNANT_L&D','TEST_SETTING_STANDALONE_HTS_POST_ANC1_BREASTFEEDING','TEST_SETTING_STANDALONE_HTS_PMTCT_(ANC1_ONLY)','TEST_SETTING_OTHERS_PMTCT_(ANC1_ONLY)','TEST_SETTING_OTHERS_POST_ANC1_BREASTFEEDING','TEST_SETTING_OTHERS_POST_ANC1_PREGNANT_L&D', 'TEST_SETTING_CPMTCT_CONGREGATIONAL_SETTING','TEST_SETTING_CPMTCT_DELIVERY_HOMES', 'TEST_SETTING_CPMTCT_SPOKE_HEALTH_FACILITY', 'TEST_SETTING_CPMTCT_TBA_ORTHODX', 'TEST_SETTING_CPMTCT_TBA_RT-HCW')
    AND p.facility_id='?1' AND hc.date_visit BETWEEN CAST('?2' AS DATE) AND CAST('?3' AS DATE)
    ) as pmtct
  pmtct-maternal-cohort-query-name: pmtct-maternal-cohort
  pmtct-maternal-cohort-query:  Select infant.state AS "State", infant.LGA AS "LGA", infant.Facility AS "Facility",
    infant.Personuuid AS "Patient ID", infant.Mothers_Hospital_Number AS "Mother''s Hospital Num",
    infant.Mothers_Date_of_Birth AS "Mother''s Date of Birth",
    infant.maritalstatus AS "Marital Status", infant.anc_setting_anc AS "ANC Setting ( Facility,Community)",
    infant.Date_of_Index_ANC_Registration AS "Date of Index ANC Registration",
    infant.LMP_Date AS "LMP Date", infant.Gestational_Age_Weeks_at_First_ANC_visit AS "Gestational Age (Weeks) @ First ANC visit",
    infant.gravida AS "Gravida", infant.parity AS "Parity", infant.entry_point AS "Point of entry",
    infant.hbstatus_delivery AS "Hepatitis B Test Result",infant.test_result_syphilis_anc AS "Syphillis Test Result",
    infant.Mother_dateConfirmedHivTest AS "Date tested for HIV", infant.hivstatus AS "HIV Test result",
    infant.art_start_time AS "Timing of ART initiation in mother",
    infant.art_start_date AS "Mother''s ART Start Date", infant.date_of_viral_load AS "Date of last Valid VL(If any)",
    infant.ga_of_viral_Load AS "GA at last visit??? (days)", infant.dateOfCurrentViralLoad,
    infant.currentViralLoad, infant.viralloadindication AS "VL Indication for last valid VL before  32 weeks GA",
    infant.expected_delivery_date AS "Expected Date of Delivery", infant.date_of_delivery AS "Date of Delivery (mm-dd-yyyy)",
    infant.infant_hospital_number AS "Child''s hospital ID number", infant.place_of_delivery AS "Place of Delivery",
    infant.mode_of_delivery AS "Mode of delivery", infant.child_status AS "Fetal outcome (Child status)", Infant.sex AS "Sex - Child",
    infant.body_weight AS "Birth Weight",
    infant.feeding_decision AS "Infant feeding Options",
    infant.test_type, infant.date_sample_collected, infant.date_sample_sent, infant.date_result_received_at_facility,
    infant.results, infant.infant_outcome_at18_months AS "Result (Child Final Outcome)"
    from (SELECT DISTINCT ON (pia.infant_hospital_number) p.uuid AS PersonUuid, p.id, p.uuid,p.hospital_number as Mothers_Hospital_Number,
    INITCAP(p.surname) AS surname, INITCAP(p.first_name) as firstName, he.date_started AS hivEnrollmentDate,
    EXTRACT(YEAR from AGE(NOW(),  date_of_birth)) as Mother_age,
    p.other_name as otherName, p.sex as sex, p.date_of_birth as Mothers_Date_of_Birth,
    p.date_of_registration as dateOfRegistration, p.marital_status->>'display' as maritalStatus,
    education->>'display' as education, p.employment_status->>'display' as occupation,
    facility.name as Facility, facility_lga.name as LGA, facility_state.name as state,
    boui.code as datimId,
    pmtctenroll.lmp AS LMP_Date,
    bacEntry.display AS entry_point,
    person_uuid_anc,
    anc.max_created_date_anc,
    bacc.display AS anc_setting_anc,
    anc.Date_of_Index_ANC_Registration,
    anc.Gestational_Age_Weeks_at_First_ANC_visit,
    anc.gravida,
    anc.parity,
    anc.tested_syphilis_anc,
    anc.test_result_syphilis_anc,
    anc.syphillisStatus AS Partner_syphilis_status,
    anc.acceptHivTest AS Partner_acceptHivTest,
    anc.referredTo AS Partner_syphilis_status,
    anc.age AS Partner_age,
    delivery.hbstatus_delivery,
    delivery.hcstatus_delivery,
    delivery.date_of_delivery,
    bacModeOfDelivery.display AS mode_of_delivery,
    delivery.maternal_outcome,
    bacChildStatus.display AS child_status,
    delivery.number_of_infants_alive,
    delivery.number_of_infants_dead,
    delivery.delivery_time,
    bacFeedingOption.display AS feeding_decision,
    delivery.child_given_arv_with72,
    delivery.hiv_exposed_infant_given_hb_with24hrs,
    VlResult.dateOfCurrentViralLoad,
    VlResult.currentViralLoad,
    VlResult.viralLoadIndication,
    mother_visitation.ga_of_viral_load,
    mother_visitation.date_of_viral_load,
    pii.hospital_number,
    pii.infant_sex,
    pii.body_weight,
    piv.ctx_status,
    pip.age_at_test,
    pip.test_type,
    pip.date_sample_collected,
    pip.date_sample_sent,
    pip.date_result_received_at_facility,
    pip.date_result_received_by_caregiver,
    bacResult.display AS results,
    pii.infant_outcome_at18_months,
    anc.Mother_dateConfirmedHivTest AS Mother_dateConfirmedHivTest,
    anc.hivstatus AS hivstatus,
    bac.display AS art_start_time,
    pmtctenroll.art_start_date,
    anc.expected_delivery_date,
    pia.infant_hospital_number,
    bacDelivery.display AS place_of_delivery
    FROM patient_person p
    INNER JOIN (
    SELECT * FROM (SELECT p.id, REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(CAST(address_object->>'line' AS text), '"', ''), ']', ''), '[', ''), 'null',''), '\\\\\\\', '') AS address,
    CASE WHEN address_object->>'stateId'  ~ '^\\\\d+(\\\\.\\\\d+)?$' THEN address_object->>'stateId' ELSE null END  AS stateId,
    CASE WHEN address_object->>'district'  ~ '^\\\\d+(\\\\.\\\\d+)?$' THEN address_object->>'district' ELSE null END  AS lgaId
    FROM patient_person p,
    jsonb_array_elements(p.address-> 'address') with ordinality l(address_object)) as result
    ) r ON r.id=p.id
    LEFT JOIN (
    SELECT mother_person_uuid AS mother_person_uuid,
    body_weight AS body_weight,
    hospital_number AS hospital_number,
    sex AS infant_sex,
    infant_outcome_at18_months AS infant_outcome_at18_months,
    MAX(created_date) AS max_created_date_pii
    FROM pmtct_infant_information
    GROUP BY mother_person_uuid, body_weight, hospital_number, infant_sex, infant_outcome_at18_months
    ) AS pii ON p.uuid = pii.mother_person_uuid
    LEFT JOIN (
    SELECT mother_person_uuid AS mother_person_uuid,
    ctx_status AS ctx_status,
    MAX(visit_date) AS max_created_date_piv
    FROM pmtct_infant_visit
    GROUP BY mother_person_uuid, ctx_status
    ) AS piv ON p.uuid = piv.mother_person_uuid
    LEFT JOIN (
    SELECT uuid AS uuid,
    infant_hospital_number AS infant_hospital_number,
    MAX(visit_date) AS max_created_date_piv
    FROM pmtct_infant_arv
    GROUP BY uuid, infant_hospital_number
    ) AS pia ON p.uuid = pia.uuid
    LEFT JOIN (
    SELECT uuid AS uuid,
    test_type AS test_type,
    age_at_test AS age_at_test,
    date_sample_collected AS date_sample_collected,
    date_sample_sent AS date_sample_sent,
    date_result_received_at_facility AS date_result_received_at_facility,
    date_result_received_by_caregiver AS date_result_received_by_caregiver,
    results AS results,
    MAX(visit_date) AS max_created_date_pip
    FROM pmtct_infant_pcr
    GROUP BY uuid, test_type, age_at_test, date_sample_collected, date_sample_sent, date_result_received_at_facility, date_result_received_by_caregiver, results
    ) AS pip ON p.uuid = pip.uuid
    LEFT JOIN (
    SELECT person_uuid AS person_uuid_anc,
    anc_setting AS anc_setting_anc,
    first_anc_date AS Date_of_Index_ANC_Registration,
    gaweeks AS Gestational_Age_Weeks_at_First_ANC_visit,
    gravida AS gravida,
    parity As parity,
    tested_syphilis AS tested_syphilis_anc,
    test_result_syphilis AS test_result_syphilis_anc,
    partner_information->>'age' AS age,
    partner_information->>'syphillisStatus' AS syphillisStatus,
    partner_information->>'acceptHivTest' AS acceptHivTest,
    partner_information->>'referredTo' AS referredTo,
    partner_information->>'hivStatus' AS hivStatus,
    partner_information->>'dateConfirmedHivTest' AS Mother_dateConfirmedHivTest,
    expected_delivery_date AS expected_delivery_date,
    MAX(created_date) AS max_created_date_anc
    FROM pmtct_anc
    GROUP BY person_uuid, anc_setting, first_anc_date, gaweeks, gravida, parity, tested_syphilis, test_result_syphilis, partner_information,hivStatus,
    Mother_dateConfirmedHivTest, hivstatus, expected_delivery_date
    ) AS anc ON p.uuid = anc.person_uuid_anc
    LEFT JOIN (
    SELECT person_uuid AS person_uuid_mother_visitation,
    ga_of_viral_load AS ga_of_viral_Load,
    date_of_viral_load AS date_of_viral_load,
    MAX(date_of_visit) AS max_created_date_mother_visitation
    FROM pmtct_mother_visitation
    GROUP BY person_uuid, ga_of_viral_load, date_of_viral_load
    ) AS mother_visitation ON p.uuid = mother_visitation.person_uuid_mother_visitation
    LEFT JOIN (
    SELECT person_uuid AS person_uuid_delivery,
    hbstatus AS hbstatus_delivery,
    hcstatus AS hcstatus_delivery,
    date_of_delivery AS date_of_delivery,
    mode_of_delivery AS mode_of_delivery,
    maternal_outcome AS maternal_outcome,
    child_status AS child_status,
    number_of_infants_alive AS number_of_infants_alive,
    number_of_infants_dead AS number_of_infants_dead,
    delivery_time AS delivery_time,
    feeding_decision AS feeding_decision,
    child_given_arv_within72 AS child_given_arv_with72,
    hiv_exposed_infant_given_hb_within24hrs AS hiv_exposed_infant_given_hb_with24hrs,
    place_of_delivery AS place_of_delivery,
    MAX(created_date) AS max_created_date_delivery
    FROM pmtct_delivery
    GROUP BY person_uuid, hbstatus, hcstatus, date_of_delivery, mode_of_delivery, maternal_outcome, child_status, number_of_infants_alive, number_of_infants_dead, delivery_time, feeding_decision, child_given_arv_with72, hiv_exposed_infant_given_hb_with24hrs,
    place_of_delivery
    ) AS delivery ON p.uuid = delivery.person_uuid_delivery
    LEFT JOIN pmtct_delivery panc ON p.uuid = panc.person_uuid AND panc.created_date = delivery.max_created_date_delivery
    LEFT JOIN base_organisation_unit facility ON facility.id=p.facility_id
    LEFT JOIN base_organisation_unit facility_lga ON facility_lga.id=facility.parent_organisation_unit_id
    LEFT JOIN base_organisation_unit facility_state ON facility_state.id=facility_lga.parent_organisation_unit_id
    LEFT JOIN base_organisation_unit res_state ON res_state.id=CAST(r.stateid AS BIGINT)
    LEFT JOIN base_organisation_unit res_lga ON res_lga.id=CAST(r.lgaid AS BIGINT)
    LEFT JOIN base_organisation_unit_identifier boui ON boui.organisation_unit_id=p.facility_id AND boui.name='DATIM_ID'
    INNER JOIN pmtct_enrollment pmtctenroll ON pmtctenroll.person_uuid = p.uuid
    LEFT JOIN base_application_codeset bac ON bac.code = pmtctenroll.art_start_time
    LEFT JOIN base_application_codeset bacc ON bacc.code = anc.anc_setting_anc
    LEFT JOIN base_application_codeset bacEntry ON bacEntry.code = pmtctenroll.entry_point
    LEFT JOIN base_application_codeset bacDelivery ON bacDelivery.code = delivery.place_of_delivery
    LEFT JOIN base_application_codeset bacModeOfDelivery ON bacModeOfDelivery.code = delivery.mode_of_delivery
    LEFT JOIN base_application_codeset bacFeedingOption ON bacFeedingOption.code = delivery.feeding_decision
    LEFT JOIN base_application_codeset bacResult ON bacResult.code = pip.results
    LEFT JOIN base_application_codeset bacChildStatus ON bacChildStatus.code = delivery.child_status
    LEFT JOIN (SELECT * FROM
    (SELECT CAST(ls.date_sample_collected AS DATE ) AS dateOfCurrentViralLoadSample,
    sm.patient_uuid AS person_uuid130 ,
    sm.facility_id AS vlFacility,
    sm.archived AS vlArchived,
    acode.display AS viralLoadIndication,
    sm.result_reported AS currentViralLoad,
    CAST(sm.date_result_reported AS DATE) AS dateOfCurrentViralLoad,
    ROW_NUMBER () OVER (PARTITION BY sm.patient_uuid ORDER BY date_result_reported DESC) AS rank2
    FROM public.laboratory_result  sm
    INNER JOIN public.laboratory_test  lt on sm.test_id = lt.id
    INNER JOIN public.laboratory_sample ls on ls.test_id = lt.id
    INNER JOIN public.base_application_codeset  acode on acode.id =  lt.viral_load_indication
    WHERE lt.lab_test_id = 16
    AND  lt.viral_load_indication !=719
    AND sm. date_result_reported IS NOT NULL
    AND sm.date_result_reported <= CAST(NOW() AS DATE)
    AND sm.result_reported IS NOT NULL
    ) AS vl_result
    WHERE vl_result.rank2 = 1
    AND (vl_result.vlArchived = 0 OR vl_result.vlArchived IS null)
    ) AS VlResult ON p.uuid  =  VlResult.person_uuid130
    LEFT JOIN hiv_enrollment he ON he.person_uuid = p.uuid
    WHERE p.archived=0 and p.sex='Female'
    AND p.facility_id=%d AND p.date_of_registration
    BETWEEN CAST('%s' AS DATE) AND CAST('%s' AS DATE)
    )as infant
  prep-query-name: prep
  prep-query: SELECT prep.datimid AS "Facility Id (Datim)",
    prep.state AS "State", prep.lga AS "LGA", prep.facilityname AS "Facility Name",
    prep.personuuid AS "Patient Identifier", prep.hospitalNumber AS "Hospital Number",
    prep.sex AS "Sex",prep.targetgroup AS "Target Group", prep.age AS "Age", prep.dateofbirth AS "Date Of Birth (yyyy-mm-dd)",
    prep.phone AS "Phone Number", prep.maritalstatus AS "Marital Status",
    prep.residentiallga AS "LGA of Residence", prep.residentialstate AS "State Of Residence",
    prep.education AS "Education", prep.occupation AS "Occupation", prep.familyPlanning as "Family Planning",
    prep.dateOfFamilyPlanning as "Date Of Family Planning (yyyy-mm-dd)",
    prep.dateofregistration AS "Date Of Registration (yyyy-mm-dd)", prep.prepcommencementdate AS "Date Of Commencement (yyyy-mm-dd)",
    prep.baselineregimen AS "Baseline Regimen", prep.prepType AS "Prep Type", prep.prepdistributionsetting AS "Prep Distribution Setting",
    prep.baselinesystolicbp AS "Baseline Systolic bp", prep.baselinediastolicbp AS "Baseline Diastolic bp", prep.baselineweight AS "Baseline Weight (kg)",
    prep.baselineheight AS "Baseline Height (cm)", prep.baseLinecreatinine AS "Baseline Creatinine", prep.baselinehepatitisb AS "Baseline Hepatitis B",
    prep.baselinehepatitisc AS "Baseline Hepatitis C", prep.hivstatusatprepinitiation AS "HIV status at PrEP Initiation",
    prep.baselineurinalysis AS "Baseline Urinalysis", prep.baselineurinalysisdate AS "Baseline Urinalysis Date",
    prep.baseLineAlt AS "Baseline ALT", prep.baseLineHbsag AS "Baseline HBsAG", prep.baseLineHbPcv AS "Baseline HB/PCV", prep.baseLineWbc AS "Baseline WBC",
    prep.indicationforprep AS "Indication for PrEP", prep.currentregimen AS "Current Regimen", prep.duration AS "Drug refill period (duration)", prep.currentPrepType AS "Current Prep Type", prep.currentPrepDistributionSetting AS "Current Prep Distribution Setting", prep.DateOfLastPickup AS "Date Of Last Pickup (yyyy-mm-dd)",
    prep.CurrentStatus AS "Current Status", prep.DateOfCurrentStatus AS "Date Of Current Status (yyyy-mm-dd)", prep.currentSystolicBP AS "Current Systolic bp",
    prep.currentDiastolicBP AS "Current Diastolic bp", prep.currentWeight AS "Current Weight (kg)", prep.currentHeight AS "Current Height (cm)",
    prep.currentHivStatus AS "Current HIV Status", prep.DateOfCurrentHIVStatus AS "Date of Current HIV Status (yyyy-mm-dd)",
    prep.currentUrinalysis AS "Current Urinalysis", prep.currentUrinalysisDate AS "Date of Current Urinalysis",
    prep.currentAltDate AS "Date of Current ALT", prep.currentAlt AS "Current ALT",
    prep.currentHbsagDate AS "Date of Current HBsAG", prep.currentHbsag AS "Current HBsAG",
    prep.currentHbpcvDate AS "Date of Current HB/PCV", prep.currentHbpcv AS "Current HB/PCV",
    prep.currentWbcDate AS "Date of Current WBC", prep.currentWbc AS "Current WBC",
    prep.pregnancyStatus AS "Pregnancy Status", prep.InterruptionType as "PrEP Discontinuation Type", prep.InterruptionReason AS "Reasons for discontinuation/Stopped",
    prep.InterruptionDate AS "Date of Discontinuation/Stopped", prep.hivEnrollmentDate AS "Date Of HIV Enrollment (yyyy-mm-dd)"
    FROM (
    SELECT DISTINCT ON (p.uuid)p.uuid AS PersonUuid, p.id, p.uuid,p.hospital_number as hospitalNumber,
    INITCAP(p.surname) AS surname, INITCAP(p.first_name) as firstName,
    he.date_of_registration AS hivEnrollmentDate,
    EXTRACT(YEAR from AGE(NOW(),  date_of_birth)) as age,
    p.other_name as otherName, p.sex as sex, p.date_of_birth as dateOfBirth,
    p.date_of_registration as dateOfRegistration, p.marital_status->>'display' as maritalStatus,
    education->>'display' as education, p.employment_status->>'display' as occupation,
    facility.name as facilityName, facility_lga.name as lga, facility_state.name as state,
    boui.code as datimId, (SELECT name FROM base_organisation_unit WHERE id = CAST(NULLIF(p.address->'address'->0 ->'stateId' ->> 0,'') AS BIGINT)) as residentialState, (SELECT name FROM base_organisation_unit WHERE id = CAST(CASE WHEN p.address->'address'->0->'district'->>0 ~ '^\\d+$' THEN NULLIF(p.address->'address'->0->'district'->>0, '') ELSE NULL END AS BIGINT)) AS residentialLga,
    r.address as address, (CASE WHEN contact_point->'contactPoint'->0->>'type'='phone' THEN contact_point->'contactPoint'->0->>'value' ELSE null END) AS phone,
    baseline_reg.regimen AS baselineRegimen,
    (select display from base_application_codeset where code = baseline_reg.prep_type) as prepType,
    (select display from base_application_codeset where code = baseline_pc.prep_distribution_setting) AS prepDistributionSetting,
    baseline_bp.systolic AS baselineSystolicBP,
    baseline_bp.diastolic AS baselineDiastolicBP,
    baseline_pc.weight AS baselineWeight,
    baseline_pc.height AS baselineHeight,
    (CASE WHEN tg.display IS NULL THEN null ELSE tg.display END) AS targetGroup,
    baseline_pc.encounter_date AS prepCommencementDate,
    baseline_urinalysis.result AS baseLineUrinalysis,
    baseline_urinalysis.test_date AS baseLineUrinalysisDate,
    baseline_creatinine.other_test_result AS baseLineCreatinine,
    baseline_creatinine.other_test_date AS baseLineCreatinineTestDate,
    baseline_alt.other_test_result AS baseLineAlt,
    baseline_hbsag.other_test_result AS baseLineHbsag,
    baseline_hbpcv.other_test_result AS baseLineHbPcv,
    baseline_wbc.other_test_result AS baseLineWbc,
    current_alt.other_test_result as currentAlt,
    current_alt.other_test_date as currentAltDate,
    current_hbsag.other_test_result as currentHbsag,
    current_hbsag.other_test_date as currentHbsagDate,
    current_hbpcv.other_test_result as currentHbpcv,
    current_hbpcv.other_test_date as currentHbpcvDate,
    current_wbc.other_test_result as currentWbc,
    current_wbc.other_test_date as currentWbcDate,
    (CASE WHEN baseline_pc.hepatitis->>'result' LIKE 'Hepatitis B%'
    THEN baseline_pc.hepatitis->>'result' ELSE NULL END) AS baseLineHepatitisB,
    (CASE WHEN baseline_pc.hepatitis->>'result' LIKE 'Hepatitis C%'
    THEN baseline_pc.hepatitis->>'result' ELSE NULL END) AS baseLineHepatitisC,
    (select display from base_application_codeset where code = current_pi.interruption_type) as InterruptionType,
    current_pi.reason_stopped AS InterruptionReason,
    current_pi.interruption_date AS InterruptionDate,
    (CASE WHEN baseline_hiv_status.display IS NULL AND base_eli_test.base_eli_hiv_result IS NOT NULL
    THEN base_eli_test.base_eli_hiv_result ELSE
    REPLACE(baseline_hiv_status.display, 'HIV ', '') END) AS HIVStatusAtPrEPInitiation,
    (CASE WHEN prepe.extra->'prep'->>'onDemandIndication' IS NOT NULL THEN prepe.extra->>'onDemandIndication'
    WHEN riskt.display IS NOT NULL THEN riskt.display ELSE NULL END) AS indicationForPrEP,
    current_reg.regimen AS currentRegimen,
    current_pc.duration,
    (SELECT display FROM base_application_codeset where code = current_reg.prep_type) as currentPrepType,
    (select display from base_application_codeset where code = current_pc.prep_distribution_setting) AS currentPrepDistributionSetting,
    current_pc.encounter_date AS DateOfLastPickup,
    current_pc.systolic AS currentSystolicBP,
    current_pc.diastolic AS currentDiastolicBP,
    current_pc.weight AS currentWeight,
    current_pc.height AS currentHeight,
    current_pc.urinalysis->>'result' AS currentUrinalysis,
    (SELECT display from base_application_codeset where code = current_pc.family_planning) AS familyPlanning,
    current_pc.date_of_family_planning AS dateOfFamilyPlanning,
    CAST(current_pc.urinalysis->>'testDate' AS DATE) AS currentUrinalysisDate,
    (CASE WHEN current_hiv_status.display IS NULL AND eli_hiv_result IS NOT NULL THEN eli_hiv_result
    WHEN current_hiv_status.display IS NOT NULL THEN REPLACE(current_hiv_status.display, 'HIV ', '')
    WHEN he.date_started IS NOT NULL THEN 'Positive' ELSE NULL
    END) AS currentHivStatus,
    current_pc.encounter_date AS DateOfCurrentHIVStatus,
    (CASE WHEN p.sex='Male' THEN NULL
    WHEN current_pc.pregnant IS NOT NULL AND current_pc.pregnant='true' THEN (SELECT display FROM base_application_codeset WHERE code = current_pc.pregnant)
    ELSE 'Not Pregnant' END) AS pregnancyStatus,
    (CASE
    WHEN prepi.interruption_date  > prepc.encounter_date THEN bac.display
    WHEN prepc.status IS NOT NULL THEN prepc.status
    ELSE NULL END) AS CurrentStatus,
    (CASE
    WHEN prepi.interruption_date  > prepc.encounter_date THEN prepi.interruption_date
    WHEN prepc.status IS NOT NULL THEN prepc.encounter_date
    ELSE NULL END) AS DateOfCurrentStatus
    FROM patient_person p
    INNER JOIN (
    SELECT * FROM (SELECT p.id, REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(CAST(address_object->>'line' AS text), '"', ''), ']', ''), '[', ''), 'null',''), '\\\\\\\', '') AS address,
    CASE WHEN address_object->>'stateId'  ~ '^\\\\d(\\\\.\\\\d)?$' THEN address_object->>'stateId' ELSE null END  AS stateId,
    CASE WHEN address_object->>'district'  ~ '^\\\\d(\\\\.\\\\d)?$' THEN address_object->>'district' ELSE null END  AS lgaId
    FROM patient_person p,
    jsonb_array_elements(p.address-> 'address') with ordinality l(address_object)) as result
    ) r ON r.id=p.id
    LEFT JOIN (SELECT target_group, person_uuid  FROM hts_client) penrol ON penrol.person_uuid=p.uuid
    LEFT JOIN (SELECT MAX(visit_date) max_date, person_uuid,target_group AS eli_target  FROM prep_eligibility
    GROUP BY person_uuid,target_group) e_target ON e_target.person_uuid=p.uuid
    LEFT JOIN (SELECT pe.drug_use_history->>'hivTestResultAtvisit' AS eli_hiv_result, max.visit_date, max.person_uuid FROM prep_eligibility pe
    INNER JOIN (SELECT DISTINCT MAX(visit_date)visit_date, person_uuid FROM prep_eligibility
    GROUP BY person_uuid)max ON max.visit_date=pe.visit_date
    AND max.person_uuid=pe.person_uuid)eli_test ON eli_test.person_uuid=p.uuid
    LEFT JOIN (SELECT pe.drug_use_history->>'hivTestResultAtvisit' AS base_eli_hiv_result, min.visit_date, min.person_uuid
    FROM prep_eligibility pe
    INNER JOIN (SELECT DISTINCT MIN(visit_date)visit_date, person_uuid FROM prep_eligibility
    GROUP BY person_uuid)min ON min.visit_date=pe.visit_date
    AND min.person_uuid=pe.person_uuid)base_eli_test ON base_eli_test.person_uuid=p.uuid
    LEFT JOIN base_organisation_unit facility ON facility.id=facility_id
    LEFT JOIN base_organisation_unit facility_lga ON facility_lga.id=facility.parent_organisation_unit_id
    LEFT JOIN base_organisation_unit facility_state ON facility_state.id=facility_lga.parent_organisation_unit_id
    LEFT JOIN base_organisation_unit res_state ON res_state.id=CAST(r.stateid AS BIGINT)
    LEFT JOIN base_organisation_unit res_lga ON res_lga.id=CAST(r.lgaid AS BIGINT)
    LEFT JOIN base_organisation_unit_identifier boui ON boui.organisation_unit_id=facility_id AND boui.name='DATIM_ID'
    INNER JOIN prep_enrollment prepe ON prepe.person_uuid = p.uuid
    LEFT JOIN base_application_codeset riskt ON riskt.code = prepe.risk_type
    LEFT JOIN base_application_codeset tg ON tg.code = penrol.target_group
    LEFT JOIN base_application_codeset etg ON etg.code = e_target.eli_target
    LEFT JOIN (SELECT DISTINCT pc.* FROM prep_clinic pc
    INNER JOIN (SELECT DISTINCT MAX(encounter_date)encounter_date, person_uuid, duration FROM prep_clinic
    GROUP BY person_uuid, duration)max ON max.encounter_date=pc.encounter_date
    AND max.person_uuid=pc.person_uuid WHERE date_prep_start IS NULL)current_pc ON current_pc.person_uuid=p.uuid
    LEFT JOIN (SELECT DISTINCT pi.* FROM prep_interruption pi)current_pi ON current_pi.person_uuid=p.uuid
    LEFT JOIN prep_regimen current_reg ON current_reg.id = current_pc.regimen_id
    LEFT JOIN base_application_codeset current_hiv_status ON current_hiv_status.code = current_pc.hiv_test_result
    LEFT JOIN (SELECT pc.* FROM prep_clinic pc
    INNER JOIN (SELECT DISTINCT MIN(encounter_date)encounter_date, person_uuid FROM prep_clinic
    GROUP BY person_uuid)min ON min.encounter_date=pc.encounter_date
    AND min.person_uuid=pc.person_uuid WHERE date_prep_start IS NOT NULL)baseline_pc ON baseline_pc.person_uuid=p.uuid
    LEFT JOIN (SELECT
    pc.systolic, pc.diastolic, min.person_uuid FROM prep_clinic pc
    INNER JOIN (SELECT DISTINCT MIN(encounter_date)encounter_date, person_uuid FROM prep_clinic
    GROUP BY person_uuid)min ON min.person_uuid=pc.person_uuid
    WHERE pc.systolic IS NOT NULL and pc.diastolic IS NOT NULL)baseline_bp ON baseline_bp.person_uuid=p.uuid
    LEFT JOIN (SELECT
    pc.urinalysis ->> 'result' as result, pc.urinalysis->>'testDate' as test_date, min.person_uuid
    FROM prep_clinic pc JOIN (SELECT DISTINCT MIN(date(urinalysis->> 'testDate')) test_date, person_uuid
    FROM prep_clinic where urinalysis is not null
    GROUP BY person_uuid)min ON min.person_uuid=pc.person_uuid
    WHERE pc.urinalysis IS NOT NULL)baseline_urinalysis ON baseline_urinalysis.person_uuid=p.uuid
    LEFT JOIN (SELECT
    arr.object->>'result' other_test_result,
    arr.object->>'name' as other_test_name,
    arr.object->>'testDate' as other_test_date, pc.person_uuid FROM prep_clinic pc
    INNER JOIN (SELECT DISTINCT MIN(encounter_date)encounter_date, person_uuid FROM prep_clinic
    GROUP BY person_uuid)min ON min.person_uuid=pc.person_uuid,
    jsonb_array_elements(other_tests_done) with ordinality arr(object, position)
    WHERE pc.other_tests_done is not null and arr.object->>'name' = 'PREP_OTHER_TEST_CREATININE' and arr.object->>'name' = '')baseline_creatinine ON baseline_creatinine.person_uuid=p.uuid
    LEFT JOIN (SELECT
    arr.object->>'result' other_test_result,
    arr.object->>'name' as other_test_name,
    arr.object->>'testDate' as other_test_date, pc.person_uuid FROM prep_clinic pc
    INNER JOIN (SELECT DISTINCT MIN(encounter_date)encounter_date, person_uuid FROM prep_clinic
    GROUP BY person_uuid)min ON min.person_uuid=pc.person_uuid,
    jsonb_array_elements(other_tests_done) with ordinality arr(object, position)
    WHERE pc.other_tests_done is not null and arr.object->>'name' = 'PREP_OTHER_TEST_ALT' and arr.object->>'name' = '')baseline_alt ON baseline_alt.person_uuid=p.uuid
    LEFT JOIN (SELECT
    arr.object->>'result' other_test_result,
    arr.object->>'name' as other_test_name,
    arr.object->>'testDate' as other_test_date, pc.person_uuid FROM prep_clinic pc
    INNER JOIN (SELECT DISTINCT MIN(encounter_date)encounter_date, person_uuid FROM prep_clinic
    GROUP BY person_uuid)min ON min.person_uuid=pc.person_uuid,
    jsonb_array_elements(other_tests_done) with ordinality arr(object, position)
    WHERE pc.other_tests_done is not null and arr.object->>'name' = 'PREP_OTHER_TEST_HBSAG' and arr.object->>'name' = '')baseline_hbsag ON baseline_hbsag.person_uuid=p.uuid
    LEFT JOIN (SELECT
    arr.object->>'result' other_test_result,
    arr.object->>'name' as other_test_name,
    arr.object->>'testDate' as other_test_date, pc.person_uuid FROM prep_clinic pc
    INNER JOIN (SELECT DISTINCT MIN(encounter_date)encounter_date, person_uuid FROM prep_clinic
    GROUP BY person_uuid)min ON min.person_uuid=pc.person_uuid,
    jsonb_array_elements(other_tests_done) with ordinality arr(object, position)
    WHERE pc.other_tests_done is not null and arr.object->>'name' = 'PREP_OTHER_TEST_HB_PCV' and arr.object->>'name' = '')baseline_hbpcv ON baseline_hbpcv.person_uuid=p.uuid
    LEFT JOIN (SELECT
    arr.object->>'result' other_test_result,
    arr.object->>'name' as other_test_name,
    arr.object->>'testDate' as other_test_date, pc.person_uuid FROM prep_clinic pc
    INNER JOIN (SELECT DISTINCT MIN(encounter_date)encounter_date, person_uuid FROM prep_clinic
    GROUP BY person_uuid)min ON min.person_uuid=pc.person_uuid,
    jsonb_array_elements(other_tests_done) with ordinality arr(object, position)
    WHERE pc.other_tests_done is not null and arr.object->>'name' = 'PREP_OTHER_TEST_WBC_+_DIFF' and arr.object->>'name' = '')baseline_wbc ON baseline_wbc.person_uuid=p.uuid
    LEFT JOIN (SELECT
    arr.object->>'result' other_test_result,
    arr.object->>'name' as other_test_name,
    arr.object->>'testDate' as other_test_date, pc.person_uuid FROM prep_clinic pc
    INNER JOIN (SELECT DISTINCT MAX(encounter_date)encounter_date, person_uuid FROM prep_clinic
    GROUP BY person_uuid)max ON max.person_uuid=pc.person_uuid,
    jsonb_array_elements(other_tests_done) with ordinality arr(object, position)
    WHERE pc.other_tests_done is not null and arr.object->>'name' = 'PREP_OTHER_TEST_ALT' and arr.object->>'name' = '')current_alt ON current_alt.person_uuid=p.uuid
    LEFT JOIN (SELECT
    arr.object->>'result' other_test_result,
    arr.object->>'name' as other_test_name,
    arr.object->>'testDate' as other_test_date, pc.person_uuid FROM prep_clinic pc
    INNER JOIN (SELECT DISTINCT MAX(encounter_date)encounter_date, person_uuid FROM prep_clinic
    GROUP BY person_uuid)max ON max.person_uuid=pc.person_uuid,
    jsonb_array_elements(other_tests_done) with ordinality arr(object, position)
    WHERE pc.other_tests_done is not null and arr.object->>'name' = 'PREP_OTHER_TEST_HBSAG' and arr.object->>'name' = '')current_hbsag ON current_hbsag.person_uuid=p.uuid
    LEFT JOIN (SELECT
    arr.object->>'result' other_test_result,
    arr.object->>'name' as other_test_name,
    arr.object->>'testDate' as other_test_date, pc.person_uuid FROM prep_clinic pc
    INNER JOIN (SELECT DISTINCT MAX(encounter_date)encounter_date, person_uuid FROM prep_clinic
    GROUP BY person_uuid)max ON max.person_uuid=pc.person_uuid,
    jsonb_array_elements(other_tests_done) with ordinality arr(object, position)
    WHERE pc.other_tests_done is not null and arr.object->>'name' = 'PREP_OTHER_TEST_HB_PCV' and arr.object->>'name' = '')current_hbpcv ON current_hbpcv.person_uuid=p.uuid
    LEFT JOIN (SELECT
    arr.object->>'result' other_test_result,
    arr.object->>'name' as other_test_name,
    arr.object->>'testDate' as other_test_date, pc.person_uuid FROM prep_clinic pc
    INNER JOIN (SELECT DISTINCT MAX(encounter_date)encounter_date, person_uuid FROM prep_clinic
    GROUP BY person_uuid)max ON max.person_uuid=pc.person_uuid,
    jsonb_array_elements(other_tests_done) with ordinality arr(object, position)
    WHERE pc.other_tests_done is not null and arr.object->>'name' = 'PREP_OTHER_TEST_WBC_+_DIFF' and arr.object->>'name' = '')current_wbc ON current_wbc.person_uuid=p.uuid
    LEFT JOIN prep_regimen baseline_reg ON baseline_reg.id = baseline_pc.regimen_id
    LEFT JOIN base_application_codeset baseline_hiv_status ON baseline_hiv_status.code=baseline_pc.hiv_test_result
    LEFT JOIN hiv_enrollment he ON he.person_uuid = p.uuid
    LEFT JOIN (
    SELECT pi.id, pi.person_uuid, pi.interruption_date , pi.interruption_type
    FROM prep_interruption pi
    INNER JOIN (SELECT DISTINCT pi.person_uuid, MAX(pi.interruption_date)interruption_date
    FROM prep_interruption pi WHERE pi.archived=0
    GROUP BY pi.person_uuid)pit ON pit.interruption_date=pi.interruption_date
    AND pit.person_uuid=pi.person_uuid
    WHERE pi.archived=0
    GROUP BY pi.id, pi.person_uuid, pi.interruption_date, pi.interruption_type )prepi ON prepi.person_uuid=p.uuid
    LEFT JOIN (SELECT pc.person_uuid, MAX(pc.encounter_date) as encounter_date, pc.duration,
    (CASE WHEN (pc.encounter_date  + pc.duration) > CAST (NOW() AS DATE) THEN 'Active'
    ELSE  'Defaulted' END) status FROM prep_clinic pc
    INNER JOIN (SELECT DISTINCT MAX(pc.encounter_date) encounter_date, pc.person_uuid
    FROM prep_clinic pc GROUP BY pc.person_uuid) max_p ON max_p.encounter_date=pc.encounter_date
    AND max_p.person_uuid=pc.person_uuid
    WHERE pc.archived=0
    GROUP BY pc.person_uuid, pc.duration, status)prepc ON prepc.person_uuid=p.uuid
    LEFT JOIN base_application_codeset bac ON bac.code=prepi.interruption_type
    WHERE p.archived=0 AND p.facility_id=?1
    AND p.date_of_registration BETWEEN CAST('?2' AS DATE) AND CAST('?3' AS DATE)
    ) prep
  ahd-query-name: ahd
  ahd-query: WITH careCardCD4 AS (
    SELECT
    visit_date,
    COALESCE(CAST(cd_4 AS VARCHAR), cd4_semi_quantitative) AS cd_4,
    person_uuid AS cccd4_person_uuid
    FROM
    public.hiv_art_clinical
    WHERE
    is_commencement IS TRUE
    AND archived = 0
    AND cd_4 != 0
    ),
    labCD4 AS (
    SELECT * FROM (
    SELECT
    sm.patient_uuid AS cd4_person_uuid,
    sm.result_reported AS cd4Lb,
    sm.date_result_reported AS dateOfCD4Lb,
    ROW_NUMBER() OVER (PARTITION BY sm.patient_uuid ORDER BY date_result_reported DESC) AS rnk
    FROM
    public.laboratory_result sm
    INNER JOIN
    public.laboratory_test lt ON sm.test_id = lt.id
    WHERE
    lt.lab_test_id IN (1, 50)
    AND sm.date_result_reported IS NOT NULL
    AND sm.archived = 0
    ) AS cd4_result
    WHERE
    cd4_result.rnk = 1
    ),
    sample_collection_date AS (
    SELECT
    CAST(sample.date_sample_collected AS DATE) AS DateOfViralLoadSampleCollection,
    sample.patient_uuid AS person_uuid120
    FROM (
    SELECT
    
    sm.facility_id,
    sm.date_sample_collected,
    sm.patient_uuid,
    sm.archived,
    ROW_NUMBER() OVER (PARTITION BY sm.patient_uuid ORDER BY date_sample_collected DESC) AS rnkk
    FROM
    public.laboratory_sample sm
    INNER JOIN
    public.laboratory_test lt ON lt.id = sm.test_id
    WHERE
    lt.lab_test_id = 16
    AND lt.viral_load_indication != 719
    AND date_sample_collected IS NOT NULL
    AND date_sample_collected <= CURRENT_DATE
    ) AS sample
    WHERE
    sample.rnkk = 1
    AND (sample.archived IS NULL OR sample.archived = 0)
    AND sample.facility_id = ?1
    ),
    current_vl_result AS (
    SELECT * FROM (
    SELECT
    CAST(ls.date_sample_collected AS DATE) AS dateOfCurrentViralLoadSample,
    sm.patient_uuid AS person_uuid130,
    sm.result_reported AS currentViralLoad,
    acode.display AS viralLoadIndication,
    CAST(sm.date_result_reported AS DATE) AS dateOfCurrentViralLoad,
    ROW_NUMBER() OVER (PARTITION BY sm.patient_uuid ORDER BY date_result_reported DESC) AS rank2
    FROM
    public.laboratory_result sm
    INNER JOIN
    public.laboratory_test lt ON sm.test_id = lt.id
    INNER JOIN
    public.laboratory_sample ls ON ls.test_id = lt.id
    INNER JOIN
    public.base_application_codeset acode ON acode.id = lt.viral_load_indication
    WHERE
    lt.lab_test_id = 16
    AND lt.viral_load_indication != 719
    AND sm.date_result_reported IS NOT NULL
    AND sm.date_result_reported <= CURRENT_DATE
    AND sm.result_reported IS NOT NULL
    ) AS vl_result
    WHERE
    vl_result.rank2 = 1
    ),
    last_cd4 AS (
    SELECT
    p.uuid AS person_uuid,
    COALESCE(
    cd.cd4Lb,
    ccd.cd_4
    ) AS lastCd4Count,
    COALESCE(
    CAST(cd.dateOfCD4Lb AS DATE),
    CAST(ccd.visit_date AS DATE)
    ) AS dateOfLastCd4Count
    FROM
    patient_person p
    LEFT JOIN
    labCD4 cd ON cd.cd4_person_uuid = p.uuid
    LEFT JOIN
    careCardCD4 ccd ON ccd.cccd4_person_uuid = p.uuid
    ),
    ahd AS (
    SELECT DISTINCT ON (p.uuid)
    p.uuid AS PersonUuid,
    p.id,
    p.hospital_number AS hospitalNumber,
    INITCAP(p.surname) AS surname,
    INITCAP(p.first_name) AS firstName,
    COALESCE(he.date_of_registration, he.date_started) AS hivEnrollmentDate,
    EXTRACT(YEAR FROM AGE(NOW(), p.date_of_birth)) AS age,
    p.other_name AS otherName,
    p.sex AS sex,
    p.date_of_birth AS dateOfBirth,
    p.date_of_registration AS dateOfRegistration,
    p.marital_status->>'display' AS maritalStatus,
    education->>'display' AS education,
    p.employment_status->>'display' AS occupation,
    facility.name AS facilityName,
    facility_lga.name AS lga,
    facility_state.name AS state,
    boui.code AS datimId,
    testType.date_of_tb_diagnostic_result_received,
    testType.tb_diagnostic_test_type,
    testType.tb_diagnostic_result,
    lastVisit.visit_date,
    lastVisit.staging,
    weight.body_weight,
    (CASE
    WHEN currentStatus.hiv_status ILIKE '%DEATH%' THEN 'DEATH'
    WHEN currentStatus.hiv_status ILIKE '%out%' THEN 'TRANSFER OUT'
    WHEN currentStatus.hiv_status ILIKE '%Died%' THEN 'DEATH'
    WHEN currentStatus.hiv_status ILIKE '%START%' THEN 'ACTIVE'
    WHEN currentStatus.hiv_status ILIKE '%RESTART%' THEN 'ACTIVE RESTART'
    WHEN currentStatus.hiv_status ILIKE '%IIT%' THEN 'IIT'
    WHEN currentStatus.hiv_status ILIKE '%NON_ART%' THEN 'NON ART'
    WHEN currentStatus.hiv_status ILIKE '%invalid%' THEN 'INVALID'
    ELSE currentStatus.hiv_status
    END) AS current_status,
    currentStatus.status_date AS current_status_date,
    he.date_of_registration AS Date_of_HIV_diagnosis
    FROM
    patient_person p
    LEFT JOIN
    base_organisation_unit facility ON facility.id = p.facility_id
    LEFT JOIN
    base_organisation_unit facility_lga ON facility_lga.id = facility.parent_organisation_unit_id
    LEFT JOIN
    base_organisation_unit facility_state ON facility_state.id = facility_lga.parent_organisation_unit_id
    LEFT JOIN
    base_organisation_unit_identifier boui ON boui.organisation_unit_id = p.facility_id AND boui.name = 'DATIM_ID'
    LEFT JOIN
    hiv_enrollment he ON he.person_uuid = p.uuid
    LEFT JOIN (
    WITH cur_tb AS (
    SELECT
    sm.patient_uuid,
    sm.result_reported AS tb_diagnostic_result,
    CAST(sm.date_result_reported AS DATE) AS date_of_tb_diagnostic_result_received,
    CASE lt.lab_test_id
    WHEN 65 THEN 'Gene Xpert'
    WHEN 51 THEN 'TB-LAM'
    WHEN 66 THEN 'Chest X-ray'
    WHEN 64 THEN 'AFB microscopy'
    WHEN 67 THEN 'Gene Xpert'
    WHEN 58 THEN 'TB-LAM'
    WHEN 50 THEN 'Visitect CD4'
    WHEN 71 THEN 'LF-LAM'
    WHEN 52 THEN 'Cryptococcal Antigen'
    WHEN 69 THEN 'Serum crAg'
    WHEN 70 THEN 'CSF crAg'
    END AS tb_diagnostic_test_type,
    ROW_NUMBER() OVER (PARTITION BY sm.patient_uuid ORDER BY sm.date_result_reported DESC) AS rnk
    FROM
    laboratory_result sm
    INNER JOIN
    public.laboratory_test lt ON sm.test_id = lt.id
    WHERE
    lt.lab_test_id IN (65, 51, 66, 64)
    AND sm.archived = 0
    AND sm.date_result_reported IS NOT NULL
    AND sm.facility_id = ?1
    AND sm.date_result_reported <= cast ('?3' AS date)
    )
    SELECT
    patient_uuid,
    tb_diagnostic_result,
    date_of_tb_diagnostic_result_received,
    tb_diagnostic_test_type
    FROM
    cur_tb
    WHERE
    rnk = 1
    ) testType ON testType.patient_uuid = p.uuid
    LEFT JOIN (
    SELECT
    person_uuid,
    visit_date,
    bac.display AS staging,
    ROW_NUMBER() OVER (PARTITION BY person_uuid ORDER BY visit_date DESC) AS rnk
    FROM
    hiv_art_clinical hac
    LEFT JOIN
    base_application_codeset bac ON bac.id = hac.clinical_stage_id
    WHERE
    hac.visit_date BETWEEN CAST('?2' AS DATE) AND CAST('?3' AS DATE)
    ) lastVisit ON lastVisit.person_uuid = p.uuid AND lastVisit.rnk = 1
    LEFT JOIN (
    SELECT
    person_uuid,
    body_weight,
    capture_date,
    ROW_NUMBER() OVER (PARTITION BY person_uuid ORDER BY capture_date DESC) AS rnk
    FROM
    triage_vital_sign
    WHERE
    archived = 0
    AND capture_date BETWEEN CAST('?2' AS DATE) AND CAST('?3' AS DATE)
    ) weight ON weight.person_uuid = p.uuid AND weight.rnk = 1
    LEFT JOIN (
    SELECT
    person_id,
    hiv_status,
    status_date,
    ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY status_date DESC) AS rnk
    FROM
    hiv_status_tracker
    WHERE
    hiv_status IS NOT NULL
    AND hiv_status != ''
    AND hiv_status != 'HIV_NEGATIVE'
    ) currentStatus ON currentStatus.person_id = p.uuid AND currentStatus.rnk = 1
    WHERE
    p.archived = 0
    AND currentStatus.hiv_status IS NOT NULL
    AND currentStatus.hiv_status != ''
    AND currentStatus.hiv_status != 'HIV_NEGATIVE'
    AND p.facility_id = ?1
    AND p.date_of_registration BETWEEN CAST('?2' AS DATE) AND CAST('?3' AS DATE)
    ),
    lastCrytococalAntigen AS (
    SELECT
    personuuid12,
    date_result_reported AS dateOfLastCrytococalAntigen,
    result_reported AS lastCrytococalAntigen
    FROM (
    SELECT
    DISTINCT ON (lr.patient_uuid)
    lr.patient_uuid AS personuuid12,
    lr.date_result_reported,
    lr.result_reported,
    ROW_NUMBER() OVER (PARTITION BY lr.patient_uuid ORDER BY lr.date_result_reported DESC) AS rowNum
    FROM
    public.laboratory_test lt
    INNER JOIN
    laboratory_result lr ON lr.test_id = lt.id
    WHERE
    lab_test_id = 52
    ) AS dt
    WHERE
    rowNum = 1
    ),
    lastSerumCrAg AS (
    SELECT
    person_uuid,
    date_result_reported AS dateOfLastSerumCrAg,
    result_reported AS lastSerumCrAg
    FROM (
    SELECT
    DISTINCT ON (lr.patient_uuid)
    lr.patient_uuid AS person_uuid,
    lr.date_result_reported,
    lr.result_reported,
    ROW_NUMBER() OVER (PARTITION BY lr.patient_uuid ORDER BY lr.date_result_reported DESC) AS rowNum
    FROM
    public.laboratory_test lt
    INNER JOIN
    laboratory_result lr ON lr.test_id = lt.id
    WHERE
    lab_test_id = 69
    ) AS dt
    WHERE
    rowNum = 1
    ),
    lastCSFCrAg AS (
    SELECT
    person_uuid,
    date_result_reported AS dateOfLastCSFCrAg,
    result_reported AS lastCSFCrAg
    FROM (
    SELECT
    DISTINCT ON (lr.patient_uuid)
    lr.patient_uuid AS person_uuid,
    lr.date_result_reported,
    lr.result_reported,
    ROW_NUMBER() OVER (PARTITION BY lr.patient_uuid ORDER BY lr.date_result_reported DESC) AS rowNum
    FROM
    public.laboratory_test lt
    INNER JOIN
    laboratory_result lr ON lr.test_id = lt.id
    WHERE
    lab_test_id = 70
    ) AS dt
    WHERE
    rowNum = 1
    )
    
    SELECT
    ahd.state AS "State",
    ahd.lga AS "LGA",
    ahd.facilityName AS "Facility Name",
    ahd.datimId AS "Facility Id (Datim)",
    ahd.PersonUuid AS "Patient Identifier",
    ahd.hospitalNumber AS "Hospital Number",
    ahd.sex AS "Sex",
    ahd.dateOfBirth AS "Date Of Birth (yyyy-mm-dd)",
    ahd.age AS "Age",
    ahd.body_weight AS "Current Weight",
    ahd.Date_of_HIV_diagnosis AS "Date of HIV diagnosis",
    ahd.hivEnrollmentDate AS "ART start date",
    ahd.current_status AS "Current Status",
    ahd.current_status_date AS "Current Status Date",
    vl_result.currentViralLoad AS "Current Viral Load",
    vl_result.dateOfCurrentViralLoad AS "Date of Current Viral Load Result",
    CASE
    WHEN
    (
    ahd.age < 15
    OR (last_cd4.lastCd4Count ~ '^\d+$' AND CAST(last_cd4.lastCd4Count AS INT) < 200)
    OR ahd.staging IN ('Stage III', 'Stage IV')
    )
    AND (CURRENT_DATE - ahd.hivEnrollmentDate <= 91) THEN 'Newly Diagnosed Client'
    WHEN
    (CURRENT_DATE - ahd.hivEnrollmentDate > 91)
    AND ahd.age < 15 THEN 'Re-Diagnosed Client'
    WHEN
    (CURRENT_DATE - ahd.hivEnrollmentDate > 91)
    AND ahd.age > 15
    AND (
    (last_cd4.lastCd4Count ~ '^\d+$' AND CAST(last_cd4.lastCd4Count AS INT) < 200 AND ahd.visit_date=last_cd4.dateOfLastCd4Count)
    OR ahd.staging IN ('Stage III', 'Stage IV')
    ) THEN 'Restarted on ART after Interruption'
    WHEN
    ahd.current_status = 'ACTIVE RESTART' THEN 'Restarted on ART after Interruption'
    WHEN
    vl_result.currentViralLoad ~ '^\d+$'
    AND CAST(vl_result.currentViralLoad AS INT) >= 1000 THEN 'Unsuppressed client post EAC'
    ELSE ''
    END AS "Category",
    ahd.visit_date AS "Date of last visit",
    ahd.tb_diagnostic_test_type AS "Test Type",
    ahd.tb_diagnostic_result AS "Test Result",
    ahd.date_of_tb_diagnostic_result_received AS "Date Test Done",
    ahd.staging AS "WHO Staging",
    last_cd4.lastCd4Count AS "Last CD4 Count",
    last_cd4.dateOfLastCd4Count AS "Date of Last CD4 Count",
    lastCrytococalAntigen.lastCrytococalAntigen AS "Crytococal Antigen",
    lastCrytococalAntigen.dateOfLastCrytococalAntigen AS "Date of Crytococal Antigen",
    lastSerumCrAg.lastSerumCrAg AS "Serum crAg",
    lastSerumCrAg.dateOfLastSerumCrAg AS "Date of Serum crAg",
    lastCSFCrAg.lastCSFCrAg AS "CSF crAg",
    lastCSFCrAg.dateOfLastCSFCrAg AS "Date of CSF crAg",
    vl_result.viralLoadIndication AS "Viral Load Indication"
    FROM
    ahd
    LEFT JOIN
    current_vl_result vl_result ON ahd.PersonUuid = vl_result.person_uuid130
    LEFT JOIN
    last_cd4 ON last_cd4.person_uuid = ahd.PersonUuid
    LEFT JOIN
    lastCrytococalAntigen ON lastCrytococalAntigen.personuuid12 = ahd.PersonUuid
    LEFT JOIN
    lastSerumCrAg ON lastSerumCrAg.person_uuid = ahd.PersonUuid
    LEFT JOIN
    lastCSFCrAg ON lastCSFCrAg.person_uuid = ahd.PersonUuid
    WHERE
    CASE
    WHEN
    (
    ahd.age < 15
    OR (last_cd4.lastCd4Count ~ '^\d+$' AND CAST(last_cd4.lastCd4Count AS INT) < 200)
    OR ahd.staging IN ('Stage III', 'Stage IV')
    )
    AND (CURRENT_DATE - ahd.hivEnrollmentDate <= 91) THEN 'Newly Diagnosed Client'
    WHEN
    (CURRENT_DATE - ahd.hivEnrollmentDate > 91)
    AND ahd.age < 15 THEN 'Re-Diagnosed Client'
    WHEN
    (CURRENT_DATE - ahd.hivEnrollmentDate > 91)
    AND ahd.age > 15
    AND (
    (last_cd4.lastCd4Count ~ '^\d+$' AND CAST(last_cd4.lastCd4Count AS INT) < 200 AND ahd.visit_date=last_cd4.dateOfLastCd4Count)
    OR ahd.staging IN ('Stage III', 'Stage IV')
    ) THEN 'Restarted on ART after Interruption'
    WHEN
    ahd.current_status = 'ACTIVE RESTART' THEN 'Restarted on ART after Interruption'
    WHEN
    vl_result.currentViralLoad ~ '^\d+$'
    AND CAST(vl_result.currentViralLoad AS INT) >= 1000 THEN 'Unsuppressed client post EAC'
    ELSE ''
    END != ''

  longitudinal-prep-query-name: longitudinal
  longitudinal-prep-query: SELECT longitudinal.facility_id AS "Facility Id", longitudinal.facilityname AS "Facility Name", longitudinal.datimid AS "DATIM Id",
    longitudinal.personuuid AS "Patient Identifier", longitudinal.hospitalNumber AS "Hospital Number",
    longitudinal.sex AS "Sex",longitudinal.targetgroup AS "Target Group",longitudinal.age AS "Age", longitudinal.dateofbirth AS "Date Of Birth (yyyy-mm-dd)",
    longitudinal.maritalstatus AS "Marital Status", longitudinal.pregnancyStatus AS "Pregnancy Status",
    longitudinal.state AS "State", longitudinal.lga AS "LGA",
    longitudinal.residentiallga AS "LGA of Residence", longitudinal.residentialstate AS "State Of Residence",
    longitudinal.education AS "Education", longitudinal.occupation AS "Occupation", longitudinal.clientWeight AS "Weight", longitudinal.clientHeight AS "Height",
    longitudinal.pulse AS "Pulse", longitudinal.temperature AS "Temperature", longitudinal.respiratory_rate AS "Respiratory Rate",
    longitudinal.systolicBP AS "Systolic BP", longitudinal.diastolicBP AS "diastolic BP",  longitudinal.datePrepGiven AS "Date Prep Given",
    longitudinal.prepType AS "PrEP Type", longitudinal.regimenName AS "PrEP Regimen", longitudinal.regimenDuration AS "Regimen Duration", longitudinal.otherDrugs AS "Other Drugs",
    longitudinal.adherenceLevel AS "Adherence Level", longitudinal.nextAppointment AS "Next Appointment", longitudinal.risk_reduction_services AS "Risk Reduction Services",
    longitudinal.notedSideEffects AS "Noted Side Effects", longitudinal.hepatitisTestDate AS "Date of Hepatitis Test", longitudinal.hepatitisResult AS "Hepatitis Result",
    longitudinal.syphilisTestDate AS "Date ot Syphilis Test", longitudinal.syphilisResult AS "Syphilis Result", longitudinal.datePrepCom AS "Date of PrEP commencement", longitudinal.hivTestResult AS "HIV Test Result",
    longitudinal.dateSti AS "Date of Syndromic STI", longitudinal.syndromicStiScreening AS "Syndromic STI Screening", longitudinal.altTestDate AS "Date of  ALT",  longitudinal.altTestResult AS "ALT Result",
    longitudinal.hbsAgTestDate AS "Date of  HBsAG", longitudinal.hbsAgResult AS "HBsAG Result", longitudinal.hbpcvTestDate AS "Date of  HB/PCV", longitudinal.hbpcvResult AS "HB/PCV Result",
    longitudinal.wbcTestDate AS "Date of  WBC", longitudinal.wbcResult AS "WBC Result", longitudinal.currentUrinalysis AS "Current Urinalysis", longitudinal.currentUrinalysisDate AS "Date of Current Urinalysis", longitudinal.interruptionType AS "PrEP Discontinuation Type", longitudinal.reasonStopped AS "Reasons for discontinuation/Stopped",
    longitudinal.interruptionDate AS "Date of Discontinuation/stopped", longitudinal.hivEnrollmentDate AS "Date Of HIV Enrollment (yyyy-mm-dd)", longitudinal.otherTestResult AS "Other Tests Done", longitudinal.otherTestDate AS "Date of Other test Done", longitudinal.status AS "Status"
    FROM (
    SELECT DISTINCT ON (clinic.uuid) p.uuid AS PersonUuid, p.id, p.uuid,p.hospital_number as hospitalNumber,
    INITCAP(p.surname) AS surname, INITCAP(p.first_name) as firstName,
    he.date_of_registration AS hivEnrollmentDate,p.facility_id,
    EXTRACT(YEAR from AGE(NOW(),  date_of_birth)) as age,
    p.other_name as otherName, p.sex as sex, p.date_of_birth as dateOfBirth,
    p.date_of_registration as dateOfRegistration, p.marital_status->>'display' as maritalStatus,
    education->>'display' as education, p.employment_status->>'display' as occupation,
    facility.name as facilityName, facility_lga.name as lga, facility_state.name as state,
    boui.code as datimId,
    (SELECT name FROM base_organisation_unit WHERE id = CAST(NULLIF(p.address->'address'->0 ->'stateId' ->> 0,'') AS BIGINT)) as residentialState,
    (SELECT name FROM base_organisation_unit WHERE id = CAST(CASE WHEN p.address->'address'->0->'district'->>0 ~ '^\\d+$' THEN NULLIF(p.address->'address'->0->'district'->>0, '') ELSE NULL END AS BIGINT)) AS residentialLga,
    r.address as address, (CASE WHEN contact_point->'contactPoint'->0->>'type'='phone' THEN contact_point->'contactPoint'->0->>'value' ELSE null END) AS phone,
    clinic.uuid, clinic.encounter_date,
    (SELECT display FROM base_application_codeset where code = baseline_reg.prep_type) AS prepType,
    (select display from base_application_codeset where code = clinic.prep_distribution_setting) AS currentPrepDistributionSetting,
    CAST(clinic.encounter_date AS TEXT) AS DateOfLastPickup,
    clinic.systolic AS systolicBP,
    clinic.diastolic AS diastolicBP,
    clinic.weight AS clientWeight,
    clinic.height AS clientHeight,
    clinic.urinalysis->>'result' AS currentUrinalysis,
    CAST(clinic.urinalysis->>'testDate' AS text) AS currentUrinalysisDate,
    clinic.encounter_date AS DateOfCurrentHIVStatus, (SELECT display FROM base_application_codeset WHERE code = clinic.hiv_test_result) AS hivTestResult, COALESCE(prepe.date_started, date_enrolled) AS datePrepCom,
    (CASE WHEN p.sex='Male' THEN NULL
    WHEN clinic.pregnant IS NOT NULL AND clinic.pregnant='true' THEN (SELECT display FROM base_application_codeset WHERE code = clinic.pregnant)
    ELSE 'Not Pregnant' END) AS pregnancyStatus,
    CAST(clinic.next_appointment AS TEXT) AS nextAppointment,
    (CASE WHEN tg.display IS NULL THEN null ELSE tg.display END) AS targetGroup,
    clinic.pulse AS pulse, clinic.respiratory_rate, clinic.temperature, baseline_reg.regimen AS regimenName, CAST(clinic.duration AS TEXT) AS regimenDuration, (CASE WHEN (clinic.encounter_date  + clinic.duration) > CAST (NOW() AS DATE) THEN 'Active' ELSE  'Defaulted' END) status,
    (SELECT display FROM base_application_codeset where code = clinic.adherence_level) AS adherenceLevel, CAST(COALESCE(clinic.date_prep_given, clinic.encounter_date) AS TEXT) AS datePrepGiven, clinic.risk_reduction_services,
    (SELECT display FROM base_application_codeset where code = clinic.noted_side_effects) AS notedSideEffects,
    clinic.syphilis->>'testDate' AS syphilisTestDate, clinic.syphilis->>'result' AS syphilisResult,
    clinic.other_drugs AS otherDrugs, clinic.archived,
    altTest.other_test_result AS altTestResult, altTest.other_test_date AS altTestDate, hbsAg.other_test_result AS hbsAgResult, hbsAg.other_test_date AS hbsAgTestDate, hbpcv.other_test_result AS hbpcvResult, hbpcv.other_test_date AS hbpcvTestDate,
    wbc.other_test_result AS wbcResult, wbc.other_test_date AS wbcTestDate, CAST(otherTest.other_test_name AS TEXT) AS otherTestResult, otherTest.other_test_date AS otherTestDate,
    CASE WHEN clinic.syndromic_sti_screening IS NOT NULL THEN CAST(clinic.encounter_date AS TEXT) ELSE NULL END AS dateSti,
    (SELECT display FROM base_application_codeset where id = CAST(clinic.syndromic_sti_screening AS BIGINT)) AS syndromicStiScreening,
    clinic.hepatitis->>'testDate' AS hepatitisTestDate,
    (CASE WHEN clinic.hepatitis->>'testDate' IS NOT NULL THEN clinic.hepatitis->>'result' ELSE NULL END) AS hepatitisResult,
    (SELECT display FROM base_application_codeset where code = pi.interruption_type) AS interruptionType, CAST(pi.interruption_date AS TEXT) AS interruptionDate, pi.reason_stopped AS reasonStopped
    FROM patient_person p
    INNER JOIN (
    SELECT * FROM (SELECT p.id, REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(CAST(address_object->>'line' AS text), '"', ''), ']', ''), '[', ''), 'null',''), '\\\\\\\', '') AS address,
    CASE WHEN address_object->>'stateId'  ~ '^\\\\d(\\\\.\\\\d)?$' THEN address_object->>'stateId' ELSE null END  AS stateId,
    CASE WHEN address_object->>'district'  ~ '^\\\\d(\\\\.\\\\d)?$' THEN address_object->>'district' ELSE null END  AS lgaId
    FROM patient_person p,
    jsonb_array_elements(p.address-> 'address') with ordinality l(address_object)) as resultAh
    ) r ON r.id=p.id
    LEFT JOIN base_organisation_unit facility ON facility.id=facility_id
    LEFT JOIN base_organisation_unit facility_lga ON facility_lga.id=facility.parent_organisation_unit_id
    LEFT JOIN base_organisation_unit facility_state ON facility_state.id=facility_lga.parent_organisation_unit_id
    LEFT JOIN base_organisation_unit res_state ON res_state.id=CAST(r.stateid AS BIGINT)
    LEFT JOIN base_organisation_unit res_lga ON res_lga.id=CAST(r.lgaid AS BIGINT)
    LEFT JOIN base_organisation_unit_identifier boui ON boui.organisation_unit_id=facility_id AND boui.name='DATIM_ID'
    LEFT JOIN hiv_enrollment he ON he.person_uuid = p.uuid AND he.archived = 0
    INNER JOIN prep_enrollment prepe ON prepe.person_uuid = p.uuid
    LEFT JOIN base_application_codeset riskt ON riskt.code = prepe.risk_type
    LEFT JOIN (SELECT target_group, person_uuid  FROM hts_client) penrol ON penrol.person_uuid=p.uuid
    LEFT JOIN base_application_codeset tg ON tg.code = penrol.target_group
    LEFT JOIN (
    SELECT *,
    row_number () over (partition by person_uuid order by encounter_date desc) as rnk
    FROM prep_clinic pc
    where pc.archived = 0
    ) clinic ON clinic.person_uuid = p.uuid
    LEFT JOIN (
    SELECT
    arr.object->>'result' AS other_test_result, arr.object->>'name' AS other_test_name, arr.object->>'testDate' AS other_test_date, person_uuid, uuid
    FROM
    prep_clinic pc
    CROSS JOIN LATERAL
    jsonb_array_elements(other_tests_done) WITH ORDINALITY arr(object, position)
    WHERE other_tests_done is not null and arr.object->>'name' = 'PREP_OTHER_TEST_ALT'
    ) altTest ON altTest.uuid = clinic.uuid
    LEFT JOIN (
    SELECT
    arr.object->>'result' AS other_test_result, arr.object->>'name' AS other_test_name, arr.object->>'testDate' AS other_test_date, person_uuid, uuid
    FROM
    prep_clinic pc
    CROSS JOIN LATERAL
    jsonb_array_elements(other_tests_done) WITH ORDINALITY arr(object, position)
    WHERE other_tests_done is not null and arr.object->>'name' = 'PREP_OTHER_TEST_HBSAG'
    ) hbsAg ON hbsAg.uuid = clinic.uuid
    LEFT JOIN (
    SELECT
    arr.object->>'result' AS other_test_result, arr.object->>'name' AS other_test_name, arr.object->>'testDate' AS other_test_date, person_uuid, uuid
    FROM
    prep_clinic pc
    CROSS JOIN LATERAL
    jsonb_array_elements(other_tests_done) WITH ORDINALITY arr(object, position)
    WHERE other_tests_done is not null and arr.object->>'name' = 'PREP_OTHER_TEST_HB_PCV'
    ) hbpcv ON hbpcv.uuid = clinic.uuid
    LEFT JOIN (
    SELECT
    arr.object->>'result' AS other_test_result, arr.object->>'name' AS other_test_name, arr.object->>'testDate' AS other_test_date, person_uuid, uuid
    FROM
    prep_clinic pc
    CROSS JOIN LATERAL
    jsonb_array_elements(other_tests_done) WITH ORDINALITY arr(object, position)
    WHERE other_tests_done is not null and arr.object->>'name' = 'PREP_OTHER_TEST_WBC_+_DIFF'
    ) wbc ON wbc.uuid =clinic.uuid
    LEFT JOIN (
    SELECT STRING_AGG(arr.object->>'result', ', ') AS other_test_result, STRING_AGG((SELECT display FROM base_application_codeset WHERE code = arr.object->>'name'), ', ') AS other_test_name,
    arr.object->>'testDate' AS other_test_date, pc.person_uuid, pc.uuid FROM prep_clinic pc CROSS JOIN LATERAL jsonb_array_elements(other_tests_done) WITH ORDINALITY arr(object, position) WHERE other_tests_done IS NOT NULL AND arr.object->>'name' NOT IN ('PREP_OTHER_TEST_WBC_+_DIFF', 'PREP_OTHER_TEST_HB_PCV', 'PREP_OTHER_TEST_HBSAG', 'PREP_OTHER_TEST_ALT') GROUP BY pc.person_uuid, pc.uuid, arr.object->>'testDate'
    ) otherTest ON otherTest.uuid =clinic.uuid
    LEFT JOIN prep_interruption pi ON pi.person_uuid = p.uuid
    LEFT JOIN prep_regimen baseline_reg ON baseline_reg.id = clinic.regimen_id
    WHERE p.archived = 0 AND clinic.uuid <> '' AND p.facility_id=?1
    AND clinic.encounter_date BETWEEN CAST('?2' AS DATE) AND CAST('?3' AS DATE)
    ) longitudinal
  mhpss-query-name: mhpss
  mhpss-query: SELECT mhpss.facilityName AS "Facility",	mhpss.entryPoint AS "Entry Point",	mhpss.patientId AS "Patient ID", mhpss.screenDate AS "Screen Date (yyyy-MM-dd)",	mhpss.sex AS "Sex",	mhpss.age AS "Age",	mhpss.targetGroup AS "Target Group", mhpss.currTreat AS "Current Treatment Status",
    mhpss.hivStatus AS "HIV Status", mhpss.phyCo AS "Signs Of Pyschosocio Distress",	mhpss.domainScreen AS "Domain Screened Positive",	mhpss.atRisk AS "At Risk to Self or Others", mhpss.screenedBy AS "Screened By",	mhpss.provFirst AS "Provided first line Intervention",	mhpss.intProvided AS "Intervention provided",
    mhpss.confirmEncounterDate AS "Date provided with first line care",	mhpss.referal AS "Referrals",	mhpss.referTo AS "Referred to (name of hospital, unit, or position)",	mhpss.mentalHealth AS "Mental Health Assessment Start Date (yyyy-MM-dd)",	mhpss.riskConfirmed AS "Risk Confirmed",
    mhpss.confirmOutcome AS "Confirmation Outcome",	mhpss.audit_c AS "AUDIT-C",	mhpss.dast_10 AS "DAST-10", mhpss.gad_7 AS "GAD-7", mhpss.pcl_5 AS "PCL-5", mhpss.phq_9 AS "PHQ-9", mhpss.confirmed_by AS	"Confirmed By", mhpss.interventions_rendered AS	"Interventions prescribed",
    mhpss.session_modality AS "Session Modality",	mhpss.firstSessionDate AS "First Session date",	mhpss.noSession AS "Number of Sessions",	mhpss.laSessionDate AS "Last Session date",	mhpss.current_level_of_insight AS "Current Level Of Insight",	mhpss.nextAppt AS "Next Appointment",	mhpss.compIntDate AS "Completed intervention (date)",	mhpss.referrals AS "Referrals",	mhpss.refFacility AS "referral facility"
    FROM (
    SELECT facility.name as facilityName, p.facility_id, p.uuid AS PersonUuid, p.id, p.uuid,p.hospital_number as hospitalNumber,
    coalesce(he.date_of_registration, he.date_started) AS hivEnrollmentDate,
    EXTRACT(YEAR from AGE(NOW(),  date_of_birth)) as age, (select display from base_application_codeset where id = he.entry_point_id) AS entryPoint,
    he.entry_point_id AS entryPoint1, COALESCE(p.hospital_number, hts.client_code, PrEP.unique_id) AS patientId, mhpssScreening.encounter_date AS encounterDate,
    INITCAP(p.sex) AS sex, COALESCE((select display from base_application_codeset where id = he.target_group_id),
    (select display from base_application_codeset where code = prEP.target_group),(select display from base_application_codeset where code = hts.target_group), '') targetGroup,
    COALESCE(hts.hiv_test_result, (select display from base_application_codeset where code = prEP.status), 'Positive') AS hivStatus,
    CAST(ms.risks_confirmed->>0 AS VARCHAR) AS atRisk, mhpssScreening.screened_by AS screenedBy, ms.encounter_date AS confirmEncounterDate,
    ms.confirmation_outcome AS confirmOutcome, ms.audit_c, ms.dast_10, ms.gad_7, ms.pcl_5, ms.phq_9, ms.confirmed_by, CAST (ms.interventions_rendered->>0 AS VARCHAR) AS interventions_rendered,
    ms.session_modality, ms.current_level_of_insight, '' AS screenDate, ''  AS currTreat, '' AS phyCo, '' domainScreen, '' AS provFirst, '' AS intProvided, '' AS referal, '' AS referTo, '' AS mentalHealth, '' AS riskConfirmed, '' AS firstSession, '' AS firstSessionDate, '' AS noSession, '' AS laSessionDate, '' AS nextAppt, '' AS compIntDate, '' AS referrals, '' AS refFacility, ROW_NUMBER() OVER (PARTITION BY mhpssScreening.person_uuid ORDER BY mhpssScreening.encounter_date DESC) AS rowNums
    FROM mhpss_screening mhpssScreening LEFT JOIN patient_person p on p.uuid = mhpssScreening.person_uuid
    LEFT JOIN base_organisation_unit facility ON facility.id=facility_id
    LEFT JOIN base_organisation_unit facility_lga ON facility_lga.id=facility.parent_organisation_unit_id
    LEFT JOIN base_organisation_unit facility_state ON facility_state.id=facility_lga.parent_organisation_unit_id
    LEFT JOIN base_organisation_unit_identifier boui ON boui.organisation_unit_id=facility_id AND boui.name='DATIM_ID'
    LEFT JOIN hiv_enrollment he ON he.person_uuid = p.uuid
    LEFT JOIN (
    SELECT *, ROW_NUMBER() OVER (PARTITION BY mhpss_screening ORDER BY encounter_date DESC) AS rowNums  FROM mhpss_confirmation
    ) ms ON ms.mhpss_screening = mhpssScreening.id
    LEFT JOIN (
    select * from prep_enrollment
    ) prEP ON p.uuid = prEP.person_uuid
    LEFT JOIN (
    SELECT * from hts_client
    ) hts ON p.uuid = hts.person_uuid
    WHERE rowNums = 1 AND p.facility_id='?1' AND p.archived = 0 AND mhpssScreening.encounter_date BETWEEN CAST('?2' AS DATE) AND CAST('?3' AS DATE)
    ) mhpss
  hts-register-query-name: hts_register
  hts-register-query: SELECT hts_register.dateVisit AS "Date (DD/MM/YYYY)", hts_register.clientCode AS "Client Code",
    hts_register.type_individual AS "Type Of Counseling (Individual)", hts_register.type_self_tested AS "Type Of Counseling (Individual)",
    hts_register.type_group AS "Type Of Counseling (Group)", hts_register.type_couple as "Type Of Counseling (Couple)", hts_register.age_1_4_m_negative AS "Tested Negative Age Group Male (1 -4)",
    hts_register.age_5_9_m_negative AS "Tested Negative Age Group Male (5 - 9)", hts_register.age_10_14_m_negative AS "Tested Negative Age Group Male (10 - 14)",
    hts_register.age_15_19_m_negative AS "Tested Negative Age Group Male (15 - 19)", hts_register.age_20_24_m_negative AS "Tested Negative Age Group Male (20 - 24)",
    hts_register.age_25_29_m_negative AS "Tested Negative Age Group Male (25 - 29)", hts_register.age_30_34_m_negative AS "Tested Negative Age Group Male (30 - 34)",
    hts_register.age_35_39_m_negative AS "Tested Negative Age Group Male (35 - 39)", hts_register.age_40_44_m_negative AS "Tested Negative Age Group Male (40 - 44)",
    hts_register.age_45_49_m_negative AS "Tested Negative Age Group Male (45 - 49)", hts_register.age_50_plus_m_negative AS "Tested Negative Age Group Male (50+)",
    hts_register.age_1_4_f_negative AS "Tested Negative Age Group Female (1 - 4)", hts_register.age_5_9_f_negative AS "Tested Negative Age Group Female (5 - 9)",
    hts_register.age_10_14_f_negative AS "Tested Negative Age Group Female (10 - 14)", hts_register.age_15_19_f_negative AS "Tested Negative Age Group Female (15 - 19)",
    hts_register.age_20_24_f_negative AS "Tested Negative Age Group Female (20 - 24)", hts_register.age_25_29_f_negative AS "Tested Negative Age Group Female (25 - 29)",
    hts_register.age_30_34_f_negative AS "Tested Negative Age Group Female (30 - 34)", hts_register.age_35_39_f_negative AS "Tested Negative Age Group Female (35 - 39)",
    hts_register.age_40_44_f_negative AS "Tested Negative Age Group Female (40 - 44)", hts_register.age_45_49_f_negative AS "Tested Negative Age Group Female (45 - 49)",
    hts_register.age_50_plus_f_negative AS "Tested Negative Age Group Female (50+)", hts_register.age_1_4_m_positive AS "Tested Negative Age Group Male (1 - 4)",
    hts_register.age_5_9_m_positive AS "Tested Positive Age Group Male (5 - 9)", hts_register.age_10_14_m_positive AS "Tested Positive Age Group Male (10 - 14)",
    hts_register.age_15_19_m_positive AS "Tested Positive Age Group Male (15 - 19)", hts_register.age_20_24_m_positive AS "Tested Positive Age Group Male (20 - 24)",
    hts_register.age_25_29_m_positive AS "Tested Positive Age Group Male (25 - 29)", hts_register.age_30_34_m_positive AS "Tested Positive Age Group Male (30 - 34)",
    hts_register.age_35_39_m_positive AS "Tested Positive Age Group Male (35 - 39)", hts_register.age_40_44_m_positive AS "Tested Positive Age Group Male (40 - 44)",
    hts_register.age_45_49_m_positive AS "Tested Positive Age Group Male (45 - 49)", hts_register.age_50_plus_m_positive AS "Tested Positive Age Group Male (50+)",
    hts_register.age_1_4_f_positive AS "Tested Positive Age Group Female (1 - 4)", hts_register.age_5_9_f_positive AS "Tested Positive Age Group Female (5 - 9)",
    hts_register.age_10_14_f_positive AS "Tested Positive Age Group Female (10 - 14)", hts_register.age_15_19_f_positive AS "Tested Positive Age Group Female (15 - 19)",
    hts_register.age_20_24_f_positive AS "Tested Positive Age Group Female (20 - 24)", hts_register.age_25_29_f_positive AS "Tested Positive Age Group Female (25 - 29)",
    hts_register.age_30_34_f_positive AS "Tested Positive Age Group Female (30 - 34)", hts_register.age_35_39_f_positive AS "Tested Positive Age Group Female (35 - 39)",
    hts_register.age_40_44_f_positive AS "Tested Positive Age Group Female (40 - 44)", hts_register.age_45_49_f_positive AS "Tested Positive Age Group Female (45 - 49)",
    hts_register.age_50_plus_f_positive AS "Tested Positive Age Group Female (50+)", hts_register.prepOffered AS "Prep Offered",
    hts_register.prepAccepted AS "Prep Accepted", hts_register.retested AS "Retested",
    hts_register.recency_number AS "Recency Number", hts_register.recent AS "Recency Test Result With  RTRI (Recent)",
    hts_register.long_term AS "Recency Test Result With  RTRI (Long Term)", hts_register.negative AS "Recency Test Result With  RTRI (Negative)",
    hts_register.invalid AS "Recency Test Result With  RTRI (Invalid)", hts_register.rita_recent AS "Confirmed Recent Test Through VL Testing (Recent)", hts_register.rita_long_term AS "Confirmed Recent Test Through VL Testing (Long Term)",
    hts_register.yes_tb_clinical_screening_done_score_0 AS "TB Clinical Screening Done Score 0", hts_register.yes_tb_clinical_screening_done_score_1 AS "TB Clinical Screening Done Score 1",
    hts_register.no_tb_clinical_screening_done AS "TB Clinical Screening Not Done", hts_register.yes_sti_clinical_screening_done_score_0 AS "TB Clinical Screening Done Score 0",
    hts_register.yes_sti_clinical_screening_done_score_1 AS "STI Clinical Screening Done Score 1", hts_register.no_sti_clinical_screening_done AS "STI Clinical Screening Not Done",
    hts_register.r_syphilis AS "Syphilis Test Result (R)", hts_register.nr_syphilis AS "Syphilis Test Result (NR)",
    hts_register.hep_b_neg AS "Hepatitis B Test Result Negative", hts_register.hep_b_pos AS "Hepatitis B Test Result Positive",
    hts_register.hep_c_neg AS "Hepatitis B Test Result Negative", hts_register.hep_c_pos AS "Hepatitis B Test Result Positive",
    hts_register.cd4_less_200 AS "CD4 (< 200)", hts_register.cd4_more_or_equal_200 AS "CD4 (>= 200)",
    hts_register.offered_index_testing AS "Offered Index Testing Services", hts_register.accepted_index_testing AS "Accepted Index Testing Services"
    FROM (SELECT hc.date_visit AS dateVisit, hc.client_code AS clientCode,
    (CASE WHEN ts.code = 'COUNSELING_TYPE_INDIVIDUAL' THEN 'X' ELSE '' END) AS type_individual,
    (CASE WHEN ts.code = 'COUNSELING_TYPE_COUPLE' THEN 'X' ELSE '' END) AS type_couple,
    (CASE WHEN ts.code = 'COUNSELING_TYPE_GROUP' THEN 'X' ELSE '' END) AS type_group,
    (CASE WHEN ts.code = 'COUNSELING_TYPE_PREVIOUSLY_SELF-TESTED' THEN 'X' ELSE '' END) AS type_self_tested,
    CASE WHEN hc.person_uuid IS NULL THEN CASE WHEN CAST(hc.extra->>'age' AS INTEGER) BETWEEN 1 AND 4 AND INITCAP(pp.sex)='Male' AND  hc.hiv_test_result='Negative' THEN 'X' ELSE '' END ELSE
    CASE WHEN CAST(EXTRACT(YEAR FROM AGE(NOW(), pp.date_of_birth)) AS INTEGER) BETWEEN 1 AND 4 AND INITCAP(pp.sex)='Male' AND  hc.hiv_test_result='Negative' THEN 'X' ELSE '' END END AS age_1_4_m_negative,
    CASE WHEN hc.person_uuid IS NULL THEN CASE WHEN CAST(hc.extra->>'age' AS INTEGER) BETWEEN 5 AND 9  AND INITCAP(pp.sex)='Male' AND  hc.hiv_test_result='Negative' THEN 'X' ELSE '' END ELSE
    CASE WHEN CAST(EXTRACT(YEAR FROM AGE(NOW(), pp.date_of_birth)) AS INTEGER) BETWEEN 5 AND 9 AND INITCAP(pp.sex)='Male' AND  hc.hiv_test_result='Negative' THEN 'X' ELSE '' END END AS age_5_9_m_negative,
    CASE WHEN hc.person_uuid IS NULL THEN CASE WHEN CAST(hc.extra->>'age' AS INTEGER) BETWEEN 10 AND 14 AND INITCAP(pp.sex)='Male' AND  hc.hiv_test_result='Negative' THEN 'X' ELSE '' END ELSE CASE WHEN CAST(EXTRACT(YEAR FROM AGE(NOW(), pp.date_of_birth)) AS INTEGER) BETWEEN 10 AND 14 AND INITCAP(pp.sex)='Male' AND  hc.hiv_test_result='Negative' THEN 'X' ELSE '' END END AS age_10_14_m_negative,
    CASE WHEN hc.person_uuid IS NULL THEN CASE WHEN CAST(hc.extra->>'age' AS INTEGER) BETWEEN 15 AND 19 AND INITCAP(pp.sex)='Male' AND  hc.hiv_test_result='Negative' THEN 'X' ELSE '' END ELSE CASE WHEN CAST(EXTRACT(YEAR FROM AGE(NOW(), pp.date_of_birth)) AS INTEGER) BETWEEN 15 AND 19 AND INITCAP(pp.sex)='Male' AND  hc.hiv_test_result='Negative' THEN 'X' ELSE '' END END AS age_15_19_m_negative,
    CASE WHEN hc.person_uuid IS NULL THEN CASE WHEN CAST(hc.extra->>'age' AS INTEGER) BETWEEN 20 AND 24 AND INITCAP(pp.sex)='Male' AND  hc.hiv_test_result='Negative'THEN 'X' ELSE '' END ELSE CASE WHEN CAST(EXTRACT(YEAR FROM AGE(NOW(), pp.date_of_birth)) AS INTEGER) BETWEEN 20 AND 24  AND INITCAP(pp.sex)='Male' AND  hc.hiv_test_result='Negative' THEN 'X' ELSE '' END END AS age_20_24_m_negative,
    CASE WHEN hc.person_uuid IS NULL THEN CASE WHEN CAST(hc.extra->>'age' AS INTEGER) BETWEEN 25 AND 29 AND INITCAP(pp.sex)='Male' AND  hc.hiv_test_result='Negative' THEN 'X' ELSE '' END ELSE CASE WHEN CAST(EXTRACT(YEAR FROM AGE(NOW(), pp.date_of_birth)) AS INTEGER) BETWEEN 25 AND 29 AND INITCAP(pp.sex)='Male' AND  hc.hiv_test_result='Negative' THEN 'X' ELSE '' END END AS age_25_29_m_negative,
    CASE WHEN hc.person_uuid IS NULL THEN CASE WHEN CAST(hc.extra->>'age' AS INTEGER) BETWEEN 30 AND 34 AND INITCAP(pp.sex)='Male' AND  hc.hiv_test_result='Negative' THEN 'X' ELSE '' END ELSE CASE WHEN CAST(EXTRACT(YEAR FROM AGE(NOW(), pp.date_of_birth)) AS INTEGER) BETWEEN 30 AND 34 AND INITCAP(pp.sex)='Male' AND  hc.hiv_test_result='Negative' THEN 'X' ELSE '' END END AS age_30_34_m_negative,
    CASE WHEN hc.person_uuid IS NULL THEN CASE WHEN CAST(hc.extra->>'age' AS INTEGER) BETWEEN 35 AND 39 AND INITCAP(pp.sex)='Male' AND  hc.hiv_test_result='Negative' THEN 'X' ELSE '' END ELSE CASE WHEN CAST(EXTRACT(YEAR FROM AGE(NOW(), pp.date_of_birth)) AS INTEGER) BETWEEN 35 AND 39 AND INITCAP(pp.sex)='Male' AND  hc.hiv_test_result='Negative' THEN 'X' ELSE '' END END AS age_35_39_m_negative,
    CASE WHEN hc.person_uuid IS NULL THEN CASE WHEN CAST(hc.extra->>'age' AS INTEGER) BETWEEN 40 AND 44 AND INITCAP(pp.sex)='Male' AND  hc.hiv_test_result='Negative' THEN 'X' ELSE '' END ELSE CASE WHEN CAST(EXTRACT(YEAR FROM AGE(NOW(), pp.date_of_birth)) AS INTEGER) BETWEEN 40 AND 44 AND INITCAP(pp.sex)='Male' AND  hc.hiv_test_result='Negative' THEN 'X' ELSE '' END END AS age_40_44_m_negative,
    CASE WHEN hc.person_uuid IS NULL THEN CASE WHEN CAST(hc.extra->>'age' AS INTEGER) BETWEEN 45 AND 49 AND INITCAP(pp.sex)='Male' AND  hc.hiv_test_result='Negative' THEN 'X' ELSE '' END ELSE CASE WHEN CAST(EXTRACT(YEAR FROM AGE(NOW(), pp.date_of_birth)) AS INTEGER) BETWEEN 45 AND 49 AND INITCAP(pp.sex)='Male' AND  hc.hiv_test_result='Negative' THEN 'X' ELSE '' END END AS age_45_49_m_negative,
    CASE WHEN hc.person_uuid IS NULL THEN CASE WHEN CAST(hc.extra->>'age' AS INTEGER) >= 50 AND INITCAP(pp.sex)='Male' AND  hc.hiv_test_result='Negative' THEN 'X' ELSE '' END ELSE CASE WHEN CAST(EXTRACT(YEAR FROM AGE(NOW(), pp.date_of_birth)) AS INTEGER) >= 50 AND INITCAP(pp.sex)='Male' AND  hc.hiv_test_result='Negative' THEN 'X' ELSE '' END END AS age_50_plus_m_negative,
    CASE WHEN hc.person_uuid IS NULL THEN CASE WHEN CAST(hc.extra->>'age' AS INTEGER) BETWEEN 1 AND 4 AND INITCAP(pp.sex)='Female' AND  hc.hiv_test_result='Negative' THEN 'X' ELSE '' END ELSE CASE WHEN CAST(EXTRACT(YEAR FROM AGE(NOW(), pp.date_of_birth)) AS INTEGER) BETWEEN 1 AND 4 AND INITCAP(pp.sex)='Female' AND  hc.hiv_test_result='Negative' THEN 'X' ELSE '' END END AS age_1_4_f_negative,
    CASE WHEN hc.person_uuid IS NULL THEN CASE WHEN CAST(hc.extra->>'age' AS INTEGER) BETWEEN 5 AND 9  AND INITCAP(pp.sex)='Female' AND  hc.hiv_test_result='Negative' THEN 'X' ELSE '' END ELSE CASE WHEN CAST(EXTRACT(YEAR FROM AGE(NOW(), pp.date_of_birth)) AS INTEGER) BETWEEN 5 AND 9 AND INITCAP(pp.sex)='Female' AND  hc.hiv_test_result='Negative' THEN 'X' ELSE '' END END AS age_5_9_f_negative,
    CASE WHEN hc.person_uuid IS NULL THEN CASE WHEN CAST(hc.extra->>'age' AS INTEGER) BETWEEN 10 AND 14 AND INITCAP(pp.sex)='Female' AND  hc.hiv_test_result='Negative' THEN 'X' ELSE '' END ELSE CASE WHEN CAST(EXTRACT(YEAR FROM AGE(NOW(), pp.date_of_birth)) AS INTEGER) BETWEEN 10 AND 14 AND INITCAP(pp.sex)='Female' AND  hc.hiv_test_result='Negative' THEN 'X' ELSE '' END END AS age_10_14_f_negative,
    CASE WHEN hc.person_uuid IS NULL THEN CASE WHEN CAST(hc.extra->>'age' AS INTEGER) BETWEEN 15 AND 19 AND INITCAP(pp.sex)='Female' AND  hc.hiv_test_result='Negative' THEN 'X' ELSE '' END ELSE CASE WHEN CAST(EXTRACT(YEAR FROM AGE(NOW(), pp.date_of_birth)) AS INTEGER) BETWEEN 15 AND 19 AND INITCAP(pp.sex)='Female' AND  hc.hiv_test_result='Negative' THEN 'X' ELSE '' END END AS age_15_19_f_negative,
    CASE WHEN hc.person_uuid IS NULL THEN CASE WHEN CAST(hc.extra->>'age' AS INTEGER) BETWEEN 20 AND 24 AND INITCAP(pp.sex)='Female' AND  hc.hiv_test_result='Negative'THEN 'X' ELSE '' END ELSE CASE WHEN CAST(EXTRACT(YEAR FROM AGE(NOW(), pp.date_of_birth)) AS INTEGER) BETWEEN 20 AND 24  AND INITCAP(pp.sex)='Female' AND  hc.hiv_test_result='Negative' THEN 'X' ELSE '' END END AS age_20_24_f_negative,
    CASE WHEN hc.person_uuid IS NULL THEN CASE WHEN CAST(hc.extra->>'age' AS INTEGER) BETWEEN 25 AND 29 AND INITCAP(pp.sex)='Female' AND  hc.hiv_test_result='Negative' THEN 'X' ELSE '' END ELSE CASE WHEN CAST(EXTRACT(YEAR FROM AGE(NOW(), pp.date_of_birth)) AS INTEGER) BETWEEN 25 AND 29 AND INITCAP(pp.sex)='Female' AND  hc.hiv_test_result='Negative' THEN 'X' ELSE '' END END AS age_25_29_f_negative,
    CASE WHEN hc.person_uuid IS NULL THEN CASE WHEN CAST(hc.extra->>'age' AS INTEGER) BETWEEN 30 AND 34 AND INITCAP(pp.sex)='Female' AND  hc.hiv_test_result='Negative' THEN 'X' ELSE '' END ELSE CASE WHEN CAST(EXTRACT(YEAR FROM AGE(NOW(), pp.date_of_birth)) AS INTEGER) BETWEEN 30 AND 34 AND INITCAP(pp.sex)='Female' AND  hc.hiv_test_result='Negative' THEN 'X' ELSE '' END END AS age_30_34_f_negative,
    CASE WHEN hc.person_uuid IS NULL THEN CASE WHEN CAST(hc.extra->>'age' AS INTEGER) BETWEEN 35 AND 39 AND INITCAP(pp.sex)='Female' AND  hc.hiv_test_result='Negative' THEN 'X' ELSE '' END ELSE CASE WHEN CAST(EXTRACT(YEAR FROM AGE(NOW(), pp.date_of_birth)) AS INTEGER) BETWEEN 35 AND 39 AND INITCAP(pp.sex)='Female' AND  hc.hiv_test_result='Negative' THEN 'X' ELSE '' END END AS age_35_39_f_negative,
    CASE WHEN hc.person_uuid IS NULL THEN CASE WHEN CAST(hc.extra->>'age' AS INTEGER) BETWEEN 40 AND 44 AND INITCAP(pp.sex)='Female' AND  hc.hiv_test_result='Negative' THEN 'X' ELSE '' END ELSE CASE WHEN CAST(EXTRACT(YEAR FROM AGE(NOW(), pp.date_of_birth)) AS INTEGER) BETWEEN 40 AND 44 AND INITCAP(pp.sex)='Female' AND  hc.hiv_test_result='Negative' THEN 'X' ELSE '' END END AS age_40_44_f_negative,
    CASE WHEN hc.person_uuid IS NULL THEN CASE WHEN CAST(hc.extra->>'age' AS INTEGER) BETWEEN 45 AND 49 AND INITCAP(pp.sex)='Female' AND  hc.hiv_test_result='Negative' THEN 'X' ELSE '' END ELSE CASE WHEN CAST(EXTRACT(YEAR FROM AGE(NOW(), pp.date_of_birth)) AS INTEGER) BETWEEN 45 AND 49 AND INITCAP(pp.sex)='Female' AND  hc.hiv_test_result='Negative' THEN 'X' ELSE '' END END AS age_45_49_f_negative,
    CASE WHEN hc.person_uuid IS NULL THEN CASE WHEN CAST(hc.extra->>'age' AS INTEGER) >= 50 AND INITCAP(pp.sex)='Female' AND  hc.hiv_test_result='Negative' THEN 'X' ELSE '' END ELSE CASE WHEN CAST(EXTRACT(YEAR FROM AGE(NOW(), pp.date_of_birth)) AS INTEGER) >= 50 AND INITCAP(pp.sex)='Female' AND  hc.hiv_test_result='Negative' THEN 'X' ELSE '' END END AS age_50_plus_f_negative,
    CASE WHEN hc.person_uuid IS NULL THEN CASE WHEN CAST(hc.extra->>'age' AS INTEGER) BETWEEN 1 AND 4 AND INITCAP(pp.sex)='Male' AND  hc.hiv_test_result='Positive' THEN 'X' ELSE '' END ELSE CASE WHEN CAST(EXTRACT(YEAR FROM AGE(NOW(), pp.date_of_birth)) AS INTEGER) BETWEEN 1 AND 4 AND INITCAP(pp.sex)='Male' AND  hc.hiv_test_result='Positive' THEN 'X' ELSE '' END END AS age_1_4_m_positive,
    CASE WHEN hc.person_uuid IS NULL THEN CASE WHEN CAST(hc.extra->>'age' AS INTEGER) BETWEEN 5 AND 9  AND INITCAP(pp.sex)='Male' AND  hc.hiv_test_result='Positive' THEN 'X' ELSE '' END ELSE CASE WHEN CAST(EXTRACT(YEAR FROM AGE(NOW(), pp.date_of_birth)) AS INTEGER) BETWEEN 5 AND 9 AND INITCAP(pp.sex)='Male' AND  hc.hiv_test_result='Positive' THEN 'X' ELSE '' END END AS age_5_9_m_positive,
    CASE WHEN hc.person_uuid IS NULL THEN CASE WHEN CAST(hc.extra->>'age' AS INTEGER) BETWEEN 10 AND 14 AND INITCAP(pp.sex)='Male' AND  hc.hiv_test_result='Positive' THEN 'X' ELSE '' END ELSE CASE WHEN CAST(EXTRACT(YEAR FROM AGE(NOW(), pp.date_of_birth)) AS INTEGER) BETWEEN 10 AND 14 AND INITCAP(pp.sex)='Male' AND  hc.hiv_test_result='Positive' THEN 'X' ELSE '' END END AS age_10_14_m_positive,
    CASE WHEN hc.person_uuid IS NULL THEN CASE WHEN CAST(hc.extra->>'age' AS INTEGER) BETWEEN 15 AND 19 AND INITCAP(pp.sex)='Male' AND  hc.hiv_test_result='Positive' THEN 'X' ELSE '' END ELSE CASE WHEN CAST(EXTRACT(YEAR FROM AGE(NOW(), pp.date_of_birth)) AS INTEGER) BETWEEN 15 AND 19 AND INITCAP(pp.sex)='Male' AND  hc.hiv_test_result='Positive' THEN 'X' ELSE '' END END AS age_15_19_m_positive,
    CASE WHEN hc.person_uuid IS NULL THEN CASE WHEN CAST(hc.extra->>'age' AS INTEGER) BETWEEN 20 AND 24 AND INITCAP(pp.sex)='Male' AND  hc.hiv_test_result='Positive'THEN 'X' ELSE '' END ELSE CASE WHEN CAST(EXTRACT(YEAR FROM AGE(NOW(), pp.date_of_birth)) AS INTEGER) BETWEEN 20 AND 24  AND INITCAP(pp.sex)='Male' AND  hc.hiv_test_result='Positive' THEN 'X' ELSE '' END END AS age_20_24_m_positive,
    CASE WHEN hc.person_uuid IS NULL THEN CASE WHEN CAST(hc.extra->>'age' AS INTEGER) BETWEEN 25 AND 29 AND INITCAP(pp.sex)='Male' AND  hc.hiv_test_result='Positive' THEN 'X' ELSE '' END ELSE CASE WHEN CAST(EXTRACT(YEAR FROM AGE(NOW(), pp.date_of_birth)) AS INTEGER) BETWEEN 25 AND 29 AND INITCAP(pp.sex)='Male' AND  hc.hiv_test_result='Positive' THEN 'X' ELSE '' END END AS age_25_29_m_positive,
    CASE WHEN hc.person_uuid IS NULL THEN CASE WHEN CAST(hc.extra->>'age' AS INTEGER) BETWEEN 30 AND 34 AND INITCAP(pp.sex)='Male' AND  hc.hiv_test_result='Positive' THEN 'X' ELSE '' END ELSE CASE WHEN CAST(EXTRACT(YEAR FROM AGE(NOW(), pp.date_of_birth)) AS INTEGER) BETWEEN 30 AND 34 AND INITCAP(pp.sex)='Male' AND  hc.hiv_test_result='Positive' THEN 'X' ELSE '' END END AS age_30_34_m_positive,
    CASE WHEN hc.person_uuid IS NULL THEN CASE WHEN CAST(hc.extra->>'age' AS INTEGER) BETWEEN 35 AND 39 AND INITCAP(pp.sex)='Male' AND  hc.hiv_test_result='Positive' THEN 'X' ELSE '' END ELSE CASE WHEN CAST(EXTRACT(YEAR FROM AGE(NOW(), pp.date_of_birth)) AS INTEGER) BETWEEN 35 AND 39 AND INITCAP(pp.sex)='Male' AND  hc.hiv_test_result='Positive' THEN 'X' ELSE '' END END AS age_35_39_m_positive,
    CASE WHEN hc.person_uuid IS NULL THEN CASE WHEN CAST(hc.extra->>'age' AS INTEGER) BETWEEN 40 AND 44 AND INITCAP(pp.sex)='Male' AND  hc.hiv_test_result='Positive' THEN 'X' ELSE '' END ELSE CASE WHEN CAST(EXTRACT(YEAR FROM AGE(NOW(), pp.date_of_birth)) AS INTEGER) BETWEEN 40 AND 44 AND INITCAP(pp.sex)='Male' AND  hc.hiv_test_result='Positive' THEN 'X' ELSE '' END END AS age_40_44_m_positive,
    CASE WHEN hc.person_uuid IS NULL THEN CASE WHEN CAST(hc.extra->>'age' AS INTEGER) BETWEEN 45 AND 49 AND INITCAP(pp.sex)='Male' AND  hc.hiv_test_result='Positive' THEN 'X' ELSE '' END ELSE CASE WHEN CAST(EXTRACT(YEAR FROM AGE(NOW(), pp.date_of_birth)) AS INTEGER) BETWEEN 45 AND 49 AND INITCAP(pp.sex)='Male' AND  hc.hiv_test_result='Positive' THEN 'X' ELSE '' END END AS age_45_49_m_positive,
    CASE WHEN hc.person_uuid IS NULL THEN CASE WHEN CAST(hc.extra->>'age' AS INTEGER) >= 50 AND INITCAP(pp.sex)='Male' AND  hc.hiv_test_result='Positive' THEN 'X' ELSE '' END ELSE CASE WHEN CAST(EXTRACT(YEAR FROM AGE(NOW(), pp.date_of_birth)) AS INTEGER) >= 50 AND INITCAP(pp.sex)='Male' AND  hc.hiv_test_result='Positive' THEN 'X' ELSE '' END END AS age_50_plus_m_positive,
    CASE WHEN hc.person_uuid IS NULL THEN CASE WHEN CAST(hc.extra->>'age' AS INTEGER) BETWEEN 1 AND 4 AND INITCAP(pp.sex)='Female' AND  hc.hiv_test_result='Positive' THEN 'X' ELSE '' END ELSE CASE WHEN CAST(EXTRACT(YEAR FROM AGE(NOW(), pp.date_of_birth)) AS INTEGER) BETWEEN 1 AND 4 AND INITCAP(pp.sex)='Female' AND  hc.hiv_test_result='Positive' THEN 'X' ELSE '' END END AS age_1_4_f_positive,
    CASE WHEN hc.person_uuid IS NULL THEN CASE WHEN CAST(hc.extra->>'age' AS INTEGER) BETWEEN 5 AND 9  AND INITCAP(pp.sex)='Female' AND  hc.hiv_test_result='Positive' THEN 'X' ELSE '' END ELSE CASE WHEN CAST(EXTRACT(YEAR FROM AGE(NOW(), pp.date_of_birth)) AS INTEGER) BETWEEN 5 AND 9 AND INITCAP(pp.sex)='Female' AND  hc.hiv_test_result='Positive' THEN 'X' ELSE '' END END AS age_5_9_f_positive,
    CASE WHEN hc.person_uuid IS NULL THEN CASE WHEN CAST(hc.extra->>'age' AS INTEGER) BETWEEN 10 AND 14 AND INITCAP(pp.sex)='Female' AND  hc.hiv_test_result='Positive' THEN 'X' ELSE '' END ELSE CASE WHEN CAST(EXTRACT(YEAR FROM AGE(NOW(), pp.date_of_birth)) AS INTEGER) BETWEEN 10 AND 14 AND INITCAP(pp.sex)='Female' AND  hc.hiv_test_result='Positive' THEN 'X' ELSE '' END END AS age_10_14_f_positive,
    CASE WHEN hc.person_uuid IS NULL THEN CASE WHEN CAST(hc.extra->>'age' AS INTEGER) BETWEEN 15 AND 19 AND INITCAP(pp.sex)='Female' AND  hc.hiv_test_result='Positive' THEN 'X' ELSE '' END ELSE CASE WHEN CAST(EXTRACT(YEAR FROM AGE(NOW(), pp.date_of_birth)) AS INTEGER) BETWEEN 15 AND 19 AND INITCAP(pp.sex)='Female' AND  hc.hiv_test_result='Positive' THEN 'X' ELSE '' END END AS age_15_19_f_positive,
    CASE WHEN hc.person_uuid IS NULL THEN CASE WHEN CAST(hc.extra->>'age' AS INTEGER) BETWEEN 20 AND 24 AND INITCAP(pp.sex)='Female' AND  hc.hiv_test_result='Positive'THEN 'X' ELSE '' END ELSE CASE WHEN CAST(EXTRACT(YEAR FROM AGE(NOW(), pp.date_of_birth)) AS INTEGER) BETWEEN 20 AND 24  AND INITCAP(pp.sex)='Female' AND  hc.hiv_test_result='Positive' THEN 'X' ELSE '' END END AS age_20_24_f_positive,
    CASE WHEN hc.person_uuid IS NULL THEN CASE WHEN CAST(hc.extra->>'age' AS INTEGER) BETWEEN 25 AND 29 AND INITCAP(pp.sex)='Female' AND  hc.hiv_test_result='Positive' THEN 'X' ELSE '' END ELSE CASE WHEN CAST(EXTRACT(YEAR FROM AGE(NOW(), pp.date_of_birth)) AS INTEGER) BETWEEN 25 AND 29 AND INITCAP(pp.sex)='Female' AND  hc.hiv_test_result='Positive' THEN 'X' ELSE '' END END AS age_25_29_f_positive,
    CASE WHEN hc.person_uuid IS NULL THEN CASE WHEN CAST(hc.extra->>'age' AS INTEGER) BETWEEN 30 AND 34 AND INITCAP(pp.sex)='Female' AND  hc.hiv_test_result='Positive' THEN 'X' ELSE '' END ELSE CASE WHEN CAST(EXTRACT(YEAR FROM AGE(NOW(), pp.date_of_birth)) AS INTEGER) BETWEEN 30 AND 34 AND INITCAP(pp.sex)='Female' AND  hc.hiv_test_result='Positive' THEN 'X' ELSE '' END END AS age_30_34_f_positive,
    CASE WHEN hc.person_uuid IS NULL THEN CASE WHEN CAST(hc.extra->>'age' AS INTEGER) BETWEEN 35 AND 39 AND INITCAP(pp.sex)='Female' AND  hc.hiv_test_result='Positive' THEN 'X' ELSE '' END ELSE CASE WHEN CAST(EXTRACT(YEAR FROM AGE(NOW(), pp.date_of_birth)) AS INTEGER) BETWEEN 35 AND 39 AND INITCAP(pp.sex)='Female' AND  hc.hiv_test_result='Positive' THEN 'X' ELSE '' END END AS age_35_39_f_positive,
    CASE WHEN hc.person_uuid IS NULL THEN CASE WHEN CAST(hc.extra->>'age' AS INTEGER) BETWEEN 40 AND 44 AND INITCAP(pp.sex)='Female' AND  hc.hiv_test_result='Positive' THEN 'X' ELSE '' END ELSE CASE WHEN CAST(EXTRACT(YEAR FROM AGE(NOW(), pp.date_of_birth)) AS INTEGER) BETWEEN 40 AND 44 AND INITCAP(pp.sex)='Female' AND  hc.hiv_test_result='Positive' THEN 'X' ELSE '' END END AS age_40_44_f_positive,
    CASE WHEN hc.person_uuid IS NULL THEN CASE WHEN CAST(hc.extra->>'age' AS INTEGER) BETWEEN 45 AND 49 AND INITCAP(pp.sex)='Female' AND  hc.hiv_test_result='Positive' THEN 'X' ELSE '' END ELSE CASE WHEN CAST(EXTRACT(YEAR FROM AGE(NOW(), pp.date_of_birth)) AS INTEGER) BETWEEN 45 AND 49 AND INITCAP(pp.sex)='Female' AND  hc.hiv_test_result='Positive' THEN 'X' ELSE '' END END AS age_45_49_f_positive,
    CASE WHEN hc.person_uuid IS NULL THEN CASE WHEN CAST(hc.extra->>'age' AS INTEGER) >= 50 AND INITCAP(pp.sex)='Female' AND  hc.hiv_test_result='Positive' THEN 'X' ELSE '' END ELSE CASE WHEN CAST(EXTRACT(YEAR FROM AGE(NOW(), pp.date_of_birth)) AS INTEGER) >= 50 AND INITCAP(pp.sex)='Female' AND  hc.hiv_test_result='Positive' THEN 'X' ELSE '' END END AS age_50_plus_f_positive,
    (CASE WHEN hc.prep_offered IS true THEN 'Yes' ELSE 'No' END) AS prepOffered,
    (CASE WHEN hc.prep_accepted IS true THEN 'Yes' ELSE 'No' END) AS prepAccepted,
    (CASE WHEN hc.previously_tested IS true THEN 'Yes' ELSE 'No' END) AS retested, hc.recency->>'rencencyId' AS recency_number,
    (CASE WHEN hc.recency->>'rencencyInterpretation' IS NOT NULL AND hc.recency->>'rencencyInterpretation' ILIKE '%Recent%' THEN 'X' ELSE '' END) AS recent,
    (CASE WHEN hc.recency->>'rencencyInterpretation' IS NOT NULL AND hc.recency->>'rencencyInterpretation' ILIKE '%Long%' THEN 'X' ELSE '' END) AS long_term,
    (CASE WHEN hc.recency->>'rencencyInterpretation' IS NOT NULL AND hc.recency->>'rencencyInterpretation' ILIKE '%Negative%' THEN '' ELSE '' END) AS negative,
    (CASE WHEN hc.recency->>'rencencyInterpretation' IS NOT NULL AND hc.recency->>'rencencyInterpretation' ILIKE '%Invalid%' THEN '' ELSE '' END) AS invalid,
    (CASE WHEN  hc.recency->>'finalRecencyResult' IS NOT NULL AND hc.recency->>'rencencyInterpretation' ILIKE '%Recent%' THEN 'X' ELSE '' END) AS rita_recent,
    (CASE WHEN  hc.recency->>'finalRecencyResult' IS NOT NULL AND hc.recency->>'rencencyInterpretation' ILIKE '%Long%' THEN 'X' ELSE '' END) AS rita_long_term,
    '' AS yes_tb_clinical_screening_done_score_0,
    '' AS yes_tb_clinical_screening_done_score_1,
    '' AS no_tb_clinical_screening_done,
    '' AS yes_sti_clinical_screening_done_score_0,
    '' AS yes_sti_clinical_screening_done_score_1,
    '' AS no_sti_clinical_screening_done,
    '' AS r_syphilis,
    '' AS nr_syphilis,
    '' AS hep_b_neg,
    '' AS hep_b_pos,
    '' AS hep_c_neg,
    '' AS hep_c_pos,
    CASE WHEN (CASE WHEN hc.cd4->>'cd4Count' = 'Semi-Quantitative' THEN hc.cd4->>'cd4SemiQuantitative' WHEN hc.cd4->>'cd4Count' = 'Flow Cyteometry' THEN hc.cd4->>'cd4FlowCyteometry' ELSE NULL END) = '<200' THEN 'X' ELSE NULL END AS cd4_less_200,
    CASE WHEN (CASE WHEN hc.cd4->>'cd4Count' = 'Semi-Quantitative' THEN hc.cd4->>'cd4SemiQuantitative' WHEN hc.cd4->>'cd4Count' = 'Flow Cyteometry' THEN hc.cd4->>'cd4FlowCyteometry' ELSE NULL END) = '>=200' THEN 'X' ELSE NULL END AS cd4_more_or_equal_200,
    (CASE WHEN hc.index_client IS true THEN 'X' ELSE '' END) AS offered_index_testing, (CASE WHEN hc.index_client IS true THEN 'X' ELSE '' END) AS accepted_index_testing
    FROM hts_client hc
    LEFT JOIN base_application_codeset tg ON tg.code = hc.target_group
    LEFT JOIN base_application_codeset it ON it.id = hc.relation_with_index_client
    LEFT JOIN base_application_codeset rf ON rf.id = hc.referred_from
    LEFT JOIN base_application_codeset ts ON ts.code = hc.testing_setting
    LEFT JOIN base_application_codeset tc ON tc.id = hc.type_counseling
    LEFT JOIN base_application_codeset preg ON preg.id = hc.pregnant
    LEFT JOIN base_application_codeset relation ON relation.id = hc.relation_with_index_client
    LEFT JOIN hts_risk_stratification hrs ON hrs.code = hc.risk_stratification_code
    LEFT JOIN base_application_codeset modality_code ON modality_code.code = hrs.modality
    LEFT JOIN patient_person pp ON pp.uuid = hc.person_uuid
    LEFT JOIN (SELECT p.id, (jsonb_array_elements(p.address->'address')->>'city') as address
    FROM patient_person p) AS result ON result.id = pp.id
    LEFT JOIN base_organisation_unit facility ON facility.id = hc.facility_id
    LEFT JOIN base_organisation_unit state ON state.id = facility.parent_organisation_unit_id
    LEFT JOIN base_organisation_unit lga ON lga.id = state.parent_organisation_unit_id
    LEFT JOIN base_organisation_unit_identifier boui ON boui.organisation_unit_id = hc.facility_id AND boui.name = 'DATIM_ID'
    WHERE hc.archived = 0
    AND hc.facility_id = ?1 AND hc.date_visit BETWEEN CAST('?2' AS DATE) AND CAST('?3' AS DATE)
    ORDER BY hc.date_visit, hc.client_code, tg.display) hts_register
  kp-prev-query-name: kpPrev
  kp-prev-query: SELECT kpPrev.entryPoint AS "Entry point",	kpPrev.patientId AS "Name or ID",	kpPrev.facilityName AS "Facility Name",	kpPrev.state AS "State",	kpPrev.lga AS "LGA",	kpPrev.dateServiced AS "Date service offered or received",	kpPrev.age AS "Age",	kpPrev.sex AS "Sex",	kpPrev.tarGroup AS "Target Group",	kpPrev.offeredHts AS "Offered HTS",	kpPrev.affectedHts AS "Accepted HTS",	kpPrev.htsResult AS "HTS Result",	kpPrev.referredForArt AS "If Positive, referred for ART?",	kpPrev.offeredPrep AS "Offered PrEP",  kpPrev.prepAccepted AS "Accepted PrEP",	kpPrev.refferedForPrep AS "Referred for PrEP",	kpPrev.cdDispensed AS "Total Number of condoms dispensed",
    kpPrev.lubricantDispensed AS "Total Number of lubricants dispensed",	kpPrev.OralDispensed AS "HIV-ST kits dispensed",	kpPrev.needleDispensed AS "Total Number of needles/syringes dispensed",	kpPrev.iecMaterial AS "IEC materials/pamphlets",	kpPrev.interPersonalCommunication AS "Interpersonal communications (IPC)",	kpPrev.peerGroupCommunication AS "Peer group education",	kpPrev.stiScreen AS "STI Screened",	kpPrev.stiResult AS "STI screen result",	kpPrev.stiTreatment AS "Type of STI Treatment",	kpPrev.vaccineViralHepatitis AS "Screening for Viral Hepatitis",
    kpPrev.viralHepatitisResult AS "Viral Hepatitis Screen result",	kpPrev.vaccineViralHepatitis AS "Vaccination for Viral Hepatitis",	kpPrev.fPlanning AS "Reproductive Health(Family planning, PMTCT)",	kpPrev.medicalAssisted AS "Medication Assisted Therapy",	kpPrev.typeOfMhpss AS "Type of MHPSS Provided",	kpPrev.referedMhpss AS "Referal for MHPSS",	kpPrev.mat AS "MAT",	kpPrev.empowermentProgramReferred AS "Empowerment" ,	kpPrev.legalAid AS "Legal Aid",	kpPrev.providedEmpowerment AS "Outreach/ Empowerment"
    FROM (
    SELECT facility.name as facilityName, facility_state.name as state, facility_lga.name as lga,  p.uuid AS PersonUuid, p.id, p.uuid,p.hospital_number as hospitalNumber,
    coalesce(he.date_of_registration, he.date_started) AS hivEnrollmentDate,
    EXTRACT(YEAR from AGE(NOW(),  date_of_birth)) as age,
    COALESCE(p.hospital_number, hts.client_code, PrEP.unique_id) AS patientId,
    INITCAP(p.sex) AS sex, COALESCE(kp.entry_point->>'htsaccepted', kp.entry_point->>'known_postive') AS entryPoint, CAST(visit_date AS DATE) As dateServiced, (select display from base_application_codeset where code = kp.target_group) AS tarGroup, CASE WHEN hts_services->>'offered_hts' ILIKE '%1' THEN 'Yes' WHEN hts_services->>'offered_hts' ILIKE '%0' THEN 'No' ELSE hts_services->>'offered_hts' END AS offeredHts,
    CASE WHEN hts_services->>'accepted_hts' ILIKE '%1' THEN 'Yes' WHEN hts_services->>'accepted_hts' ILIKE '%0' THEN 'No' ELSE hts_services->>'accepted_hts' END AS affectedHts, INITCAP(hts_services->>'hiv_test_result') AS htsResult, CASE WHEN INITCAP(hts_services->>'hiv_test_result') = 'Positive' AND hts_services->>'referred_for_art' = '1'  THEN 'Yes' ELSE 'No' END AS referredForArt, prep_services->>'offered_prep' AS offeredPrep, prep_services->>'accepted_prep' AS prepAccepted, prep_services->>'referred_for_prep' AS refferedForPrep,
    commodity_services->>'how_many_condom_dispensed' AS cdDispensed, commodity_services->>'how_many_lubricants_dispensed' AS lubricantDispensed, commodity_services->>'how_many_oral_quick_dispensed' AS OralDispensed,
    commodity_services->>'how_many_new_needle_dispensed' AS needleDispensed, hiv_educational_services->>'iecMaterial' AS iecMaterial, hiv_educational_services->>'peerGroupCommunication' AS peerGroupCommunication,
    hiv_educational_services->>'interPersonalCommunication' AS interPersonalCommunication, biomedical_services->>'sti_screening' AS stiScreen, biomedical_services->>'sti_screening_result' AS stiResult, biomedical_services->>'type_of_sti_treatment' AS stiTreatment,
    biomedical_services->>'vaccination_for_viral_hepatitis' AS vaccineViralHepatitis, biomedical_services->>'viral_hepatitis_screen_result' AS viralHepatitisResult, '' AS fPlanning, biomedical_services->>'medical_assisted_therapy_for_six_months' AS medicalAssisted,
    biomedical_services->>'type_of_mhpss' AS typeOfMhpss, '' AS referedMhpss, '' AS mat, structural_services->>'empowermentProgramReferred' AS empowermentProgramReferred, structural_services->>'legalAidServices' AS legalAid, structural_services->>'providedEmpowerment' AS providedEmpowerment
    FROM patient_person p
    LEFT JOIN base_organisation_unit facility ON facility.id=facility_id
    LEFT JOIN base_organisation_unit facility_lga ON facility_lga.id=facility.parent_organisation_unit_id
    LEFT JOIN base_organisation_unit facility_state ON facility_state.id=facility_lga.parent_organisation_unit_id
    LEFT JOIN base_organisation_unit_identifier boui ON boui.organisation_unit_id=facility_id AND boui.name='DATIM_ID'
    LEFT JOIN hiv_enrollment he ON he.person_uuid = p.uuid
    LEFT JOIN prep_enrollment PrEP ON PrEP.person_uuid = p.uuid
    LEFT JOIN hts_client hts ON hts.person_uuid = p.uuid
    INNER JOIN kp_prev kp on  kp.person_uuid = p.uuid
    WHERE kp.facility_id='?1' AND p.archived = 0 AND CAST(kp.visit_date AS DATE) BETWEEN CAST('?2' AS DATE) AND CAST('?3' AS DATE)
    ) kpPrev
  hivst-query-name: hivst
  hivst-query: SELECT hivst.state AS "State",	hivst.lga AS "LGA", hivst.facilityName AS	"Facility",	hivst.datimId AS "Facility Id (Datim)",	hivst.serviceDeliveryPoint AS "Service Delivery Point",	hivst.visitDate AS "Date",	hivst.collectorCode AS "Collector's Client Code", 	hivst.collectorCodeStatus AS "Collector's HIV Status",	hivst.entryPoint AS "entry point",	hivst.targetGroup AS "target group",	hivst.userClientCode AS "User client code",	hivst.contactAddress AS "Contact Address",	hivst.phoneNumber AS "Phone Number",	hivst.nameOfTestKit AS "Name of Test Kit",
    hivst.lotNumber AS "Test Kit Lot Number",	hivst.expiryDate AS "Test Kit Expiry Date",	hivst.userMaritalStatus AS "User Marital Status",	hivst.userCategory AS "Intended User Category",	hivst.userSex AS "Sex",	hivst.userAge AS "Age of User",	hivst.everUsedHivstKit AS "Have you every used HIVST kits?",	hivst.typeOfHivstKit AS "Test kit used",	hivst.typeOfHivst AS "Type of HIVST",	hivst.followUp AS "Follow-up outcome",	hivst.resultOfHivstTest AS "Test Result",	hivst.referredFor AS "Referred	Services", hivst.facilityRefered AS "Referred for	Name of facility refrred to",	hivst.dateReferred AS "Date of Referral",	hivst.receivedConfirmatoryHts AS "Received confirmatory HTS",	hivst.resultConfirmatoryHts AS "Result of confirmatory HTS",
    hivst.posLinked AS "Positive linked to care",	hivst.accessPreventionService AS "Accessed prevention Services"
    FROM
    (
    SELECT facility.name as facilityName, facility_state.name as state, facility_lga.name as lga, boui.code AS datimId, p.uuid AS PersonUuid, p.id, p.uuid,p.hospital_number as hospitalNumber,
    EXTRACT(YEAR from AGE(NOW(),  date_of_birth)) as age, INITCAP(p.sex) AS sex, hst.service_delivery_point serviceDeliveryPoint, hst.date_of_visit AS visitDate,
    hst.client_code AS clientCode, hst.result_of_previously_tested_within_12_months AS resultOfPreviouslyTestedIn12Month, hst.name_of_test_kit AS nameOfTestKit, hst.lot_number AS lotNumber,
    hst.expiry_date AS expiryDate, hst.other_test_kit_user_details->0->'basicUserInfo'->>'maritalStatus' AS userMaritalStatus, hst.other_test_kit_user_details->0->'basicUserInfo'->>'userCategory' AS userCategory,
    hst.other_test_kit_user_details->0->'basicUserInfo'->>'sex' AS userSex, hst.other_test_kit_user_details->0->'basicUserInfo'->>'age' AS userAge, hst.other_test_kit_user_details->0->'postTestAssessment'->>'everUsedHivstKit' AS everUsedHivstKit,
    hst.type_of_hivst_kit_received AS typeOfHivstKit, hst.other_test_kit_user_details->0->'postTestAssessment'->>'resultOfHivstTest' AS resultOfHivstTest, '' AS collectorCodeStatus, '' AS entryPoint, '' AS targetGroup, hst.client_code AS collectorCode, hst.other_test_kit_user_details->0->'basicUserInfo'->>'clientCode' AS userClientCode, '' AS phoneNumber, '' AS contactAddress, hst.other_test_kit_user_details->0->'basicUserInfo'->>'typeOfHivst' AS typeOfHivst, '' AS followUp, '' AS referredFor, '' AS facilityRefered, '' AS dateReferred, '' AS receivedConfirmatoryHts, '' As resultConfirmatoryHts,
    '' AS posLinked, '' AS accessPreventionService
    FROM patient_person p
    LEFT JOIN base_organisation_unit facility ON facility.id=facility_id
    LEFT JOIN base_organisation_unit facility_lga ON facility_lga.id=facility.parent_organisation_unit_id
    LEFT JOIN base_organisation_unit facility_state ON facility_state.id=facility_lga.parent_organisation_unit_id
    LEFT JOIN base_organisation_unit_identifier boui ON boui.organisation_unit_id=facility_id AND boui.name='DATIM_ID'
    LEFT JOIN hiv_enrollment he ON he.person_uuid = p.uuid
    LEFT JOIN prep_enrollment PrEP ON PrEP.person_uuid = p.uuid
    LEFT JOIN hts_client hts ON hts.person_uuid = p.uuid
    INNER JOIN hivst hst ON hst.patient_id = p.id
    WHERE p.facility_id='?1' AND p.archived = 0 AND CAST(hst.date_of_visit AS DATE) BETWEEN CAST('?2' AS DATE) AND CAST('?3' AS DATE)
    ) hivst